
Sprint.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000104  00800100  00003968  000039fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003968  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000250  00800204  00800204  00003b00  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003b00  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003b30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00003b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001559  00000000  00000000  00003cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a1  00000000  00000000  00005209  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018fd  00000000  00000000  00005baa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000764  00000000  00000000  000074a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008748  00000000  00000000  00007c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010ca  00000000  00000000  00010354  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  0001141e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002ec3  00000000  00000000  0001153e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 01 	jmp	0x25c	; 0x25c <__ctors_end>
       4:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
       8:	0c 94 93 0c 	jmp	0x1926	; 0x1926 <__vector_2>
       c:	0c 94 16 09 	jmp	0x122c	; 0x122c <__vector_3>
      10:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      14:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__vector_5>
      18:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      1c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      20:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      24:	0c 94 a3 03 	jmp	0x746	; 0x746 <__vector_9>
      28:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      2c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      30:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      34:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      38:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__vector_14>
      3c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      40:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      44:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      48:	0c 94 04 04 	jmp	0x808	; 0x808 <__vector_18>
      4c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      50:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      54:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__vector_21>
      58:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      5c:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      60:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      64:	0c 94 4b 01 	jmp	0x296	; 0x296 <__bad_interrupt>
      68:	71 04       	cpc	r7, r1
      6a:	87 04       	cpc	r8, r7
      6c:	c3 04       	cpc	r12, r3
      6e:	20 05       	cpc	r18, r0
      70:	7d 05       	cpc	r23, r13
      72:	a5 05       	cpc	r26, r5
      74:	e1 05       	cpc	r30, r1
      76:	26 06       	cpc	r2, r22
      78:	6b 06       	cpc	r6, r27
      7a:	7b 06       	cpc	r7, r27

0000007c <CHARSET>:
      7c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      8c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      9c:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      ac:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      bc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      cc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      dc:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      ec:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      fc:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     10c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     11c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     12c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     13c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     14c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     15c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     16c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     17c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     18c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     19c:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1ac:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1bc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1cc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1dc:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1ec:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1fc:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     20c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     21c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     22c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     23c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     24c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000025c <__ctors_end>:
     25c:	11 24       	eor	r1, r1
     25e:	1f be       	out	0x3f, r1	; 63
     260:	cf ef       	ldi	r28, 0xFF	; 255
     262:	d8 e0       	ldi	r29, 0x08	; 8
     264:	de bf       	out	0x3e, r29	; 62
     266:	cd bf       	out	0x3d, r28	; 61

00000268 <__do_copy_data>:
     268:	12 e0       	ldi	r17, 0x02	; 2
     26a:	a0 e0       	ldi	r26, 0x00	; 0
     26c:	b1 e0       	ldi	r27, 0x01	; 1
     26e:	e8 e6       	ldi	r30, 0x68	; 104
     270:	f9 e3       	ldi	r31, 0x39	; 57
     272:	02 c0       	rjmp	.+4      	; 0x278 <__do_copy_data+0x10>
     274:	05 90       	lpm	r0, Z+
     276:	0d 92       	st	X+, r0
     278:	a4 30       	cpi	r26, 0x04	; 4
     27a:	b1 07       	cpc	r27, r17
     27c:	d9 f7       	brne	.-10     	; 0x274 <__do_copy_data+0xc>

0000027e <__do_clear_bss>:
     27e:	24 e0       	ldi	r18, 0x04	; 4
     280:	a4 e0       	ldi	r26, 0x04	; 4
     282:	b2 e0       	ldi	r27, 0x02	; 2
     284:	01 c0       	rjmp	.+2      	; 0x288 <.do_clear_bss_start>

00000286 <.do_clear_bss_loop>:
     286:	1d 92       	st	X+, r1

00000288 <.do_clear_bss_start>:
     288:	a4 35       	cpi	r26, 0x54	; 84
     28a:	b2 07       	cpc	r27, r18
     28c:	e1 f7       	brne	.-8      	; 0x286 <.do_clear_bss_loop>
     28e:	0e 94 4d 01 	call	0x29a	; 0x29a <main>
     292:	0c 94 b2 1c 	jmp	0x3964	; 0x3964 <_exit>

00000296 <__bad_interrupt>:
     296:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000029a <main>:
void readTecl();
void guarda (int, int);
void mudaParametro();

int main(void)
{
     29a:	2f 92       	push	r2
     29c:	3f 92       	push	r3
     29e:	4f 92       	push	r4
     2a0:	5f 92       	push	r5
     2a2:	6f 92       	push	r6
     2a4:	7f 92       	push	r7
     2a6:	8f 92       	push	r8
     2a8:	9f 92       	push	r9
     2aa:	af 92       	push	r10
     2ac:	bf 92       	push	r11
     2ae:	cf 92       	push	r12
     2b0:	df 92       	push	r13
     2b2:	ef 92       	push	r14
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	60 97       	sbiw	r28, 0x10	; 16
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0b11111110; // Pinos da porta B como saídas e entradas
     2ce:	84 e2       	ldi	r24, 0x24	; 36
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	2e ef       	ldi	r18, 0xFE	; 254
     2d4:	fc 01       	movw	r30, r24
     2d6:	20 83       	st	Z, r18
	PORTB = 0b11110001; 
     2d8:	85 e2       	ldi	r24, 0x25	; 37
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	21 ef       	ldi	r18, 0xF1	; 241
     2de:	fc 01       	movw	r30, r24
     2e0:	20 83       	st	Z, r18
	
	DDRC = 0b1111100; // Bits mais significativos da porta C como saída (LCD) e os dois menos como entrada (sensores)
     2e2:	87 e2       	ldi	r24, 0x27	; 39
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	2c e7       	ldi	r18, 0x7C	; 124
     2e8:	fc 01       	movw	r30, r24
     2ea:	20 83       	st	Z, r18

	DDRD = 0b00100000; // Entradas e saídas da porta D
     2ec:	8a e2       	ldi	r24, 0x2A	; 42
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	20 e2       	ldi	r18, 0x20	; 32
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18
	
	PORTD |= 0b11010111; // Ativação de pull-up
     2f6:	8b e2       	ldi	r24, 0x2B	; 43
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	2b e2       	ldi	r18, 0x2B	; 43
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	f9 01       	movw	r30, r18
     300:	20 81       	ld	r18, Z
     302:	27 6d       	ori	r18, 0xD7	; 215
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18
	
	PCICR = 0b00000101; // Interrupção na porta D
     308:	88 e6       	ldi	r24, 0x68	; 104
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	25 e0       	ldi	r18, 0x05	; 5
     30e:	fc 01       	movw	r30, r24
     310:	20 83       	st	Z, r18
	PCMSK2 = 0b11010000; // Interrupção em mudança de D4, D6 ou D7
     312:	8d e6       	ldi	r24, 0x6D	; 109
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	20 ed       	ldi	r18, 0xD0	; 208
     318:	fc 01       	movw	r30, r24
     31a:	20 83       	st	Z, r18
	PCMSK0 = 0b00000001;
     31c:	8b e6       	ldi	r24, 0x6B	; 107
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	21 e0       	ldi	r18, 0x01	; 1
     322:	fc 01       	movw	r30, r24
     324:	20 83       	st	Z, r18
	
	EICRA = 0b00000100; //interrupção externa INT1 na borda de subida
     326:	89 e6       	ldi	r24, 0x69	; 105
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	24 e0       	ldi	r18, 0x04	; 4
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
	EIMSK = 0b00000010;
     330:	8d e3       	ldi	r24, 0x3D	; 61
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	22 e0       	ldi	r18, 0x02	; 2
     336:	fc 01       	movw	r30, r24
     338:	20 83       	st	Z, r18
	
	TCCR0A = 0b00000010; // configura modo CTC, comparando com OCR0A
     33a:	84 e4       	ldi	r24, 0x44	; 68
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	22 e0       	ldi	r18, 0x02	; 2
     340:	fc 01       	movw	r30, r24
     342:	20 83       	st	Z, r18
	TCCR0B = 0b00000011; // liga TC0 com prescaler = 64
     344:	85 e4       	ldi	r24, 0x45	; 69
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	23 e0       	ldi	r18, 0x03	; 3
     34a:	fc 01       	movw	r30, r24
     34c:	20 83       	st	Z, r18
	OCR0A = 249; // ajusta comparador para 249
     34e:	87 e4       	ldi	r24, 0x47	; 71
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	29 ef       	ldi	r18, 0xF9	; 249
     354:	fc 01       	movw	r30, r24
     356:	20 83       	st	Z, r18
	TIMSK0 = 0b00000010; // habilita interrupção
     358:	8e e6       	ldi	r24, 0x6E	; 110
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	22 e0       	ldi	r18, 0x02	; 2
     35e:	fc 01       	movw	r30, r24
     360:	20 83       	st	Z, r18
	
	ICR1 = 39999;
     362:	86 e8       	ldi	r24, 0x86	; 134
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	2f e3       	ldi	r18, 0x3F	; 63
     368:	3c e9       	ldi	r19, 0x9C	; 156
     36a:	fc 01       	movw	r30, r24
     36c:	31 83       	std	Z+1, r19	; 0x01
     36e:	20 83       	st	Z, r18
	TCCR1A = 0b10100010;
     370:	80 e8       	ldi	r24, 0x80	; 128
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	22 ea       	ldi	r18, 0xA2	; 162
     376:	fc 01       	movw	r30, r24
     378:	20 83       	st	Z, r18
	TCCR1B = 0b00011010;
     37a:	81 e8       	ldi	r24, 0x81	; 129
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	2a e1       	ldi	r18, 0x1A	; 26
     380:	fc 01       	movw	r30, r24
     382:	20 83       	st	Z, r18
	
	OCR1A = 2000;
     384:	88 e8       	ldi	r24, 0x88	; 136
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	20 ed       	ldi	r18, 0xD0	; 208
     38a:	37 e0       	ldi	r19, 0x07	; 7
     38c:	fc 01       	movw	r30, r24
     38e:	31 83       	std	Z+1, r19	; 0x01
     390:	20 83       	st	Z, r18
	OCR1B = 2000;
     392:	8a e8       	ldi	r24, 0x8A	; 138
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	20 ed       	ldi	r18, 0xD0	; 208
     398:	37 e0       	ldi	r19, 0x07	; 7
     39a:	fc 01       	movw	r30, r24
     39c:	31 83       	std	Z+1, r19	; 0x01
     39e:	20 83       	st	Z, r18
	
	ADMUX = 0b01000000;
     3a0:	8c e7       	ldi	r24, 0x7C	; 124
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	20 e4       	ldi	r18, 0x40	; 64
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 83       	st	Z, r18
	ADCSRA = 0b11101111;
     3aa:	8a e7       	ldi	r24, 0x7A	; 122
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	2f ee       	ldi	r18, 0xEF	; 239
     3b0:	fc 01       	movw	r30, r24
     3b2:	20 83       	st	Z, r18
	ADCSRB = 0b00000000;
     3b4:	8b e7       	ldi	r24, 0x7B	; 123
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	fc 01       	movw	r30, r24
     3ba:	10 82       	st	Z, r1
	DIDR0 = 0b00111110;
     3bc:	8e e7       	ldi	r24, 0x7E	; 126
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	2e e3       	ldi	r18, 0x3E	; 62
     3c2:	fc 01       	movw	r30, r24
     3c4:	20 83       	st	Z, r18
	
	TCCR2A = 0x00;   //Timer operando em modo normal
     3c6:	80 eb       	ldi	r24, 0xB0	; 176
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	fc 01       	movw	r30, r24
     3cc:	10 82       	st	Z, r1
	TCCR2B = 0x07;   //Prescaler 1:1024
     3ce:	81 eb       	ldi	r24, 0xB1	; 177
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	27 e0       	ldi	r18, 0x07	; 7
     3d4:	fc 01       	movw	r30, r24
     3d6:	20 83       	st	Z, r18
	TCNT2  = 100;    //10 ms overflow again
     3d8:	82 eb       	ldi	r24, 0xB2	; 178
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	24 e6       	ldi	r18, 0x64	; 100
     3de:	fc 01       	movw	r30, r24
     3e0:	20 83       	st	Z, r18
	TIMSK2 = 0x01;   //Habilita interrupção do Timer2
     3e2:	80 e7       	ldi	r24, 0x70	; 112
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	21 e0       	ldi	r18, 0x01	; 1
     3e8:	fc 01       	movw	r30, r24
     3ea:	20 83       	st	Z, r18
	

	USART_init(MYUNRR);
     3ec:	87 e6       	ldi	r24, 0x67	; 103
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <USART_init>
	
	sei(); // Habilita as interrupções
     3f4:	78 94       	sei

	nokia_lcd_init();
     3f6:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <nokia_lcd_init>
	nokia_lcd_clear();
     3fa:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <nokia_lcd_clear>
	vitaisLCD();
     3fe:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <vitaisLCD>

while (1)
{	
	if(PINB == (PINB | 0b00001000)){
     402:	83 e2       	ldi	r24, 0x23	; 35
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	fc 01       	movw	r30, r24
     408:	20 81       	ld	r18, Z
     40a:	83 e2       	ldi	r24, 0x23	; 35
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	fc 01       	movw	r30, r24
     410:	80 81       	ld	r24, Z
     412:	88 60       	ori	r24, 0x08	; 8
     414:	28 17       	cp	r18, r24
     416:	09 f0       	breq	.+2      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     418:	7b c0       	rjmp	.+246    	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	a6 e1       	ldi	r26, 0x16	; 22
     420:	b3 e4       	ldi	r27, 0x43	; 67
     422:	8b 83       	std	Y+3, r24	; 0x03
     424:	9c 83       	std	Y+4, r25	; 0x04
     426:	ad 83       	std	Y+5, r26	; 0x05
     428:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     42a:	20 e0       	ldi	r18, 0x00	; 0
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	4a e7       	ldi	r20, 0x7A	; 122
     430:	55 e4       	ldi	r21, 0x45	; 69
     432:	6b 81       	ldd	r22, Y+3	; 0x03
     434:	7c 81       	ldd	r23, Y+4	; 0x04
     436:	8d 81       	ldd	r24, Y+5	; 0x05
     438:	9e 81       	ldd	r25, Y+6	; 0x06
     43a:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
     43e:	dc 01       	movw	r26, r24
     440:	cb 01       	movw	r24, r22
     442:	8f 83       	std	Y+7, r24	; 0x07
     444:	98 87       	std	Y+8, r25	; 0x08
     446:	a9 87       	std	Y+9, r26	; 0x09
     448:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	40 e8       	ldi	r20, 0x80	; 128
     450:	5f e3       	ldi	r21, 0x3F	; 63
     452:	6f 81       	ldd	r22, Y+7	; 0x07
     454:	78 85       	ldd	r23, Y+8	; 0x08
     456:	89 85       	ldd	r24, Y+9	; 0x09
     458:	9a 85       	ldd	r25, Y+10	; 0x0a
     45a:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
     45e:	88 23       	and	r24, r24
     460:	2c f4       	brge	.+10     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
		__ticks = 1;
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	9c 87       	std	Y+12, r25	; 0x0c
     468:	8b 87       	std	Y+11, r24	; 0x0b
     46a:	3f c0       	rjmp	.+126    	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
	else if (__tmp > 65535)
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	3f ef       	ldi	r19, 0xFF	; 255
     470:	4f e7       	ldi	r20, 0x7F	; 127
     472:	57 e4       	ldi	r21, 0x47	; 71
     474:	6f 81       	ldd	r22, Y+7	; 0x07
     476:	78 85       	ldd	r23, Y+8	; 0x08
     478:	89 85       	ldd	r24, Y+9	; 0x09
     47a:	9a 85       	ldd	r25, Y+10	; 0x0a
     47c:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
     480:	18 16       	cp	r1, r24
     482:	4c f5       	brge	.+82     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	40 e2       	ldi	r20, 0x20	; 32
     48a:	51 e4       	ldi	r21, 0x41	; 65
     48c:	6b 81       	ldd	r22, Y+3	; 0x03
     48e:	7c 81       	ldd	r23, Y+4	; 0x04
     490:	8d 81       	ldd	r24, Y+5	; 0x05
     492:	9e 81       	ldd	r25, Y+6	; 0x06
     494:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	bc 01       	movw	r22, r24
     49e:	cd 01       	movw	r24, r26
     4a0:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	9c 87       	std	Y+12, r25	; 0x0c
     4aa:	8b 87       	std	Y+11, r24	; 0x0b
     4ac:	0f c0       	rjmp	.+30     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
     4ae:	80 e9       	ldi	r24, 0x90	; 144
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	9e 87       	std	Y+14, r25	; 0x0e
     4b4:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4b6:	8d 85       	ldd	r24, Y+13	; 0x0d
     4b8:	9e 85       	ldd	r25, Y+14	; 0x0e
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4be:	9e 87       	std	Y+14, r25	; 0x0e
     4c0:	8d 87       	std	Y+13, r24	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c2:	8b 85       	ldd	r24, Y+11	; 0x0b
     4c4:	9c 85       	ldd	r25, Y+12	; 0x0c
     4c6:	01 97       	sbiw	r24, 0x01	; 1
     4c8:	9c 87       	std	Y+12, r25	; 0x0c
     4ca:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4cc:	8b 85       	ldd	r24, Y+11	; 0x0b
     4ce:	9c 85       	ldd	r25, Y+12	; 0x0c
     4d0:	89 2b       	or	r24, r25
     4d2:	69 f7       	brne	.-38     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
     4d4:	14 c0       	rjmp	.+40     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4d6:	6f 81       	ldd	r22, Y+7	; 0x07
     4d8:	78 85       	ldd	r23, Y+8	; 0x08
     4da:	89 85       	ldd	r24, Y+9	; 0x09
     4dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     4de:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
     4e2:	dc 01       	movw	r26, r24
     4e4:	cb 01       	movw	r24, r22
     4e6:	9c 87       	std	Y+12, r25	; 0x0c
     4e8:	8b 87       	std	Y+11, r24	; 0x0b
     4ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     4ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     4ee:	98 8b       	std	Y+16, r25	; 0x10
     4f0:	8f 87       	std	Y+15, r24	; 0x0f
     4f2:	8f 85       	ldd	r24, Y+15	; 0x0f
     4f4:	98 89       	ldd	r25, Y+16	; 0x10
     4f6:	01 97       	sbiw	r24, 0x01	; 1
     4f8:	f1 f7       	brne	.-4      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
     4fa:	98 8b       	std	Y+16, r25	; 0x10
     4fc:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(150);
		PORTB = (PORTB & 0b11110111);
     4fe:	85 e2       	ldi	r24, 0x25	; 37
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	25 e2       	ldi	r18, 0x25	; 37
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	f9 01       	movw	r30, r18
     508:	20 81       	ld	r18, Z
     50a:	27 7f       	andi	r18, 0xF7	; 247
     50c:	fc 01       	movw	r30, r24
     50e:	20 83       	st	Z, r18
	}
	
	if (tempo_ms%200==0){
     510:	20 90 0e 02 	lds	r2, 0x020E	; 0x80020e <tempo_ms>
     514:	30 90 0f 02 	lds	r3, 0x020F	; 0x80020f <tempo_ms+0x1>
     518:	40 90 10 02 	lds	r4, 0x0210	; 0x800210 <tempo_ms+0x2>
     51c:	50 90 11 02 	lds	r5, 0x0211	; 0x800211 <tempo_ms+0x3>
     520:	60 90 12 02 	lds	r6, 0x0212	; 0x800212 <tempo_ms+0x4>
     524:	70 90 13 02 	lds	r7, 0x0213	; 0x800213 <tempo_ms+0x5>
     528:	80 90 14 02 	lds	r8, 0x0214	; 0x800214 <tempo_ms+0x6>
     52c:	90 90 15 02 	lds	r9, 0x0215	; 0x800215 <tempo_ms+0x7>
     530:	0f 2e       	mov	r0, r31
     532:	f8 ec       	ldi	r31, 0xC8	; 200
     534:	af 2e       	mov	r10, r31
     536:	f0 2d       	mov	r31, r0
     538:	b1 2c       	mov	r11, r1
     53a:	c1 2c       	mov	r12, r1
     53c:	d1 2c       	mov	r13, r1
     53e:	e1 2c       	mov	r14, r1
     540:	f1 2c       	mov	r15, r1
     542:	00 e0       	ldi	r16, 0x00	; 0
     544:	10 e0       	ldi	r17, 0x00	; 0
     546:	22 2d       	mov	r18, r2
     548:	33 2d       	mov	r19, r3
     54a:	44 2d       	mov	r20, r4
     54c:	55 2d       	mov	r21, r5
     54e:	66 2d       	mov	r22, r6
     550:	77 2d       	mov	r23, r7
     552:	88 2d       	mov	r24, r8
     554:	99 2d       	mov	r25, r9
     556:	0e 94 0c 1b 	call	0x3618	; 0x3618 <__moddi3>
     55a:	22 2e       	mov	r2, r18
     55c:	33 2e       	mov	r3, r19
     55e:	44 2e       	mov	r4, r20
     560:	55 2e       	mov	r5, r21
     562:	66 2e       	mov	r6, r22
     564:	77 2e       	mov	r7, r23
     566:	88 2e       	mov	r8, r24
     568:	99 2e       	mov	r9, r25
     56a:	a2 2c       	mov	r10, r2
     56c:	b3 2c       	mov	r11, r3
     56e:	c4 2c       	mov	r12, r4
     570:	d5 2c       	mov	r13, r5
     572:	e6 2c       	mov	r14, r6
     574:	f7 2c       	mov	r15, r7
     576:	08 2d       	mov	r16, r8
     578:	19 2d       	mov	r17, r9
     57a:	2a 2d       	mov	r18, r10
     57c:	3b 2d       	mov	r19, r11
     57e:	4c 2d       	mov	r20, r12
     580:	5d 2d       	mov	r21, r13
     582:	6e 2d       	mov	r22, r14
     584:	7f 2d       	mov	r23, r15
     586:	80 2f       	mov	r24, r16
     588:	91 2f       	mov	r25, r17
     58a:	a0 e0       	ldi	r26, 0x00	; 0
     58c:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__cmpdi2_s8>
     590:	21 f4       	brne	.+8      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
		convLeitura();
     592:	0e 94 27 08 	call	0x104e	; 0x104e <convLeitura>
		atualizaLCD();
     596:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <atualizaLCD>
	}
	if (tempo_ms>start_T+(2*half_T)+200){
     59a:	a0 90 0e 02 	lds	r10, 0x020E	; 0x80020e <tempo_ms>
     59e:	b0 90 0f 02 	lds	r11, 0x020F	; 0x80020f <tempo_ms+0x1>
     5a2:	c0 90 10 02 	lds	r12, 0x0210	; 0x800210 <tempo_ms+0x2>
     5a6:	d0 90 11 02 	lds	r13, 0x0211	; 0x800211 <tempo_ms+0x3>
     5aa:	e0 90 12 02 	lds	r14, 0x0212	; 0x800212 <tempo_ms+0x4>
     5ae:	f0 90 13 02 	lds	r15, 0x0213	; 0x800213 <tempo_ms+0x5>
     5b2:	00 91 14 02 	lds	r16, 0x0214	; 0x800214 <tempo_ms+0x6>
     5b6:	10 91 15 02 	lds	r17, 0x0215	; 0x800215 <tempo_ms+0x7>
     5ba:	2a 2d       	mov	r18, r10
     5bc:	3b 2d       	mov	r19, r11
     5be:	4c 2d       	mov	r20, r12
     5c0:	5d 2d       	mov	r21, r13
     5c2:	6e 2d       	mov	r22, r14
     5c4:	7f 2d       	mov	r23, r15
     5c6:	80 2f       	mov	r24, r16
     5c8:	91 2f       	mov	r25, r17
     5ca:	0e 94 4f 19 	call	0x329e	; 0x329e <__floatdisf>
     5ce:	3b 01       	movw	r6, r22
     5d0:	4c 01       	movw	r8, r24
     5d2:	a0 90 3c 04 	lds	r10, 0x043C	; 0x80043c <start_T>
     5d6:	b0 90 3d 04 	lds	r11, 0x043D	; 0x80043d <start_T+0x1>
     5da:	c0 90 3e 04 	lds	r12, 0x043E	; 0x80043e <start_T+0x2>
     5de:	d0 90 3f 04 	lds	r13, 0x043F	; 0x80043f <start_T+0x3>
     5e2:	e0 90 40 04 	lds	r14, 0x0440	; 0x800440 <start_T+0x4>
     5e6:	f0 90 41 04 	lds	r15, 0x0441	; 0x800441 <start_T+0x5>
     5ea:	00 91 42 04 	lds	r16, 0x0442	; 0x800442 <start_T+0x6>
     5ee:	10 91 43 04 	lds	r17, 0x0443	; 0x800443 <start_T+0x7>
     5f2:	2a 2d       	mov	r18, r10
     5f4:	3b 2d       	mov	r19, r11
     5f6:	4c 2d       	mov	r20, r12
     5f8:	5d 2d       	mov	r21, r13
     5fa:	6e 2d       	mov	r22, r14
     5fc:	7f 2d       	mov	r23, r15
     5fe:	80 2f       	mov	r24, r16
     600:	91 2f       	mov	r25, r17
     602:	0e 94 4f 19 	call	0x329e	; 0x329e <__floatdisf>
     606:	6b 01       	movw	r12, r22
     608:	7c 01       	movw	r14, r24
     60a:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <half_T>
     60e:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <half_T+0x1>
     612:	a0 91 48 04 	lds	r26, 0x0448	; 0x800448 <half_T+0x2>
     616:	b0 91 49 04 	lds	r27, 0x0449	; 0x800449 <half_T+0x3>
     61a:	9c 01       	movw	r18, r24
     61c:	ad 01       	movw	r20, r26
     61e:	bc 01       	movw	r22, r24
     620:	cd 01       	movw	r24, r26
     622:	0e 94 36 18 	call	0x306c	; 0x306c <__addsf3>
     626:	dc 01       	movw	r26, r24
     628:	cb 01       	movw	r24, r22
     62a:	9c 01       	movw	r18, r24
     62c:	ad 01       	movw	r20, r26
     62e:	c7 01       	movw	r24, r14
     630:	b6 01       	movw	r22, r12
     632:	0e 94 36 18 	call	0x306c	; 0x306c <__addsf3>
     636:	dc 01       	movw	r26, r24
     638:	cb 01       	movw	r24, r22
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	48 e4       	ldi	r20, 0x48	; 72
     640:	53 e4       	ldi	r21, 0x43	; 67
     642:	bc 01       	movw	r22, r24
     644:	cd 01       	movw	r24, r26
     646:	0e 94 36 18 	call	0x306c	; 0x306c <__addsf3>
     64a:	dc 01       	movw	r26, r24
     64c:	cb 01       	movw	r24, r22
     64e:	9c 01       	movw	r18, r24
     650:	ad 01       	movw	r20, r26
     652:	c4 01       	movw	r24, r8
     654:	b3 01       	movw	r22, r6
     656:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
     65a:	18 16       	cp	r1, r24
     65c:	0c f0       	brlt	.+2      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
     65e:	72 c0       	rjmp	.+228    	; 0x744 <__EEPROM_REGION_LENGTH__+0x344>
		final_T = tempo_ms;
     660:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <tempo_ms>
     664:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <tempo_ms+0x1>
     668:	40 91 10 02 	lds	r20, 0x0210	; 0x800210 <tempo_ms+0x2>
     66c:	50 91 11 02 	lds	r21, 0x0211	; 0x800211 <tempo_ms+0x3>
     670:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <tempo_ms+0x4>
     674:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <tempo_ms+0x5>
     678:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <tempo_ms+0x6>
     67c:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <tempo_ms+0x7>
     680:	20 93 4c 04 	sts	0x044C, r18	; 0x80044c <final_T>
     684:	30 93 4d 04 	sts	0x044D, r19	; 0x80044d <final_T+0x1>
     688:	40 93 4e 04 	sts	0x044E, r20	; 0x80044e <final_T+0x2>
     68c:	50 93 4f 04 	sts	0x044F, r21	; 0x80044f <final_T+0x3>
     690:	60 93 50 04 	sts	0x0450, r22	; 0x800450 <final_T+0x4>
     694:	70 93 51 04 	sts	0x0451, r23	; 0x800451 <final_T+0x5>
     698:	80 93 52 04 	sts	0x0452, r24	; 0x800452 <final_T+0x6>
     69c:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <final_T+0x7>
		int T = final_T - start_T; // período em ms
     6a0:	20 91 4c 04 	lds	r18, 0x044C	; 0x80044c <final_T>
     6a4:	30 91 4d 04 	lds	r19, 0x044D	; 0x80044d <final_T+0x1>
     6a8:	40 91 4e 04 	lds	r20, 0x044E	; 0x80044e <final_T+0x2>
     6ac:	50 91 4f 04 	lds	r21, 0x044F	; 0x80044f <final_T+0x3>
     6b0:	60 91 50 04 	lds	r22, 0x0450	; 0x800450 <final_T+0x4>
     6b4:	70 91 51 04 	lds	r23, 0x0451	; 0x800451 <final_T+0x5>
     6b8:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <final_T+0x6>
     6bc:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <final_T+0x7>
     6c0:	f9 01       	movw	r30, r18
     6c2:	20 91 3c 04 	lds	r18, 0x043C	; 0x80043c <start_T>
     6c6:	30 91 3d 04 	lds	r19, 0x043D	; 0x80043d <start_T+0x1>
     6ca:	40 91 3e 04 	lds	r20, 0x043E	; 0x80043e <start_T+0x2>
     6ce:	50 91 3f 04 	lds	r21, 0x043F	; 0x80043f <start_T+0x3>
     6d2:	60 91 40 04 	lds	r22, 0x0440	; 0x800440 <start_T+0x4>
     6d6:	70 91 41 04 	lds	r23, 0x0441	; 0x800441 <start_T+0x5>
     6da:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <start_T+0x6>
     6de:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <start_T+0x7>
     6e2:	c9 01       	movw	r24, r18
     6e4:	9f 01       	movw	r18, r30
     6e6:	28 1b       	sub	r18, r24
     6e8:	39 0b       	sbc	r19, r25
     6ea:	c9 01       	movw	r24, r18
     6ec:	9a 83       	std	Y+2, r25	; 0x02
     6ee:	89 83       	std	Y+1, r24	; 0x01
		FreqCardio = (1.0/T)*60000; // conversão de KHz para bpm
     6f0:	89 81       	ldd	r24, Y+1	; 0x01
     6f2:	9a 81       	ldd	r25, Y+2	; 0x02
     6f4:	09 2e       	mov	r0, r25
     6f6:	00 0c       	add	r0, r0
     6f8:	aa 0b       	sbc	r26, r26
     6fa:	bb 0b       	sbc	r27, r27
     6fc:	bc 01       	movw	r22, r24
     6fe:	cd 01       	movw	r24, r26
     700:	0e 94 57 19 	call	0x32ae	; 0x32ae <__floatsisf>
     704:	dc 01       	movw	r26, r24
     706:	cb 01       	movw	r24, r22
     708:	9c 01       	movw	r18, r24
     70a:	ad 01       	movw	r20, r26
     70c:	60 e0       	ldi	r22, 0x00	; 0
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	80 e8       	ldi	r24, 0x80	; 128
     712:	9f e3       	ldi	r25, 0x3F	; 63
     714:	0e 94 a7 18 	call	0x314e	; 0x314e <__divsf3>
     718:	dc 01       	movw	r26, r24
     71a:	cb 01       	movw	r24, r22
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e6       	ldi	r19, 0x60	; 96
     720:	4a e6       	ldi	r20, 0x6A	; 106
     722:	57 e4       	ldi	r21, 0x47	; 71
     724:	bc 01       	movw	r22, r24
     726:	cd 01       	movw	r24, r26
     728:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
     72c:	dc 01       	movw	r26, r24
     72e:	cb 01       	movw	r24, r22
     730:	bc 01       	movw	r22, r24
     732:	cd 01       	movw	r24, r26
     734:	0e 94 19 19 	call	0x3232	; 0x3232 <__fixsfsi>
     738:	dc 01       	movw	r26, r24
     73a:	cb 01       	movw	r24, r22
     73c:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <FreqCardio+0x1>
     740:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <FreqCardio>
	}
}
     744:	5e ce       	rjmp	.-836    	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>

00000746 <__vector_9>:
}

ISR(TIMER2_OVF_vect)
{
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     74e:	0f 92       	push	r0
     750:	11 24       	eor	r1, r1
     752:	2f 93       	push	r18
     754:	3f 93       	push	r19
     756:	4f 93       	push	r20
     758:	5f 93       	push	r21
     75a:	6f 93       	push	r22
     75c:	7f 93       	push	r23
     75e:	8f 93       	push	r24
     760:	9f 93       	push	r25
     762:	af 93       	push	r26
     764:	bf 93       	push	r27
     766:	ef 93       	push	r30
     768:	ff 93       	push	r31
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	cd b7       	in	r28, 0x3d	; 61
     770:	de b7       	in	r29, 0x3e	; 62
	TCNT2=100;         
     772:	82 eb       	ldi	r24, 0xB2	; 178
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	24 e6       	ldi	r18, 0x64	; 100
     778:	fc 01       	movw	r30, r24
     77a:	20 83       	st	Z, r18
	counter++;         
     77c:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <counter>
     780:	8f 5f       	subi	r24, 0xFF	; 255
     782:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <counter>
	
	if(counter == 0x05) 
     786:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <counter>
     78a:	85 30       	cpi	r24, 0x05	; 5
     78c:	21 f4       	brne	.+8      	; 0x796 <__vector_9+0x50>
	{                  
		counter = 0x00;  
     78e:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <counter>
		readTecl(); 
     792:	0e 94 ca 11 	call	0x2394	; 0x2394 <readTecl>
	} //end if counter
	

}
     796:	00 00       	nop
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	ff 91       	pop	r31
     79e:	ef 91       	pop	r30
     7a0:	bf 91       	pop	r27
     7a2:	af 91       	pop	r26
     7a4:	9f 91       	pop	r25
     7a6:	8f 91       	pop	r24
     7a8:	7f 91       	pop	r23
     7aa:	6f 91       	pop	r22
     7ac:	5f 91       	pop	r21
     7ae:	4f 91       	pop	r20
     7b0:	3f 91       	pop	r19
     7b2:	2f 91       	pop	r18
     7b4:	0f 90       	pop	r0
     7b6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     7ba:	0f 90       	pop	r0
     7bc:	1f 90       	pop	r1
     7be:	18 95       	reti

000007c0 <USART_init>:

void USART_init(unsigned int ubrr){
     7c0:	cf 93       	push	r28
     7c2:	df 93       	push	r29
     7c4:	00 d0       	rcall	.+0      	; 0x7c6 <USART_init+0x6>
     7c6:	cd b7       	in	r28, 0x3d	; 61
     7c8:	de b7       	in	r29, 0x3e	; 62
     7ca:	9a 83       	std	Y+2, r25	; 0x02
     7cc:	89 83       	std	Y+1, r24	; 0x01
	UBRR0H = (unsigned char)(ubrr>>8);
     7ce:	85 ec       	ldi	r24, 0xC5	; 197
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	29 81       	ldd	r18, Y+1	; 0x01
     7d4:	3a 81       	ldd	r19, Y+2	; 0x02
     7d6:	23 2f       	mov	r18, r19
     7d8:	33 27       	eor	r19, r19
     7da:	fc 01       	movw	r30, r24
     7dc:	20 83       	st	Z, r18
	UBRR0L = (unsigned char)ubrr;
     7de:	84 ec       	ldi	r24, 0xC4	; 196
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	29 81       	ldd	r18, Y+1	; 0x01
     7e4:	fc 01       	movw	r30, r24
     7e6:	20 83       	st	Z, r18
	UCSR0B = 0b10011000;
     7e8:	81 ec       	ldi	r24, 0xC1	; 193
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	28 e9       	ldi	r18, 0x98	; 152
     7ee:	fc 01       	movw	r30, r24
     7f0:	20 83       	st	Z, r18
	UCSR0C = 0b00000110;
     7f2:	82 ec       	ldi	r24, 0xC2	; 194
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	26 e0       	ldi	r18, 0x06	; 6
     7f8:	fc 01       	movw	r30, r24
     7fa:	20 83       	st	Z, r18
}
     7fc:	00 00       	nop
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	08 95       	ret

00000808 <__vector_18>:

ISR(USART_RX_vect){
     808:	1f 92       	push	r1
     80a:	0f 92       	push	r0
     80c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     810:	0f 92       	push	r0
     812:	11 24       	eor	r1, r1
     814:	2f 93       	push	r18
     816:	3f 93       	push	r19
     818:	4f 93       	push	r20
     81a:	5f 93       	push	r21
     81c:	6f 93       	push	r22
     81e:	7f 93       	push	r23
     820:	8f 93       	push	r24
     822:	9f 93       	push	r25
     824:	af 93       	push	r26
     826:	bf 93       	push	r27
     828:	ef 93       	push	r30
     82a:	ff 93       	push	r31
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	cd b7       	in	r28, 0x3d	; 61
     832:	de b7       	in	r29, 0x3e	; 62
	dado = UDR0;
     834:	86 ec       	ldi	r24, 0xC6	; 198
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	fc 01       	movw	r30, r24
     83a:	80 81       	ld	r24, Z
     83c:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <dado>
	analise(fluxo(informacao), informacao);
     840:	8a e3       	ldi	r24, 0x3A	; 58
     842:	91 e0       	ldi	r25, 0x01	; 1
     844:	0e 94 3d 04 	call	0x87a	; 0x87a <fluxo>
     848:	6a e3       	ldi	r22, 0x3A	; 58
     84a:	71 e0       	ldi	r23, 0x01	; 1
     84c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <analise>
}
     850:	00 00       	nop
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	ff 91       	pop	r31
     858:	ef 91       	pop	r30
     85a:	bf 91       	pop	r27
     85c:	af 91       	pop	r26
     85e:	9f 91       	pop	r25
     860:	8f 91       	pop	r24
     862:	7f 91       	pop	r23
     864:	6f 91       	pop	r22
     866:	5f 91       	pop	r21
     868:	4f 91       	pop	r20
     86a:	3f 91       	pop	r19
     86c:	2f 91       	pop	r18
     86e:	0f 90       	pop	r0
     870:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     874:	0f 90       	pop	r0
     876:	1f 90       	pop	r1
     878:	18 95       	reti

0000087a <fluxo>:

int fluxo(char informacao[]){
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	cd b7       	in	r28, 0x3d	; 61
     880:	de b7       	in	r29, 0x3e	; 62
     882:	69 97       	sbiw	r28, 0x19	; 25
     884:	0f b6       	in	r0, 0x3f	; 63
     886:	f8 94       	cli
     888:	de bf       	out	0x3e, r29	; 62
     88a:	0f be       	out	0x3f, r0	; 63
     88c:	cd bf       	out	0x3d, r28	; 61
     88e:	99 8f       	std	Y+25, r25	; 0x19
     890:	88 8f       	std	Y+24, r24	; 0x18
	char n[11] = "0123456789";
     892:	8b e0       	ldi	r24, 0x0B	; 11
     894:	e2 e5       	ldi	r30, 0x52	; 82
     896:	f1 e0       	ldi	r31, 0x01	; 1
     898:	de 01       	movw	r26, r28
     89a:	1d 96       	adiw	r26, 0x0d	; 13
     89c:	01 90       	ld	r0, Z+
     89e:	0d 92       	st	X+, r0
     8a0:	8a 95       	dec	r24
     8a2:	e1 f7       	brne	.-8      	; 0x89c <fluxo+0x22>
	estagio = futuro;
     8a4:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <futuro>
     8a8:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <futuro+0x1>
     8ac:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <estagio+0x1>
     8b0:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <estagio>
	
	switch(estagio){
     8b4:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <estagio>
     8b8:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <estagio+0x1>
     8bc:	09 2e       	mov	r0, r25
     8be:	00 0c       	add	r0, r0
     8c0:	aa 0b       	sbc	r26, r26
     8c2:	bb 0b       	sbc	r27, r27
     8c4:	40 e0       	ldi	r20, 0x00	; 0
     8c6:	50 e0       	ldi	r21, 0x00	; 0
     8c8:	29 e0       	ldi	r18, 0x09	; 9
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	84 1b       	sub	r24, r20
     8ce:	95 0b       	sbc	r25, r21
     8d0:	28 17       	cp	r18, r24
     8d2:	39 07       	cpc	r19, r25
     8d4:	08 f4       	brcc	.+2      	; 0x8d8 <fluxo+0x5e>
     8d6:	25 c2       	rjmp	.+1098   	; 0xd22 <__stack+0x423>
     8d8:	8c 5c       	subi	r24, 0xCC	; 204
     8da:	9f 4f       	sbci	r25, 0xFF	; 255
     8dc:	fc 01       	movw	r30, r24
     8de:	0c 94 06 1b 	jmp	0x360c	; 0x360c <__tablejump2__>
	
	case 0: // INICIO DO PACOTE
		i = 0;
     8e2:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <i+0x1>
     8e6:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i>
		if(dado == ';') futuro = 1;
     8ea:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     8ee:	8b 33       	cpi	r24, 0x3B	; 59
     8f0:	39 f4       	brne	.+14     	; 0x900 <__stack+0x1>
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     8fa:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		else futuro = 9;
		break;
     8fe:	11 c2       	rjmp	.+1058   	; 0xd22 <__stack+0x423>
	switch(estagio){
	
	case 0: // INICIO DO PACOTE
		i = 0;
		if(dado == ';') futuro = 1;
		else futuro = 9;
     900:	89 e0       	ldi	r24, 0x09	; 9
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     908:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		break;
     90c:	0a c2       	rjmp	.+1044   	; 0xd22 <__stack+0x423>
	
	case 1://H1
		futuro = 9;
     90e:	89 e0       	ldi	r24, 0x09	; 9
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     916:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     91a:	1a 82       	std	Y+2, r1	; 0x02
     91c:	19 82       	std	Y+1, r1	; 0x01
     91e:	2e c0       	rjmp	.+92     	; 0x97c <__stack+0x7d>
			if(dado == n[j]){
     920:	9e 01       	movw	r18, r28
     922:	23 5f       	subi	r18, 0xF3	; 243
     924:	3f 4f       	sbci	r19, 0xFF	; 255
     926:	89 81       	ldd	r24, Y+1	; 0x01
     928:	9a 81       	ldd	r25, Y+2	; 0x02
     92a:	82 0f       	add	r24, r18
     92c:	93 1f       	adc	r25, r19
     92e:	fc 01       	movw	r30, r24
     930:	90 81       	ld	r25, Z
     932:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     936:	98 17       	cp	r25, r24
     938:	e1 f4       	brne	.+56     	; 0x972 <__stack+0x73>
				futuro = 2;
     93a:	82 e0       	ldi	r24, 0x02	; 2
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     942:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     946:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     94a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     94e:	9c 01       	movw	r18, r24
     950:	88 8d       	ldd	r24, Y+24	; 0x18
     952:	99 8d       	ldd	r25, Y+25	; 0x19
     954:	82 0f       	add	r24, r18
     956:	93 1f       	adc	r25, r19
     958:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     95c:	fc 01       	movw	r30, r24
     95e:	20 83       	st	Z, r18
				i++;
     960:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     964:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     968:	01 96       	adiw	r24, 0x01	; 1
     96a:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     96e:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
		else futuro = 9;
		break;
	
	case 1://H1
		futuro = 9;
		for(int j = 0;j < 10;j++){
     972:	89 81       	ldd	r24, Y+1	; 0x01
     974:	9a 81       	ldd	r25, Y+2	; 0x02
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	9a 83       	std	Y+2, r25	; 0x02
     97a:	89 83       	std	Y+1, r24	; 0x01
     97c:	89 81       	ldd	r24, Y+1	; 0x01
     97e:	9a 81       	ldd	r25, Y+2	; 0x02
     980:	0a 97       	sbiw	r24, 0x0a	; 10
     982:	74 f2       	brlt	.-100    	; 0x920 <__stack+0x21>
				futuro = 2;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     984:	ce c1       	rjmp	.+924    	; 0xd22 <__stack+0x423>
	
	case 2: //H2
		if(dado == 'x'){
     986:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     98a:	88 37       	cpi	r24, 0x78	; 120
     98c:	e9 f4       	brne	.+58     	; 0x9c8 <__stack+0xc9>
			futuro = 5;
     98e:	85 e0       	ldi	r24, 0x05	; 5
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     996:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
			informacao[i] = dado;
     99a:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     99e:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     9a2:	9c 01       	movw	r18, r24
     9a4:	88 8d       	ldd	r24, Y+24	; 0x18
     9a6:	99 8d       	ldd	r25, Y+25	; 0x19
     9a8:	82 0f       	add	r24, r18
     9aa:	93 1f       	adc	r25, r19
     9ac:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
			i++;
     9b4:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     9b8:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     9bc:	01 96       	adiw	r24, 0x01	; 1
     9be:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     9c2:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
     9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <__stack+0xd5>
		}
		else futuro = 9;
     9c8:	89 e0       	ldi	r24, 0x09	; 9
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     9d0:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     9d4:	1c 82       	std	Y+4, r1	; 0x04
     9d6:	1b 82       	std	Y+3, r1	; 0x03
     9d8:	2e c0       	rjmp	.+92     	; 0xa36 <__stack+0x137>
			if(dado == n[j]){
     9da:	9e 01       	movw	r18, r28
     9dc:	23 5f       	subi	r18, 0xF3	; 243
     9de:	3f 4f       	sbci	r19, 0xFF	; 255
     9e0:	8b 81       	ldd	r24, Y+3	; 0x03
     9e2:	9c 81       	ldd	r25, Y+4	; 0x04
     9e4:	82 0f       	add	r24, r18
     9e6:	93 1f       	adc	r25, r19
     9e8:	fc 01       	movw	r30, r24
     9ea:	90 81       	ld	r25, Z
     9ec:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     9f0:	98 17       	cp	r25, r24
     9f2:	e1 f4       	brne	.+56     	; 0xa2c <__stack+0x12d>
				futuro = 3;
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     9fc:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     a00:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     a04:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     a08:	9c 01       	movw	r18, r24
     a0a:	88 8d       	ldd	r24, Y+24	; 0x18
     a0c:	99 8d       	ldd	r25, Y+25	; 0x19
     a0e:	82 0f       	add	r24, r18
     a10:	93 1f       	adc	r25, r19
     a12:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     a16:	fc 01       	movw	r30, r24
     a18:	20 83       	st	Z, r18
				i++;
     a1a:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     a1e:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     a28:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
			futuro = 5;
			informacao[i] = dado;
			i++;
		}
		else futuro = 9;
		for(int j = 0;j < 10;j++){
     a2c:	8b 81       	ldd	r24, Y+3	; 0x03
     a2e:	9c 81       	ldd	r25, Y+4	; 0x04
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	9c 83       	std	Y+4, r25	; 0x04
     a34:	8b 83       	std	Y+3, r24	; 0x03
     a36:	8b 81       	ldd	r24, Y+3	; 0x03
     a38:	9c 81       	ldd	r25, Y+4	; 0x04
     a3a:	0a 97       	sbiw	r24, 0x0a	; 10
     a3c:	74 f2       	brlt	.-100    	; 0x9da <__stack+0xdb>
				futuro = 3;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     a3e:	71 c1       	rjmp	.+738    	; 0xd22 <__stack+0x423>
	
	case 3: // H3
		if(dado == 'x'){
     a40:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     a44:	88 37       	cpi	r24, 0x78	; 120
     a46:	e9 f4       	brne	.+58     	; 0xa82 <__stack+0x183>
			futuro = 5;
     a48:	85 e0       	ldi	r24, 0x05	; 5
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     a50:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
			informacao[i] = dado;
     a54:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     a58:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     a5c:	9c 01       	movw	r18, r24
     a5e:	88 8d       	ldd	r24, Y+24	; 0x18
     a60:	99 8d       	ldd	r25, Y+25	; 0x19
     a62:	82 0f       	add	r24, r18
     a64:	93 1f       	adc	r25, r19
     a66:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     a6a:	fc 01       	movw	r30, r24
     a6c:	20 83       	st	Z, r18
			i++;
     a6e:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     a72:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     a7c:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
     a80:	06 c0       	rjmp	.+12     	; 0xa8e <__stack+0x18f>
		}
		else futuro = 9;
     a82:	89 e0       	ldi	r24, 0x09	; 9
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     a8a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     a8e:	1e 82       	std	Y+6, r1	; 0x06
     a90:	1d 82       	std	Y+5, r1	; 0x05
     a92:	2e c0       	rjmp	.+92     	; 0xaf0 <__stack+0x1f1>
			if(dado == n[j]){
     a94:	9e 01       	movw	r18, r28
     a96:	23 5f       	subi	r18, 0xF3	; 243
     a98:	3f 4f       	sbci	r19, 0xFF	; 255
     a9a:	8d 81       	ldd	r24, Y+5	; 0x05
     a9c:	9e 81       	ldd	r25, Y+6	; 0x06
     a9e:	82 0f       	add	r24, r18
     aa0:	93 1f       	adc	r25, r19
     aa2:	fc 01       	movw	r30, r24
     aa4:	90 81       	ld	r25, Z
     aa6:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     aaa:	98 17       	cp	r25, r24
     aac:	e1 f4       	brne	.+56     	; 0xae6 <__stack+0x1e7>
				futuro = 4;
     aae:	84 e0       	ldi	r24, 0x04	; 4
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     ab6:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     aba:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     abe:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     ac2:	9c 01       	movw	r18, r24
     ac4:	88 8d       	ldd	r24, Y+24	; 0x18
     ac6:	99 8d       	ldd	r25, Y+25	; 0x19
     ac8:	82 0f       	add	r24, r18
     aca:	93 1f       	adc	r25, r19
     acc:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18
				i++;
     ad4:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     ad8:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     ae2:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
			futuro = 5;
			informacao[i] = dado;
			i++;
		}
		else futuro = 9;
		for(int j = 0;j < 10;j++){
     ae6:	8d 81       	ldd	r24, Y+5	; 0x05
     ae8:	9e 81       	ldd	r25, Y+6	; 0x06
     aea:	01 96       	adiw	r24, 0x01	; 1
     aec:	9e 83       	std	Y+6, r25	; 0x06
     aee:	8d 83       	std	Y+5, r24	; 0x05
     af0:	8d 81       	ldd	r24, Y+5	; 0x05
     af2:	9e 81       	ldd	r25, Y+6	; 0x06
     af4:	0a 97       	sbiw	r24, 0x0a	; 10
     af6:	74 f2       	brlt	.-100    	; 0xa94 <__stack+0x195>
				futuro = 4;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     af8:	14 c1       	rjmp	.+552    	; 0xd22 <__stack+0x423>
			
	case 4:// x
		if(dado == 'x'){
     afa:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     afe:	88 37       	cpi	r24, 0x78	; 120
     b00:	e9 f4       	brne	.+58     	; 0xb3c <__stack+0x23d>
			futuro = 5;
     b02:	85 e0       	ldi	r24, 0x05	; 5
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     b0a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
			informacao[i] = dado;
     b0e:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     b12:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     b16:	9c 01       	movw	r18, r24
     b18:	88 8d       	ldd	r24, Y+24	; 0x18
     b1a:	99 8d       	ldd	r25, Y+25	; 0x19
     b1c:	82 0f       	add	r24, r18
     b1e:	93 1f       	adc	r25, r19
     b20:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     b24:	fc 01       	movw	r30, r24
     b26:	20 83       	st	Z, r18
			i++;
     b28:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     b2c:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     b36:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
		}
		else futuro = 9;
	break;
     b3a:	f3 c0       	rjmp	.+486    	; 0xd22 <__stack+0x423>
		if(dado == 'x'){
			futuro = 5;
			informacao[i] = dado;
			i++;
		}
		else futuro = 9;
     b3c:	89 e0       	ldi	r24, 0x09	; 9
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     b44:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
	break;
     b48:	ec c0       	rjmp	.+472    	; 0xd22 <__stack+0x423>
	
	case 5:// L1
		futuro = 9;
     b4a:	89 e0       	ldi	r24, 0x09	; 9
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     b52:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     b56:	18 86       	std	Y+8, r1	; 0x08
     b58:	1f 82       	std	Y+7, r1	; 0x07
     b5a:	2e c0       	rjmp	.+92     	; 0xbb8 <__stack+0x2b9>
			if(dado == n[j]){
     b5c:	9e 01       	movw	r18, r28
     b5e:	23 5f       	subi	r18, 0xF3	; 243
     b60:	3f 4f       	sbci	r19, 0xFF	; 255
     b62:	8f 81       	ldd	r24, Y+7	; 0x07
     b64:	98 85       	ldd	r25, Y+8	; 0x08
     b66:	82 0f       	add	r24, r18
     b68:	93 1f       	adc	r25, r19
     b6a:	fc 01       	movw	r30, r24
     b6c:	90 81       	ld	r25, Z
     b6e:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     b72:	98 17       	cp	r25, r24
     b74:	e1 f4       	brne	.+56     	; 0xbae <__stack+0x2af>
				futuro = 6;
     b76:	86 e0       	ldi	r24, 0x06	; 6
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     b7e:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     b82:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     b86:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     b8a:	9c 01       	movw	r18, r24
     b8c:	88 8d       	ldd	r24, Y+24	; 0x18
     b8e:	99 8d       	ldd	r25, Y+25	; 0x19
     b90:	82 0f       	add	r24, r18
     b92:	93 1f       	adc	r25, r19
     b94:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     b98:	fc 01       	movw	r30, r24
     b9a:	20 83       	st	Z, r18
				i++;
     b9c:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     ba0:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     ba4:	01 96       	adiw	r24, 0x01	; 1
     ba6:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     baa:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
		else futuro = 9;
	break;
	
	case 5:// L1
		futuro = 9;
		for(int j = 0;j < 10;j++){
     bae:	8f 81       	ldd	r24, Y+7	; 0x07
     bb0:	98 85       	ldd	r25, Y+8	; 0x08
     bb2:	01 96       	adiw	r24, 0x01	; 1
     bb4:	98 87       	std	Y+8, r25	; 0x08
     bb6:	8f 83       	std	Y+7, r24	; 0x07
     bb8:	8f 81       	ldd	r24, Y+7	; 0x07
     bba:	98 85       	ldd	r25, Y+8	; 0x08
     bbc:	0a 97       	sbiw	r24, 0x0a	; 10
     bbe:	74 f2       	brlt	.-100    	; 0xb5c <__stack+0x25d>
				futuro = 6;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     bc0:	b0 c0       	rjmp	.+352    	; 0xd22 <__stack+0x423>
	
	case 6:  // L2
		if(dado == ':') futuro = 0;
     bc2:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     bc6:	8a 33       	cpi	r24, 0x3A	; 58
     bc8:	29 f4       	brne	.+10     	; 0xbd4 <__stack+0x2d5>
     bca:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <futuro+0x1>
     bce:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <futuro>
     bd2:	06 c0       	rjmp	.+12     	; 0xbe0 <__stack+0x2e1>
		else futuro = 9;
     bd4:	89 e0       	ldi	r24, 0x09	; 9
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     bdc:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     be0:	1a 86       	std	Y+10, r1	; 0x0a
     be2:	19 86       	std	Y+9, r1	; 0x09
     be4:	2e c0       	rjmp	.+92     	; 0xc42 <__stack+0x343>
			if(dado == n[j]){
     be6:	9e 01       	movw	r18, r28
     be8:	23 5f       	subi	r18, 0xF3	; 243
     bea:	3f 4f       	sbci	r19, 0xFF	; 255
     bec:	89 85       	ldd	r24, Y+9	; 0x09
     bee:	9a 85       	ldd	r25, Y+10	; 0x0a
     bf0:	82 0f       	add	r24, r18
     bf2:	93 1f       	adc	r25, r19
     bf4:	fc 01       	movw	r30, r24
     bf6:	90 81       	ld	r25, Z
     bf8:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     bfc:	98 17       	cp	r25, r24
     bfe:	e1 f4       	brne	.+56     	; 0xc38 <__stack+0x339>
				futuro = 7;
     c00:	87 e0       	ldi	r24, 0x07	; 7
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     c08:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     c0c:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     c10:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     c14:	9c 01       	movw	r18, r24
     c16:	88 8d       	ldd	r24, Y+24	; 0x18
     c18:	99 8d       	ldd	r25, Y+25	; 0x19
     c1a:	82 0f       	add	r24, r18
     c1c:	93 1f       	adc	r25, r19
     c1e:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     c22:	fc 01       	movw	r30, r24
     c24:	20 83       	st	Z, r18
				i++;
     c26:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     c2a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     c2e:	01 96       	adiw	r24, 0x01	; 1
     c30:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     c34:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
	break;
	
	case 6:  // L2
		if(dado == ':') futuro = 0;
		else futuro = 9;
		for(int j = 0;j < 10;j++){
     c38:	89 85       	ldd	r24, Y+9	; 0x09
     c3a:	9a 85       	ldd	r25, Y+10	; 0x0a
     c3c:	01 96       	adiw	r24, 0x01	; 1
     c3e:	9a 87       	std	Y+10, r25	; 0x0a
     c40:	89 87       	std	Y+9, r24	; 0x09
     c42:	89 85       	ldd	r24, Y+9	; 0x09
     c44:	9a 85       	ldd	r25, Y+10	; 0x0a
     c46:	0a 97       	sbiw	r24, 0x0a	; 10
     c48:	74 f2       	brlt	.-100    	; 0xbe6 <__stack+0x2e7>
				futuro = 7;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     c4a:	6b c0       	rjmp	.+214    	; 0xd22 <__stack+0x423>
	
	case 7: // L3
		if(dado == ':') futuro = 0;
     c4c:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     c50:	8a 33       	cpi	r24, 0x3A	; 58
     c52:	29 f4       	brne	.+10     	; 0xc5e <__stack+0x35f>
     c54:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <futuro+0x1>
     c58:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <futuro>
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <__stack+0x36b>
		else futuro = 9;
     c5e:	89 e0       	ldi	r24, 0x09	; 9
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     c66:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		for(int j = 0;j < 10;j++){
     c6a:	1c 86       	std	Y+12, r1	; 0x0c
     c6c:	1b 86       	std	Y+11, r1	; 0x0b
     c6e:	2e c0       	rjmp	.+92     	; 0xccc <__stack+0x3cd>
			if(dado == n[j]){
     c70:	9e 01       	movw	r18, r28
     c72:	23 5f       	subi	r18, 0xF3	; 243
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	8b 85       	ldd	r24, Y+11	; 0x0b
     c78:	9c 85       	ldd	r25, Y+12	; 0x0c
     c7a:	82 0f       	add	r24, r18
     c7c:	93 1f       	adc	r25, r19
     c7e:	fc 01       	movw	r30, r24
     c80:	90 81       	ld	r25, Z
     c82:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     c86:	98 17       	cp	r25, r24
     c88:	e1 f4       	brne	.+56     	; 0xcc2 <__stack+0x3c3>
				futuro = 8;
     c8a:	88 e0       	ldi	r24, 0x08	; 8
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     c92:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
				informacao[i] = dado;
     c96:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     c9a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     c9e:	9c 01       	movw	r18, r24
     ca0:	88 8d       	ldd	r24, Y+24	; 0x18
     ca2:	99 8d       	ldd	r25, Y+25	; 0x19
     ca4:	82 0f       	add	r24, r18
     ca6:	93 1f       	adc	r25, r19
     ca8:	20 91 2b 04 	lds	r18, 0x042B	; 0x80042b <dado>
     cac:	fc 01       	movw	r30, r24
     cae:	20 83       	st	Z, r18
				i++;
     cb0:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <i>
     cb4:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <i+0x1>
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <i+0x1>
     cbe:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <i>
	break;
	
	case 7: // L3
		if(dado == ':') futuro = 0;
		else futuro = 9;
		for(int j = 0;j < 10;j++){
     cc2:	8b 85       	ldd	r24, Y+11	; 0x0b
     cc4:	9c 85       	ldd	r25, Y+12	; 0x0c
     cc6:	01 96       	adiw	r24, 0x01	; 1
     cc8:	9c 87       	std	Y+12, r25	; 0x0c
     cca:	8b 87       	std	Y+11, r24	; 0x0b
     ccc:	8b 85       	ldd	r24, Y+11	; 0x0b
     cce:	9c 85       	ldd	r25, Y+12	; 0x0c
     cd0:	0a 97       	sbiw	r24, 0x0a	; 10
     cd2:	74 f2       	brlt	.-100    	; 0xc70 <__stack+0x371>
				futuro = 8;
				informacao[i] = dado;
				i++;
			}
		}
	break;
     cd4:	26 c0       	rjmp	.+76     	; 0xd22 <__stack+0x423>
	
	case 8: // final do pacote
		if(dado == ':') futuro = 0;
     cd6:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     cda:	8a 33       	cpi	r24, 0x3A	; 58
     cdc:	29 f4       	brne	.+10     	; 0xce8 <__stack+0x3e9>
     cde:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <futuro+0x1>
     ce2:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <futuro>
		else futuro = 9;
	break;
     ce6:	1d c0       	rjmp	.+58     	; 0xd22 <__stack+0x423>
		}
	break;
	
	case 8: // final do pacote
		if(dado == ':') futuro = 0;
		else futuro = 9;
     ce8:	89 e0       	ldi	r24, 0x09	; 9
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     cf0:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
	break;
     cf4:	16 c0       	rjmp	.+44     	; 0xd22 <__stack+0x423>
	
	case 9:  // erro
		if(dado == ';') futuro = 1;
     cf6:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <dado>
     cfa:	8b 33       	cpi	r24, 0x3B	; 59
     cfc:	39 f4       	brne	.+14     	; 0xd0c <__stack+0x40d>
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     d06:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
     d0a:	06 c0       	rjmp	.+12     	; 0xd18 <__stack+0x419>
		else futuro = 9;
     d0c:	89 e0       	ldi	r24, 0x09	; 9
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <futuro+0x1>
     d14:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <futuro>
		i = 0;
     d18:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <i+0x1>
     d1c:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i>
	break;
     d20:	00 00       	nop
	}
	
	return futuro;
     d22:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <futuro>
     d26:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <futuro+0x1>
}
     d2a:	69 96       	adiw	r28, 0x19	; 25
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	f8 94       	cli
     d30:	de bf       	out	0x3e, r29	; 62
     d32:	0f be       	out	0x3f, r0	; 63
     d34:	cd bf       	out	0x3d, r28	; 61
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	08 95       	ret

00000d3c <analise>:

void analise(int sequencia, char informacao[]){
     d3c:	cf 93       	push	r28
     d3e:	df 93       	push	r29
     d40:	00 d0       	rcall	.+0      	; 0xd42 <analise+0x6>
     d42:	00 d0       	rcall	.+0      	; 0xd44 <analise+0x8>
     d44:	00 d0       	rcall	.+0      	; 0xd46 <analise+0xa>
     d46:	cd b7       	in	r28, 0x3d	; 61
     d48:	de b7       	in	r29, 0x3e	; 62
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	8b 83       	std	Y+3, r24	; 0x03
     d4e:	7e 83       	std	Y+6, r23	; 0x06
     d50:	6d 83       	std	Y+5, r22	; 0x05
	int i;
	if(sequencia == 9){
     d52:	8b 81       	ldd	r24, Y+3	; 0x03
     d54:	9c 81       	ldd	r25, Y+4	; 0x04
     d56:	09 97       	sbiw	r24, 0x09	; 9
     d58:	11 f5       	brne	.+68     	; 0xd9e <analise+0x62>
		for(i=0;i<7;i++){
     d5a:	1a 82       	std	Y+2, r1	; 0x02
     d5c:	19 82       	std	Y+1, r1	; 0x01
     d5e:	1a c0       	rjmp	.+52     	; 0xd94 <analise+0x58>
			strPressao[i] = strErro[i];
     d60:	89 81       	ldd	r24, Y+1	; 0x01
     d62:	9a 81       	ldd	r25, Y+2	; 0x02
     d64:	8e 5b       	subi	r24, 0xBE	; 190
     d66:	9e 4f       	sbci	r25, 0xFE	; 254
     d68:	fc 01       	movw	r30, r24
     d6a:	20 81       	ld	r18, Z
     d6c:	89 81       	ldd	r24, Y+1	; 0x01
     d6e:	9a 81       	ldd	r25, Y+2	; 0x02
     d70:	86 5b       	subi	r24, 0xB6	; 182
     d72:	9e 4f       	sbci	r25, 0xFE	; 254
     d74:	fc 01       	movw	r30, r24
     d76:	20 83       	st	Z, r18
			informacao[i] = ' ';
     d78:	89 81       	ldd	r24, Y+1	; 0x01
     d7a:	9a 81       	ldd	r25, Y+2	; 0x02
     d7c:	2d 81       	ldd	r18, Y+5	; 0x05
     d7e:	3e 81       	ldd	r19, Y+6	; 0x06
     d80:	82 0f       	add	r24, r18
     d82:	93 1f       	adc	r25, r19
     d84:	20 e2       	ldi	r18, 0x20	; 32
     d86:	fc 01       	movw	r30, r24
     d88:	20 83       	st	Z, r18
}

void analise(int sequencia, char informacao[]){
	int i;
	if(sequencia == 9){
		for(i=0;i<7;i++){
     d8a:	89 81       	ldd	r24, Y+1	; 0x01
     d8c:	9a 81       	ldd	r25, Y+2	; 0x02
     d8e:	01 96       	adiw	r24, 0x01	; 1
     d90:	9a 83       	std	Y+2, r25	; 0x02
     d92:	89 83       	std	Y+1, r24	; 0x01
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	9a 81       	ldd	r25, Y+2	; 0x02
     d98:	07 97       	sbiw	r24, 0x07	; 7
     d9a:	14 f3       	brlt	.-60     	; 0xd60 <analise+0x24>
		for(i=0;i<7;i++){
			strPressao[i] = informacao[i];
			informacao[i] = ' ';
		}
	}
}
     d9c:	27 c0       	rjmp	.+78     	; 0xdec <analise+0xb0>
		for(i=0;i<7;i++){
			strPressao[i] = strErro[i];
			informacao[i] = ' ';
		}
	}
	else if (sequencia == 0){
     d9e:	8b 81       	ldd	r24, Y+3	; 0x03
     da0:	9c 81       	ldd	r25, Y+4	; 0x04
     da2:	89 2b       	or	r24, r25
     da4:	19 f5       	brne	.+70     	; 0xdec <analise+0xb0>
		for(i=0;i<7;i++){
     da6:	1a 82       	std	Y+2, r1	; 0x02
     da8:	19 82       	std	Y+1, r1	; 0x01
     daa:	1c c0       	rjmp	.+56     	; 0xde4 <analise+0xa8>
			strPressao[i] = informacao[i];
     dac:	89 81       	ldd	r24, Y+1	; 0x01
     dae:	9a 81       	ldd	r25, Y+2	; 0x02
     db0:	2d 81       	ldd	r18, Y+5	; 0x05
     db2:	3e 81       	ldd	r19, Y+6	; 0x06
     db4:	82 0f       	add	r24, r18
     db6:	93 1f       	adc	r25, r19
     db8:	fc 01       	movw	r30, r24
     dba:	20 81       	ld	r18, Z
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	9a 81       	ldd	r25, Y+2	; 0x02
     dc0:	86 5b       	subi	r24, 0xB6	; 182
     dc2:	9e 4f       	sbci	r25, 0xFE	; 254
     dc4:	fc 01       	movw	r30, r24
     dc6:	20 83       	st	Z, r18
			informacao[i] = ' ';
     dc8:	89 81       	ldd	r24, Y+1	; 0x01
     dca:	9a 81       	ldd	r25, Y+2	; 0x02
     dcc:	2d 81       	ldd	r18, Y+5	; 0x05
     dce:	3e 81       	ldd	r19, Y+6	; 0x06
     dd0:	82 0f       	add	r24, r18
     dd2:	93 1f       	adc	r25, r19
     dd4:	20 e2       	ldi	r18, 0x20	; 32
     dd6:	fc 01       	movw	r30, r24
     dd8:	20 83       	st	Z, r18
			strPressao[i] = strErro[i];
			informacao[i] = ' ';
		}
	}
	else if (sequencia == 0){
		for(i=0;i<7;i++){
     dda:	89 81       	ldd	r24, Y+1	; 0x01
     ddc:	9a 81       	ldd	r25, Y+2	; 0x02
     dde:	01 96       	adiw	r24, 0x01	; 1
     de0:	9a 83       	std	Y+2, r25	; 0x02
     de2:	89 83       	std	Y+1, r24	; 0x01
     de4:	89 81       	ldd	r24, Y+1	; 0x01
     de6:	9a 81       	ldd	r25, Y+2	; 0x02
     de8:	07 97       	sbiw	r24, 0x07	; 7
     dea:	04 f3       	brlt	.-64     	; 0xdac <analise+0x70>
			strPressao[i] = informacao[i];
			informacao[i] = ' ';
		}
	}
}
     dec:	00 00       	nop
     dee:	26 96       	adiw	r28, 0x06	; 6
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	f8 94       	cli
     df4:	de bf       	out	0x3e, r29	; 62
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	cd bf       	out	0x3d, r28	; 61
     dfa:	df 91       	pop	r29
     dfc:	cf 91       	pop	r28
     dfe:	08 95       	ret

00000e00 <ctrlRespiracao>:

void ctrlRespiracao(){
     e00:	cf 93       	push	r28
     e02:	df 93       	push	r29
     e04:	cd b7       	in	r28, 0x3d	; 61
     e06:	de b7       	in	r29, 0x3e	; 62
     e08:	2e 97       	sbiw	r28, 0x0e	; 14
     e0a:	0f b6       	in	r0, 0x3f	; 63
     e0c:	f8 94       	cli
     e0e:	de bf       	out	0x3e, r29	; 62
     e10:	0f be       	out	0x3f, r0	; 63
     e12:	cd bf       	out	0x3d, r28	; 61
	if (posicao == vol){ // Teste para mudar de direção
     e14:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <posicao>
     e18:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <posicao+0x1>
     e1c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
     e20:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
     e24:	28 17       	cp	r18, r24
     e26:	39 07       	cpc	r19, r25
     e28:	59 f5       	brne	.+86     	; 0xe80 <ctrlRespiracao+0x80>
		if(!direcao){
     e2a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e2e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e32:	89 2b       	or	r24, r25
     e34:	b9 f4       	brne	.+46     	; 0xe64 <ctrlRespiracao+0x64>
			if(mude_p1)
     e36:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <mude_p1>
     e3a:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <mude_p1+0x1>
     e3e:	89 2b       	or	r24, r25
     e40:	39 f0       	breq	.+14     	; 0xe50 <ctrlRespiracao+0x50>
				modo = 1;
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <modo+0x1>
     e4a:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <modo>
     e4e:	0a c0       	rjmp	.+20     	; 0xe64 <ctrlRespiracao+0x64>
			else if (mude_p0)
     e50:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <mude_p0>
     e54:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <mude_p0+0x1>
     e58:	89 2b       	or	r24, r25
     e5a:	21 f0       	breq	.+8      	; 0xe64 <ctrlRespiracao+0x64>
				modo = 0;
     e5c:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <modo+0x1>
     e60:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <modo>
		}
		posicao = 0;
     e64:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <posicao+0x1>
     e68:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <posicao>
		direcao ^= 1;
     e6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e70:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e74:	21 e0       	ldi	r18, 0x01	; 1
     e76:	82 27       	eor	r24, r18
     e78:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e7c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}

	if(direcao)
     e80:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e84:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e88:	89 2b       	or	r24, r25
     e8a:	89 f0       	breq	.+34     	; 0xeae <ctrlRespiracao+0xae>
		angle = 2000 + posicao*250; // Inspiração
     e8c:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <posicao>
     e90:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <posicao+0x1>
     e94:	4a ef       	ldi	r20, 0xFA	; 250
     e96:	42 9f       	mul	r20, r18
     e98:	c0 01       	movw	r24, r0
     e9a:	43 9f       	mul	r20, r19
     e9c:	90 0d       	add	r25, r0
     e9e:	11 24       	eor	r1, r1
     ea0:	80 53       	subi	r24, 0x30	; 48
     ea2:	98 4f       	sbci	r25, 0xF8	; 248
     ea4:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     ea8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
     eac:	1e c0       	rjmp	.+60     	; 0xeea <ctrlRespiracao+0xea>
	else
		angle = 2000 + (vol*250) - posicao*250; // Expiração
     eae:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <vol>
     eb2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <vol+0x1>
     eb6:	4a ef       	ldi	r20, 0xFA	; 250
     eb8:	42 9f       	mul	r20, r18
     eba:	c0 01       	movw	r24, r0
     ebc:	43 9f       	mul	r20, r19
     ebe:	90 0d       	add	r25, r0
     ec0:	11 24       	eor	r1, r1
     ec2:	9c 01       	movw	r18, r24
     ec4:	20 53       	subi	r18, 0x30	; 48
     ec6:	38 4f       	sbci	r19, 0xF8	; 248
     ec8:	40 91 06 02 	lds	r20, 0x0206	; 0x800206 <posicao>
     ecc:	50 91 07 02 	lds	r21, 0x0207	; 0x800207 <posicao+0x1>
     ed0:	66 e0       	ldi	r22, 0x06	; 6
     ed2:	64 9f       	mul	r22, r20
     ed4:	c0 01       	movw	r24, r0
     ed6:	65 9f       	mul	r22, r21
     ed8:	90 0d       	add	r25, r0
     eda:	94 1b       	sub	r25, r20
     edc:	11 24       	eor	r1, r1
     ede:	82 0f       	add	r24, r18
     ee0:	93 1f       	adc	r25, r19
     ee2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     ee6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
	
	OCR1A = angle;
     eea:	88 e8       	ldi	r24, 0x88	; 136
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     ef2:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     ef6:	fc 01       	movw	r30, r24
     ef8:	31 83       	std	Z+1, r19	; 0x01
     efa:	20 83       	st	Z, r18
		
	if(angle == 2000){
     efc:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     f00:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     f04:	80 3d       	cpi	r24, 0xD0	; 208
     f06:	97 40       	sbci	r25, 0x07	; 7
     f08:	09 f0       	breq	.+2      	; 0xf0c <ctrlRespiracao+0x10c>
     f0a:	8e c0       	rjmp	.+284    	; 0x1028 <ctrlRespiracao+0x228>
		PORTD |= 0b00100000;
     f0c:	8b e2       	ldi	r24, 0x2B	; 43
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	2b e2       	ldi	r18, 0x2B	; 43
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	f9 01       	movw	r30, r18
     f16:	20 81       	ld	r18, Z
     f18:	20 62       	ori	r18, 0x20	; 32
     f1a:	fc 01       	movw	r30, r24
     f1c:	20 83       	st	Z, r18
		_delay_ms(pausa);
     f1e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pausa>
     f22:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pausa+0x1>
     f26:	09 2e       	mov	r0, r25
     f28:	00 0c       	add	r0, r0
     f2a:	aa 0b       	sbc	r26, r26
     f2c:	bb 0b       	sbc	r27, r27
     f2e:	bc 01       	movw	r22, r24
     f30:	cd 01       	movw	r24, r26
     f32:	0e 94 57 19 	call	0x32ae	; 0x32ae <__floatsisf>
     f36:	dc 01       	movw	r26, r24
     f38:	cb 01       	movw	r24, r22
     f3a:	89 83       	std	Y+1, r24	; 0x01
     f3c:	9a 83       	std	Y+2, r25	; 0x02
     f3e:	ab 83       	std	Y+3, r26	; 0x03
     f40:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	4a e7       	ldi	r20, 0x7A	; 122
     f48:	55 e4       	ldi	r21, 0x45	; 69
     f4a:	69 81       	ldd	r22, Y+1	; 0x01
     f4c:	7a 81       	ldd	r23, Y+2	; 0x02
     f4e:	8b 81       	ldd	r24, Y+3	; 0x03
     f50:	9c 81       	ldd	r25, Y+4	; 0x04
     f52:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
     f56:	dc 01       	movw	r26, r24
     f58:	cb 01       	movw	r24, r22
     f5a:	8d 83       	std	Y+5, r24	; 0x05
     f5c:	9e 83       	std	Y+6, r25	; 0x06
     f5e:	af 83       	std	Y+7, r26	; 0x07
     f60:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	40 e8       	ldi	r20, 0x80	; 128
     f68:	5f e3       	ldi	r21, 0x3F	; 63
     f6a:	6d 81       	ldd	r22, Y+5	; 0x05
     f6c:	7e 81       	ldd	r23, Y+6	; 0x06
     f6e:	8f 81       	ldd	r24, Y+7	; 0x07
     f70:	98 85       	ldd	r25, Y+8	; 0x08
     f72:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
     f76:	88 23       	and	r24, r24
     f78:	2c f4       	brge	.+10     	; 0xf84 <ctrlRespiracao+0x184>
		__ticks = 1;
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	9a 87       	std	Y+10, r25	; 0x0a
     f80:	89 87       	std	Y+9, r24	; 0x09
     f82:	3f c0       	rjmp	.+126    	; 0x1002 <ctrlRespiracao+0x202>
	else if (__tmp > 65535)
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	3f ef       	ldi	r19, 0xFF	; 255
     f88:	4f e7       	ldi	r20, 0x7F	; 127
     f8a:	57 e4       	ldi	r21, 0x47	; 71
     f8c:	6d 81       	ldd	r22, Y+5	; 0x05
     f8e:	7e 81       	ldd	r23, Y+6	; 0x06
     f90:	8f 81       	ldd	r24, Y+7	; 0x07
     f92:	98 85       	ldd	r25, Y+8	; 0x08
     f94:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
     f98:	18 16       	cp	r1, r24
     f9a:	4c f5       	brge	.+82     	; 0xfee <ctrlRespiracao+0x1ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f9c:	20 e0       	ldi	r18, 0x00	; 0
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	40 e2       	ldi	r20, 0x20	; 32
     fa2:	51 e4       	ldi	r21, 0x41	; 65
     fa4:	69 81       	ldd	r22, Y+1	; 0x01
     fa6:	7a 81       	ldd	r23, Y+2	; 0x02
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	9c 81       	ldd	r25, Y+4	; 0x04
     fac:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	bc 01       	movw	r22, r24
     fb6:	cd 01       	movw	r24, r26
     fb8:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
     fbc:	dc 01       	movw	r26, r24
     fbe:	cb 01       	movw	r24, r22
     fc0:	9a 87       	std	Y+10, r25	; 0x0a
     fc2:	89 87       	std	Y+9, r24	; 0x09
     fc4:	0f c0       	rjmp	.+30     	; 0xfe4 <ctrlRespiracao+0x1e4>
     fc6:	80 e9       	ldi	r24, 0x90	; 144
     fc8:	91 e0       	ldi	r25, 0x01	; 1
     fca:	9c 87       	std	Y+12, r25	; 0x0c
     fcc:	8b 87       	std	Y+11, r24	; 0x0b
     fce:	8b 85       	ldd	r24, Y+11	; 0x0b
     fd0:	9c 85       	ldd	r25, Y+12	; 0x0c
     fd2:	01 97       	sbiw	r24, 0x01	; 1
     fd4:	f1 f7       	brne	.-4      	; 0xfd2 <ctrlRespiracao+0x1d2>
     fd6:	9c 87       	std	Y+12, r25	; 0x0c
     fd8:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fda:	89 85       	ldd	r24, Y+9	; 0x09
     fdc:	9a 85       	ldd	r25, Y+10	; 0x0a
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	9a 87       	std	Y+10, r25	; 0x0a
     fe2:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fe4:	89 85       	ldd	r24, Y+9	; 0x09
     fe6:	9a 85       	ldd	r25, Y+10	; 0x0a
     fe8:	89 2b       	or	r24, r25
     fea:	69 f7       	brne	.-38     	; 0xfc6 <ctrlRespiracao+0x1c6>
     fec:	14 c0       	rjmp	.+40     	; 0x1016 <ctrlRespiracao+0x216>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fee:	6d 81       	ldd	r22, Y+5	; 0x05
     ff0:	7e 81       	ldd	r23, Y+6	; 0x06
     ff2:	8f 81       	ldd	r24, Y+7	; 0x07
     ff4:	98 85       	ldd	r25, Y+8	; 0x08
     ff6:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
     ffa:	dc 01       	movw	r26, r24
     ffc:	cb 01       	movw	r24, r22
     ffe:	9a 87       	std	Y+10, r25	; 0x0a
    1000:	89 87       	std	Y+9, r24	; 0x09
    1002:	89 85       	ldd	r24, Y+9	; 0x09
    1004:	9a 85       	ldd	r25, Y+10	; 0x0a
    1006:	9e 87       	std	Y+14, r25	; 0x0e
    1008:	8d 87       	std	Y+13, r24	; 0x0d
    100a:	8d 85       	ldd	r24, Y+13	; 0x0d
    100c:	9e 85       	ldd	r25, Y+14	; 0x0e
    100e:	01 97       	sbiw	r24, 0x01	; 1
    1010:	f1 f7       	brne	.-4      	; 0x100e <ctrlRespiracao+0x20e>
    1012:	9e 87       	std	Y+14, r25	; 0x0e
    1014:	8d 87       	std	Y+13, r24	; 0x0d
		PORTD &= 0b11011111;
    1016:	8b e2       	ldi	r24, 0x2B	; 43
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	2b e2       	ldi	r18, 0x2B	; 43
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	f9 01       	movw	r30, r18
    1020:	20 81       	ld	r18, Z
    1022:	2f 7d       	andi	r18, 0xDF	; 223
    1024:	fc 01       	movw	r30, r24
    1026:	20 83       	st	Z, r18
	}
	
	posicao++; // Ação sob o próximo led
    1028:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <posicao>
    102c:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <posicao+0x1>
    1030:	01 96       	adiw	r24, 0x01	; 1
    1032:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <posicao+0x1>
    1036:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <posicao>
}
    103a:	00 00       	nop
    103c:	2e 96       	adiw	r28, 0x0e	; 14
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	f8 94       	cli
    1042:	de bf       	out	0x3e, r29	; 62
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	cd bf       	out	0x3d, r28	; 61
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	08 95       	ret

0000104e <convLeitura>:

void convLeitura(){
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
	
	if(ADMUX == 0b01000000)
    1056:	8c e7       	ldi	r24, 0x7C	; 124
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	fc 01       	movw	r30, r24
    105c:	80 81       	ld	r24, Z
    105e:	80 34       	cpi	r24, 0x40	; 64
    1060:	29 f5       	brne	.+74     	; 0x10ac <convLeitura+0x5e>
		Temp = 10*(V+1.0);
    1062:	80 91 2c 04 	lds	r24, 0x042C	; 0x80042c <V>
    1066:	90 91 2d 04 	lds	r25, 0x042D	; 0x80042d <V+0x1>
    106a:	a0 91 2e 04 	lds	r26, 0x042E	; 0x80042e <V+0x2>
    106e:	b0 91 2f 04 	lds	r27, 0x042F	; 0x80042f <V+0x3>
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	40 e8       	ldi	r20, 0x80	; 128
    1078:	5f e3       	ldi	r21, 0x3F	; 63
    107a:	bc 01       	movw	r22, r24
    107c:	cd 01       	movw	r24, r26
    107e:	0e 94 36 18 	call	0x306c	; 0x306c <__addsf3>
    1082:	dc 01       	movw	r26, r24
    1084:	cb 01       	movw	r24, r22
    1086:	20 e0       	ldi	r18, 0x00	; 0
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	40 e2       	ldi	r20, 0x20	; 32
    108c:	51 e4       	ldi	r21, 0x41	; 65
    108e:	bc 01       	movw	r22, r24
    1090:	cd 01       	movw	r24, r26
    1092:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    1096:	dc 01       	movw	r26, r24
    1098:	cb 01       	movw	r24, r22
    109a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <Temp>
    109e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <Temp+0x1>
    10a2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <Temp+0x2>
    10a6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <Temp+0x3>
    10aa:	22 c0       	rjmp	.+68     	; 0x10f0 <convLeitura+0xa2>
		
	else if(ADMUX == 0b01000001)
    10ac:	8c e7       	ldi	r24, 0x7C	; 124
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	fc 01       	movw	r30, r24
    10b2:	80 81       	ld	r24, Z
    10b4:	81 34       	cpi	r24, 0x41	; 65
    10b6:	e1 f4       	brne	.+56     	; 0x10f0 <convLeitura+0xa2>
		O2 =  20*V;
    10b8:	80 91 2c 04 	lds	r24, 0x042C	; 0x80042c <V>
    10bc:	90 91 2d 04 	lds	r25, 0x042D	; 0x80042d <V+0x1>
    10c0:	a0 91 2e 04 	lds	r26, 0x042E	; 0x80042e <V+0x2>
    10c4:	b0 91 2f 04 	lds	r27, 0x042F	; 0x80042f <V+0x3>
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	40 ea       	ldi	r20, 0xA0	; 160
    10ce:	51 e4       	ldi	r21, 0x41	; 65
    10d0:	bc 01       	movw	r22, r24
    10d2:	cd 01       	movw	r24, r26
    10d4:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    10d8:	dc 01       	movw	r26, r24
    10da:	cb 01       	movw	r24, r22
    10dc:	bc 01       	movw	r22, r24
    10de:	cd 01       	movw	r24, r26
    10e0:	0e 94 19 19 	call	0x3232	; 0x3232 <__fixsfsi>
    10e4:	dc 01       	movw	r26, r24
    10e6:	cb 01       	movw	r24, r22
    10e8:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <O2+0x1>
    10ec:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <O2>

	if((O2 < 60)||(Temp < 35)||(Temp > 41))
    10f0:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <O2>
    10f4:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <O2+0x1>
    10f8:	cc 97       	sbiw	r24, 0x3c	; 60
    10fa:	24 f1       	brlt	.+72     	; 0x1144 <convLeitura+0xf6>
    10fc:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Temp>
    1100:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Temp+0x1>
    1104:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <Temp+0x2>
    1108:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <Temp+0x3>
    110c:	20 e0       	ldi	r18, 0x00	; 0
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	4c e0       	ldi	r20, 0x0C	; 12
    1112:	52 e4       	ldi	r21, 0x42	; 66
    1114:	bc 01       	movw	r22, r24
    1116:	cd 01       	movw	r24, r26
    1118:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
    111c:	88 23       	and	r24, r24
    111e:	94 f0       	brlt	.+36     	; 0x1144 <convLeitura+0xf6>
    1120:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Temp>
    1124:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Temp+0x1>
    1128:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <Temp+0x2>
    112c:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <Temp+0x3>
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	44 e2       	ldi	r20, 0x24	; 36
    1136:	52 e4       	ldi	r21, 0x42	; 66
    1138:	bc 01       	movw	r22, r24
    113a:	cd 01       	movw	r24, r26
    113c:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
    1140:	18 16       	cp	r1, r24
    1142:	54 f4       	brge	.+20     	; 0x1158 <convLeitura+0x10a>
		PORTD |= 0b00100000;
    1144:	8b e2       	ldi	r24, 0x2B	; 43
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	2b e2       	ldi	r18, 0x2B	; 43
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	f9 01       	movw	r30, r18
    114e:	20 81       	ld	r18, Z
    1150:	20 62       	ori	r18, 0x20	; 32
    1152:	fc 01       	movw	r30, r24
    1154:	20 83       	st	Z, r18
    1156:	09 c0       	rjmp	.+18     	; 0x116a <convLeitura+0x11c>
	else
		PORTD &= 0b11011111;
    1158:	8b e2       	ldi	r24, 0x2B	; 43
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	2b e2       	ldi	r18, 0x2B	; 43
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	f9 01       	movw	r30, r18
    1162:	20 81       	ld	r18, Z
    1164:	2f 7d       	andi	r18, 0xDF	; 223
    1166:	fc 01       	movw	r30, r24
    1168:	20 83       	st	Z, r18
}
    116a:	00 00       	nop
    116c:	df 91       	pop	r29
    116e:	cf 91       	pop	r28
    1170:	08 95       	ret

00001172 <__vector_21>:

ISR(ADC_vect){
    1172:	1f 92       	push	r1
    1174:	0f 92       	push	r0
    1176:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    117a:	0f 92       	push	r0
    117c:	11 24       	eor	r1, r1
    117e:	2f 93       	push	r18
    1180:	3f 93       	push	r19
    1182:	4f 93       	push	r20
    1184:	5f 93       	push	r21
    1186:	6f 93       	push	r22
    1188:	7f 93       	push	r23
    118a:	8f 93       	push	r24
    118c:	9f 93       	push	r25
    118e:	af 93       	push	r26
    1190:	bf 93       	push	r27
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	cd b7       	in	r28, 0x3d	; 61
    119c:	de b7       	in	r29, 0x3e	; 62
	leitura = ADC;
    119e:	88 e7       	ldi	r24, 0x78	; 120
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	fc 01       	movw	r30, r24
    11a4:	80 81       	ld	r24, Z
    11a6:	91 81       	ldd	r25, Z+1	; 0x01
    11a8:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <leitura+0x1>
    11ac:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <leitura>
	V = (leitura*5.0)/(1023.0);
    11b0:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <leitura>
    11b4:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <leitura+0x1>
    11b8:	cc 01       	movw	r24, r24
    11ba:	a0 e0       	ldi	r26, 0x00	; 0
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	bc 01       	movw	r22, r24
    11c0:	cd 01       	movw	r24, r26
    11c2:	0e 94 55 19 	call	0x32aa	; 0x32aa <__floatunsisf>
    11c6:	dc 01       	movw	r26, r24
    11c8:	cb 01       	movw	r24, r22
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	40 ea       	ldi	r20, 0xA0	; 160
    11d0:	50 e4       	ldi	r21, 0x40	; 64
    11d2:	bc 01       	movw	r22, r24
    11d4:	cd 01       	movw	r24, r26
    11d6:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    11da:	dc 01       	movw	r26, r24
    11dc:	cb 01       	movw	r24, r22
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 ec       	ldi	r19, 0xC0	; 192
    11e2:	4f e7       	ldi	r20, 0x7F	; 127
    11e4:	54 e4       	ldi	r21, 0x44	; 68
    11e6:	bc 01       	movw	r22, r24
    11e8:	cd 01       	movw	r24, r26
    11ea:	0e 94 a7 18 	call	0x314e	; 0x314e <__divsf3>
    11ee:	dc 01       	movw	r26, r24
    11f0:	cb 01       	movw	r24, r22
    11f2:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <V>
    11f6:	90 93 2d 04 	sts	0x042D, r25	; 0x80042d <V+0x1>
    11fa:	a0 93 2e 04 	sts	0x042E, r26	; 0x80042e <V+0x2>
    11fe:	b0 93 2f 04 	sts	0x042F, r27	; 0x80042f <V+0x3>
}
    1202:	00 00       	nop
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	ff 91       	pop	r31
    120a:	ef 91       	pop	r30
    120c:	bf 91       	pop	r27
    120e:	af 91       	pop	r26
    1210:	9f 91       	pop	r25
    1212:	8f 91       	pop	r24
    1214:	7f 91       	pop	r23
    1216:	6f 91       	pop	r22
    1218:	5f 91       	pop	r21
    121a:	4f 91       	pop	r20
    121c:	3f 91       	pop	r19
    121e:	2f 91       	pop	r18
    1220:	0f 90       	pop	r0
    1222:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1226:	0f 90       	pop	r0
    1228:	1f 90       	pop	r1
    122a:	18 95       	reti

0000122c <__vector_3>:

ISR(PCINT0_vect){
    122c:	1f 92       	push	r1
    122e:	0f 92       	push	r0
    1230:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1234:	0f 92       	push	r0
    1236:	11 24       	eor	r1, r1
    1238:	2f 93       	push	r18
    123a:	3f 93       	push	r19
    123c:	4f 93       	push	r20
    123e:	5f 93       	push	r21
    1240:	6f 93       	push	r22
    1242:	7f 93       	push	r23
    1244:	8f 93       	push	r24
    1246:	9f 93       	push	r25
    1248:	ef 93       	push	r30
    124a:	ff 93       	push	r31
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	cd b7       	in	r28, 0x3d	; 61
    1252:	de b7       	in	r29, 0x3e	; 62
	if(modo == 1){
    1254:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    1258:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    125c:	01 97       	sbiw	r24, 0x01	; 1
    125e:	89 f5       	brne	.+98     	; 0x12c2 <__vector_3+0x96>
		if(PINB == (PINB & 0b11111110)) // descida do pino B0
    1260:	83 e2       	ldi	r24, 0x23	; 35
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	fc 01       	movw	r30, r24
    1266:	80 81       	ld	r24, Z
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	83 e2       	ldi	r24, 0x23	; 35
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	fc 01       	movw	r30, r24
    1272:	80 81       	ld	r24, Z
    1274:	88 2f       	mov	r24, r24
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	8e 7f       	andi	r24, 0xFE	; 254
    127a:	99 27       	eor	r25, r25
    127c:	28 17       	cp	r18, r24
    127e:	39 07       	cpc	r19, r25
    1280:	01 f5       	brne	.+64     	; 0x12c2 <__vector_3+0x96>
			esfInicial = tempo_ms;
    1282:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <tempo_ms>
    1286:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <tempo_ms+0x1>
    128a:	40 91 10 02 	lds	r20, 0x0210	; 0x800210 <tempo_ms+0x2>
    128e:	50 91 11 02 	lds	r21, 0x0211	; 0x800211 <tempo_ms+0x3>
    1292:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <tempo_ms+0x4>
    1296:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <tempo_ms+0x5>
    129a:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <tempo_ms+0x6>
    129e:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <tempo_ms+0x7>
    12a2:	20 93 32 04 	sts	0x0432, r18	; 0x800432 <esfInicial>
    12a6:	30 93 33 04 	sts	0x0433, r19	; 0x800433 <esfInicial+0x1>
    12aa:	40 93 34 04 	sts	0x0434, r20	; 0x800434 <esfInicial+0x2>
    12ae:	50 93 35 04 	sts	0x0435, r21	; 0x800435 <esfInicial+0x3>
    12b2:	60 93 36 04 	sts	0x0436, r22	; 0x800436 <esfInicial+0x4>
    12b6:	70 93 37 04 	sts	0x0437, r23	; 0x800437 <esfInicial+0x5>
    12ba:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <esfInicial+0x6>
    12be:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <esfInicial+0x7>
	}
}
    12c2:	00 00       	nop
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	ff 91       	pop	r31
    12ca:	ef 91       	pop	r30
    12cc:	9f 91       	pop	r25
    12ce:	8f 91       	pop	r24
    12d0:	7f 91       	pop	r23
    12d2:	6f 91       	pop	r22
    12d4:	5f 91       	pop	r21
    12d6:	4f 91       	pop	r20
    12d8:	3f 91       	pop	r19
    12da:	2f 91       	pop	r18
    12dc:	0f 90       	pop	r0
    12de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    12e2:	0f 90       	pop	r0
    12e4:	1f 90       	pop	r1
    12e6:	18 95       	reti

000012e8 <__vector_5>:


ISR(PCINT2_vect)
{	
    12e8:	1f 92       	push	r1
    12ea:	0f 92       	push	r0
    12ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    12f0:	0f 92       	push	r0
    12f2:	11 24       	eor	r1, r1
    12f4:	2f 93       	push	r18
    12f6:	3f 93       	push	r19
    12f8:	4f 93       	push	r20
    12fa:	5f 93       	push	r21
    12fc:	6f 93       	push	r22
    12fe:	7f 93       	push	r23
    1300:	8f 93       	push	r24
    1302:	9f 93       	push	r25
    1304:	af 93       	push	r26
    1306:	bf 93       	push	r27
    1308:	ef 93       	push	r30
    130a:	ff 93       	push	r31
    130c:	cf 93       	push	r28
    130e:	df 93       	push	r29
    1310:	00 d0       	rcall	.+0      	; 0x1312 <__vector_5+0x2a>
    1312:	cd b7       	in	r28, 0x3d	; 61
    1314:	de b7       	in	r29, 0x3e	; 62
	int k;
	
	if (PIND == (PIND & 0b11101111)){
    1316:	89 e2       	ldi	r24, 0x29	; 41
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	fc 01       	movw	r30, r24
    131c:	80 81       	ld	r24, Z
    131e:	28 2f       	mov	r18, r24
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	89 e2       	ldi	r24, 0x29	; 41
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	fc 01       	movw	r30, r24
    1328:	80 81       	ld	r24, Z
    132a:	88 2f       	mov	r24, r24
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	8f 7e       	andi	r24, 0xEF	; 239
    1330:	99 27       	eor	r25, r25
    1332:	28 17       	cp	r18, r24
    1334:	39 07       	cpc	r19, r25
    1336:	c9 f4       	brne	.+50     	; 0x136a <__vector_5+0x82>
		sel ++;
    1338:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    133c:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1340:	01 96       	adiw	r24, 0x01	; 1
    1342:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <sel+0x1>
    1346:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <sel>
		limpa = 1;
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <limpa+0x1>
    1352:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <limpa>
		if (sel == 6) sel = 0; 
    1356:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    135a:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    135e:	06 97       	sbiw	r24, 0x06	; 6
    1360:	21 f4       	brne	.+8      	; 0x136a <__vector_5+0x82>
    1362:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <sel+0x1>
    1366:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <sel>
	}
	
	if (limpa){
    136a:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <limpa>
    136e:	90 91 4b 04 	lds	r25, 0x044B	; 0x80044b <limpa+0x1>
    1372:	89 2b       	or	r24, r25
    1374:	21 f0       	breq	.+8      	; 0x137e <__vector_5+0x96>
		nokia_lcd_clear();
    1376:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <nokia_lcd_clear>
		nokia_lcd_render();
    137a:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
	}
	limpa = 0;
    137e:	10 92 4b 04 	sts	0x044B, r1	; 0x80044b <limpa+0x1>
    1382:	10 92 4a 04 	sts	0x044A, r1	; 0x80044a <limpa>
	
	if (sel != 0){
    1386:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    138a:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    138e:	89 2b       	or	r24, r25
    1390:	09 f4       	brne	.+2      	; 0x1394 <__vector_5+0xac>
    1392:	66 c0       	rjmp	.+204    	; 0x1460 <__vector_5+0x178>
		if (PIND == (PIND & 0b10111111)) // foi borda de descida de D6?
    1394:	89 e2       	ldi	r24, 0x29	; 41
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	fc 01       	movw	r30, r24
    139a:	80 81       	ld	r24, Z
    139c:	28 2f       	mov	r18, r24
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	89 e2       	ldi	r24, 0x29	; 41
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	fc 01       	movw	r30, r24
    13a6:	80 81       	ld	r24, Z
    13a8:	88 2f       	mov	r24, r24
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	8f 7b       	andi	r24, 0xBF	; 191
    13ae:	99 27       	eor	r25, r25
    13b0:	28 17       	cp	r18, r24
    13b2:	39 07       	cpc	r19, r25
    13b4:	11 f5       	brne	.+68     	; 0x13fa <__vector_5+0x112>
		{
			mude_p0 = 1;
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <mude_p0+0x1>
    13be:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <mude_p0>
			mude_p1 = 0;
    13c2:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <mude_p1+0x1>
    13c6:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <mude_p1>
			for (k = 0; k < 12; k++)
    13ca:	1a 82       	std	Y+2, r1	; 0x02
    13cc:	19 82       	std	Y+1, r1	; 0x01
    13ce:	11 c0       	rjmp	.+34     	; 0x13f2 <__vector_5+0x10a>
				strModo[k] = strModo1[k];
    13d0:	89 81       	ldd	r24, Y+1	; 0x01
    13d2:	9a 81       	ldd	r25, Y+2	; 0x02
    13d4:	84 5e       	subi	r24, 0xE4	; 228
    13d6:	9e 4f       	sbci	r25, 0xFE	; 254
    13d8:	fc 01       	movw	r30, r24
    13da:	20 81       	ld	r18, Z
    13dc:	89 81       	ldd	r24, Y+1	; 0x01
    13de:	9a 81       	ldd	r25, Y+2	; 0x02
    13e0:	80 5f       	subi	r24, 0xF0	; 240
    13e2:	9e 4f       	sbci	r25, 0xFE	; 254
    13e4:	fc 01       	movw	r30, r24
    13e6:	20 83       	st	Z, r18
	if (sel != 0){
		if (PIND == (PIND & 0b10111111)) // foi borda de descida de D6?
		{
			mude_p0 = 1;
			mude_p1 = 0;
			for (k = 0; k < 12; k++)
    13e8:	89 81       	ldd	r24, Y+1	; 0x01
    13ea:	9a 81       	ldd	r25, Y+2	; 0x02
    13ec:	01 96       	adiw	r24, 0x01	; 1
    13ee:	9a 83       	std	Y+2, r25	; 0x02
    13f0:	89 83       	std	Y+1, r24	; 0x01
    13f2:	89 81       	ldd	r24, Y+1	; 0x01
    13f4:	9a 81       	ldd	r25, Y+2	; 0x02
    13f6:	0c 97       	sbiw	r24, 0x0c	; 12
    13f8:	5c f3       	brlt	.-42     	; 0x13d0 <__vector_5+0xe8>
				strModo[k] = strModo1[k];
		}
		if (PIND == (PIND & 0b01111111)) // foi borda de descida de D7?
    13fa:	89 e2       	ldi	r24, 0x29	; 41
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	fc 01       	movw	r30, r24
    1400:	80 81       	ld	r24, Z
    1402:	28 2f       	mov	r18, r24
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	89 e2       	ldi	r24, 0x29	; 41
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	fc 01       	movw	r30, r24
    140c:	80 81       	ld	r24, Z
    140e:	88 2f       	mov	r24, r24
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	8f 77       	andi	r24, 0x7F	; 127
    1414:	99 27       	eor	r25, r25
    1416:	28 17       	cp	r18, r24
    1418:	39 07       	cpc	r19, r25
    141a:	11 f5       	brne	.+68     	; 0x1460 <__vector_5+0x178>
		{
			mude_p0 = 0;
    141c:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <mude_p0+0x1>
    1420:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <mude_p0>
			mude_p1 = 1;
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <mude_p1+0x1>
    142c:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <mude_p1>
			for (k = 0; k < 12; k++)
    1430:	1a 82       	std	Y+2, r1	; 0x02
    1432:	19 82       	std	Y+1, r1	; 0x01
    1434:	11 c0       	rjmp	.+34     	; 0x1458 <__vector_5+0x170>
				strModo[k] = strModo2[k];
    1436:	89 81       	ldd	r24, Y+1	; 0x01
    1438:	9a 81       	ldd	r25, Y+2	; 0x02
    143a:	88 5d       	subi	r24, 0xD8	; 216
    143c:	9e 4f       	sbci	r25, 0xFE	; 254
    143e:	fc 01       	movw	r30, r24
    1440:	20 81       	ld	r18, Z
    1442:	89 81       	ldd	r24, Y+1	; 0x01
    1444:	9a 81       	ldd	r25, Y+2	; 0x02
    1446:	80 5f       	subi	r24, 0xF0	; 240
    1448:	9e 4f       	sbci	r25, 0xFE	; 254
    144a:	fc 01       	movw	r30, r24
    144c:	20 83       	st	Z, r18
		}
		if (PIND == (PIND & 0b01111111)) // foi borda de descida de D7?
		{
			mude_p0 = 0;
			mude_p1 = 1;
			for (k = 0; k < 12; k++)
    144e:	89 81       	ldd	r24, Y+1	; 0x01
    1450:	9a 81       	ldd	r25, Y+2	; 0x02
    1452:	01 96       	adiw	r24, 0x01	; 1
    1454:	9a 83       	std	Y+2, r25	; 0x02
    1456:	89 83       	std	Y+1, r24	; 0x01
    1458:	89 81       	ldd	r24, Y+1	; 0x01
    145a:	9a 81       	ldd	r25, Y+2	; 0x02
    145c:	0c 97       	sbiw	r24, 0x0c	; 12
    145e:	5c f3       	brlt	.-42     	; 0x1436 <__vector_5+0x14e>
				strModo[k] = strModo2[k];
		}
	}
}
    1460:	00 00       	nop
    1462:	0f 90       	pop	r0
    1464:	0f 90       	pop	r0
    1466:	df 91       	pop	r29
    1468:	cf 91       	pop	r28
    146a:	ff 91       	pop	r31
    146c:	ef 91       	pop	r30
    146e:	bf 91       	pop	r27
    1470:	af 91       	pop	r26
    1472:	9f 91       	pop	r25
    1474:	8f 91       	pop	r24
    1476:	7f 91       	pop	r23
    1478:	6f 91       	pop	r22
    147a:	5f 91       	pop	r21
    147c:	4f 91       	pop	r20
    147e:	3f 91       	pop	r19
    1480:	2f 91       	pop	r18
    1482:	0f 90       	pop	r0
    1484:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1488:	0f 90       	pop	r0
    148a:	1f 90       	pop	r1
    148c:	18 95       	reti

0000148e <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
    148e:	1f 92       	push	r1
    1490:	0f 92       	push	r0
    1492:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1496:	0f 92       	push	r0
    1498:	11 24       	eor	r1, r1
    149a:	2f 92       	push	r2
    149c:	3f 92       	push	r3
    149e:	4f 92       	push	r4
    14a0:	5f 92       	push	r5
    14a2:	6f 92       	push	r6
    14a4:	7f 92       	push	r7
    14a6:	8f 92       	push	r8
    14a8:	9f 92       	push	r9
    14aa:	af 92       	push	r10
    14ac:	bf 92       	push	r11
    14ae:	cf 92       	push	r12
    14b0:	df 92       	push	r13
    14b2:	ef 92       	push	r14
    14b4:	ff 92       	push	r15
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
    14ba:	2f 93       	push	r18
    14bc:	3f 93       	push	r19
    14be:	4f 93       	push	r20
    14c0:	5f 93       	push	r21
    14c2:	6f 93       	push	r22
    14c4:	7f 93       	push	r23
    14c6:	8f 93       	push	r24
    14c8:	9f 93       	push	r25
    14ca:	af 93       	push	r26
    14cc:	bf 93       	push	r27
    14ce:	ef 93       	push	r30
    14d0:	ff 93       	push	r31
    14d2:	cf 93       	push	r28
    14d4:	df 93       	push	r29
    14d6:	cd b7       	in	r28, 0x3d	; 61
    14d8:	de b7       	in	r29, 0x3e	; 62
    14da:	68 97       	sbiw	r28, 0x18	; 24
    14dc:	de bf       	out	0x3e, r29	; 62
    14de:	cd bf       	out	0x3d, r28	; 61
	tempo_ms ++;
    14e0:	a0 90 0e 02 	lds	r10, 0x020E	; 0x80020e <tempo_ms>
    14e4:	b0 90 0f 02 	lds	r11, 0x020F	; 0x80020f <tempo_ms+0x1>
    14e8:	c0 90 10 02 	lds	r12, 0x0210	; 0x800210 <tempo_ms+0x2>
    14ec:	d0 90 11 02 	lds	r13, 0x0211	; 0x800211 <tempo_ms+0x3>
    14f0:	e0 90 12 02 	lds	r14, 0x0212	; 0x800212 <tempo_ms+0x4>
    14f4:	f0 90 13 02 	lds	r15, 0x0213	; 0x800213 <tempo_ms+0x5>
    14f8:	00 91 14 02 	lds	r16, 0x0214	; 0x800214 <tempo_ms+0x6>
    14fc:	10 91 15 02 	lds	r17, 0x0215	; 0x800215 <tempo_ms+0x7>
    1500:	2a 2d       	mov	r18, r10
    1502:	3b 2d       	mov	r19, r11
    1504:	4c 2d       	mov	r20, r12
    1506:	5d 2d       	mov	r21, r13
    1508:	6e 2d       	mov	r22, r14
    150a:	7f 2d       	mov	r23, r15
    150c:	80 2f       	mov	r24, r16
    150e:	91 2f       	mov	r25, r17
    1510:	a1 e0       	ldi	r26, 0x01	; 1
    1512:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <__adddi3_s8>
    1516:	a2 2e       	mov	r10, r18
    1518:	b3 2e       	mov	r11, r19
    151a:	c4 2e       	mov	r12, r20
    151c:	d5 2e       	mov	r13, r21
    151e:	e6 2e       	mov	r14, r22
    1520:	f7 2e       	mov	r15, r23
    1522:	08 2f       	mov	r16, r24
    1524:	19 2f       	mov	r17, r25
    1526:	a0 92 0e 02 	sts	0x020E, r10	; 0x80020e <tempo_ms>
    152a:	b0 92 0f 02 	sts	0x020F, r11	; 0x80020f <tempo_ms+0x1>
    152e:	c0 92 10 02 	sts	0x0210, r12	; 0x800210 <tempo_ms+0x2>
    1532:	d0 92 11 02 	sts	0x0211, r13	; 0x800211 <tempo_ms+0x3>
    1536:	e0 92 12 02 	sts	0x0212, r14	; 0x800212 <tempo_ms+0x4>
    153a:	f0 92 13 02 	sts	0x0213, r15	; 0x800213 <tempo_ms+0x5>
    153e:	00 93 14 02 	sts	0x0214, r16	; 0x800214 <tempo_ms+0x6>
    1542:	10 93 15 02 	sts	0x0215, r17	; 0x800215 <tempo_ms+0x7>
	
	periodo = (60000/(2*vol*FreqResp));
    1546:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    154a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    154e:	ac 01       	movw	r20, r24
    1550:	44 0f       	add	r20, r20
    1552:	55 1f       	adc	r21, r21
    1554:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <FreqResp>
    1558:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <FreqResp+0x1>
    155c:	42 9f       	mul	r20, r18
    155e:	c0 01       	movw	r24, r0
    1560:	43 9f       	mul	r20, r19
    1562:	90 0d       	add	r25, r0
    1564:	52 9f       	mul	r21, r18
    1566:	90 0d       	add	r25, r0
    1568:	11 24       	eor	r1, r1
    156a:	9c 01       	movw	r18, r24
    156c:	99 0f       	add	r25, r25
    156e:	44 0b       	sbc	r20, r20
    1570:	55 0b       	sbc	r21, r21
    1572:	80 e6       	ldi	r24, 0x60	; 96
    1574:	9a ee       	ldi	r25, 0xEA	; 234
    1576:	a0 e0       	ldi	r26, 0x00	; 0
    1578:	b0 e0       	ldi	r27, 0x00	; 0
    157a:	bc 01       	movw	r22, r24
    157c:	cd 01       	movw	r24, r26
    157e:	0e 94 e7 1a 	call	0x35ce	; 0x35ce <__divmodsi4>
    1582:	da 01       	movw	r26, r20
    1584:	c9 01       	movw	r24, r18
    1586:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <periodo+0x1>
    158a:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <periodo>
	
	if(modo==1){
    158e:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    1592:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    1596:	01 97       	sbiw	r24, 0x01	; 1
    1598:	09 f0       	breq	.+2      	; 0x159c <__vector_14+0x10e>
    159a:	69 c0       	rjmp	.+210    	; 0x166e <__vector_14+0x1e0>
		if(tempo_ms == esfInicial+tempSensib){
    159c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <tempSensib>
    15a0:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <tempSensib+0x1>
    15a4:	9a 83       	std	Y+2, r25	; 0x02
    15a6:	89 83       	std	Y+1, r24	; 0x01
    15a8:	89 2f       	mov	r24, r25
    15aa:	88 0f       	add	r24, r24
    15ac:	88 0b       	sbc	r24, r24
    15ae:	8b 83       	std	Y+3, r24	; 0x03
    15b0:	8c 83       	std	Y+4, r24	; 0x04
    15b2:	8d 83       	std	Y+5, r24	; 0x05
    15b4:	8e 83       	std	Y+6, r24	; 0x06
    15b6:	8f 83       	std	Y+7, r24	; 0x07
    15b8:	88 87       	std	Y+8, r24	; 0x08
    15ba:	20 90 32 04 	lds	r2, 0x0432	; 0x800432 <esfInicial>
    15be:	30 90 33 04 	lds	r3, 0x0433	; 0x800433 <esfInicial+0x1>
    15c2:	40 90 34 04 	lds	r4, 0x0434	; 0x800434 <esfInicial+0x2>
    15c6:	50 90 35 04 	lds	r5, 0x0435	; 0x800435 <esfInicial+0x3>
    15ca:	60 90 36 04 	lds	r6, 0x0436	; 0x800436 <esfInicial+0x4>
    15ce:	70 90 37 04 	lds	r7, 0x0437	; 0x800437 <esfInicial+0x5>
    15d2:	80 90 38 04 	lds	r8, 0x0438	; 0x800438 <esfInicial+0x6>
    15d6:	90 90 39 04 	lds	r9, 0x0439	; 0x800439 <esfInicial+0x7>
    15da:	29 81       	ldd	r18, Y+1	; 0x01
    15dc:	3a 81       	ldd	r19, Y+2	; 0x02
    15de:	4b 81       	ldd	r20, Y+3	; 0x03
    15e0:	5c 81       	ldd	r21, Y+4	; 0x04
    15e2:	6d 81       	ldd	r22, Y+5	; 0x05
    15e4:	7e 81       	ldd	r23, Y+6	; 0x06
    15e6:	8f 81       	ldd	r24, Y+7	; 0x07
    15e8:	98 85       	ldd	r25, Y+8	; 0x08
    15ea:	a2 2c       	mov	r10, r2
    15ec:	b3 2c       	mov	r11, r3
    15ee:	c4 2c       	mov	r12, r4
    15f0:	d5 2c       	mov	r13, r5
    15f2:	e6 2c       	mov	r14, r6
    15f4:	f7 2c       	mov	r15, r7
    15f6:	08 2d       	mov	r16, r8
    15f8:	19 2d       	mov	r17, r9
    15fa:	0e 94 e3 1b 	call	0x37c6	; 0x37c6 <__adddi3>
    15fe:	a2 2e       	mov	r10, r18
    1600:	b3 2e       	mov	r11, r19
    1602:	c4 2e       	mov	r12, r20
    1604:	d5 2e       	mov	r13, r21
    1606:	e6 2e       	mov	r14, r22
    1608:	f7 2e       	mov	r15, r23
    160a:	08 2f       	mov	r16, r24
    160c:	19 2f       	mov	r17, r25
    160e:	20 90 0e 02 	lds	r2, 0x020E	; 0x80020e <tempo_ms>
    1612:	30 90 0f 02 	lds	r3, 0x020F	; 0x80020f <tempo_ms+0x1>
    1616:	40 90 10 02 	lds	r4, 0x0210	; 0x800210 <tempo_ms+0x2>
    161a:	50 90 11 02 	lds	r5, 0x0211	; 0x800211 <tempo_ms+0x3>
    161e:	60 90 12 02 	lds	r6, 0x0212	; 0x800212 <tempo_ms+0x4>
    1622:	70 90 13 02 	lds	r7, 0x0213	; 0x800213 <tempo_ms+0x5>
    1626:	80 90 14 02 	lds	r8, 0x0214	; 0x800214 <tempo_ms+0x6>
    162a:	90 90 15 02 	lds	r9, 0x0215	; 0x800215 <tempo_ms+0x7>
    162e:	2a 2d       	mov	r18, r10
    1630:	3b 2d       	mov	r19, r11
    1632:	4c 2d       	mov	r20, r12
    1634:	5d 2d       	mov	r21, r13
    1636:	6e 2d       	mov	r22, r14
    1638:	7f 2d       	mov	r23, r15
    163a:	80 2f       	mov	r24, r16
    163c:	91 2f       	mov	r25, r17
    163e:	a2 2c       	mov	r10, r2
    1640:	b3 2c       	mov	r11, r3
    1642:	c4 2c       	mov	r12, r4
    1644:	d5 2c       	mov	r13, r5
    1646:	e6 2c       	mov	r14, r6
    1648:	f7 2c       	mov	r15, r7
    164a:	08 2d       	mov	r16, r8
    164c:	19 2d       	mov	r17, r9
    164e:	0e 94 01 1c 	call	0x3802	; 0x3802 <__cmpdi2>
    1652:	69 f4       	brne	.+26     	; 0x166e <__vector_14+0x1e0>
			p = 0;
    1654:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <p+0x1>
    1658:	10 92 29 04 	sts	0x0429, r1	; 0x800429 <p>
			PORTB = (PORTB | 0b00001000);
    165c:	85 e2       	ldi	r24, 0x25	; 37
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	25 e2       	ldi	r18, 0x25	; 37
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	f9 01       	movw	r30, r18
    1666:	20 81       	ld	r18, Z
    1668:	28 60       	ori	r18, 0x08	; 8
    166a:	fc 01       	movw	r30, r24
    166c:	20 83       	st	Z, r18
		}
	}
	
	if(modo == 1){
    166e:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    1672:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    1676:	01 97       	sbiw	r24, 0x01	; 1
    1678:	09 f0       	breq	.+2      	; 0x167c <__vector_14+0x1ee>
    167a:	67 c0       	rjmp	.+206    	; 0x174a <__vector_14+0x2bc>
		if(p<(2*vol)){
    167c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    1680:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    1684:	9c 01       	movw	r18, r24
    1686:	22 0f       	add	r18, r18
    1688:	33 1f       	adc	r19, r19
    168a:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <p>
    168e:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <p+0x1>
    1692:	82 17       	cp	r24, r18
    1694:	93 07       	cpc	r25, r19
    1696:	0c f0       	brlt	.+2      	; 0x169a <__vector_14+0x20c>
    1698:	58 c0       	rjmp	.+176    	; 0x174a <__vector_14+0x2bc>
			if (tempo_ms%periodo==0){
    169a:	20 90 0e 02 	lds	r2, 0x020E	; 0x80020e <tempo_ms>
    169e:	30 90 0f 02 	lds	r3, 0x020F	; 0x80020f <tempo_ms+0x1>
    16a2:	40 90 10 02 	lds	r4, 0x0210	; 0x800210 <tempo_ms+0x2>
    16a6:	50 90 11 02 	lds	r5, 0x0211	; 0x800211 <tempo_ms+0x3>
    16aa:	60 90 12 02 	lds	r6, 0x0212	; 0x800212 <tempo_ms+0x4>
    16ae:	70 90 13 02 	lds	r7, 0x0213	; 0x800213 <tempo_ms+0x5>
    16b2:	80 90 14 02 	lds	r8, 0x0214	; 0x800214 <tempo_ms+0x6>
    16b6:	90 90 15 02 	lds	r9, 0x0215	; 0x800215 <tempo_ms+0x7>
    16ba:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <periodo>
    16be:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <periodo+0x1>
    16c2:	9a 87       	std	Y+10, r25	; 0x0a
    16c4:	89 87       	std	Y+9, r24	; 0x09
    16c6:	89 2f       	mov	r24, r25
    16c8:	88 0f       	add	r24, r24
    16ca:	88 0b       	sbc	r24, r24
    16cc:	8b 87       	std	Y+11, r24	; 0x0b
    16ce:	8c 87       	std	Y+12, r24	; 0x0c
    16d0:	8d 87       	std	Y+13, r24	; 0x0d
    16d2:	8e 87       	std	Y+14, r24	; 0x0e
    16d4:	8f 87       	std	Y+15, r24	; 0x0f
    16d6:	88 8b       	std	Y+16, r24	; 0x10
    16d8:	a9 84       	ldd	r10, Y+9	; 0x09
    16da:	ba 84       	ldd	r11, Y+10	; 0x0a
    16dc:	cb 84       	ldd	r12, Y+11	; 0x0b
    16de:	dc 84       	ldd	r13, Y+12	; 0x0c
    16e0:	ed 84       	ldd	r14, Y+13	; 0x0d
    16e2:	fe 84       	ldd	r15, Y+14	; 0x0e
    16e4:	0f 85       	ldd	r16, Y+15	; 0x0f
    16e6:	18 89       	ldd	r17, Y+16	; 0x10
    16e8:	22 2d       	mov	r18, r2
    16ea:	33 2d       	mov	r19, r3
    16ec:	44 2d       	mov	r20, r4
    16ee:	55 2d       	mov	r21, r5
    16f0:	66 2d       	mov	r22, r6
    16f2:	77 2d       	mov	r23, r7
    16f4:	88 2d       	mov	r24, r8
    16f6:	99 2d       	mov	r25, r9
    16f8:	0e 94 0c 1b 	call	0x3618	; 0x3618 <__moddi3>
    16fc:	22 2e       	mov	r2, r18
    16fe:	33 2e       	mov	r3, r19
    1700:	44 2e       	mov	r4, r20
    1702:	55 2e       	mov	r5, r21
    1704:	66 2e       	mov	r6, r22
    1706:	77 2e       	mov	r7, r23
    1708:	88 2e       	mov	r8, r24
    170a:	99 2e       	mov	r9, r25
    170c:	a2 2c       	mov	r10, r2
    170e:	b3 2c       	mov	r11, r3
    1710:	c4 2c       	mov	r12, r4
    1712:	d5 2c       	mov	r13, r5
    1714:	e6 2c       	mov	r14, r6
    1716:	f7 2c       	mov	r15, r7
    1718:	08 2d       	mov	r16, r8
    171a:	19 2d       	mov	r17, r9
    171c:	2a 2d       	mov	r18, r10
    171e:	3b 2d       	mov	r19, r11
    1720:	4c 2d       	mov	r20, r12
    1722:	5d 2d       	mov	r21, r13
    1724:	6e 2d       	mov	r22, r14
    1726:	7f 2d       	mov	r23, r15
    1728:	80 2f       	mov	r24, r16
    172a:	91 2f       	mov	r25, r17
    172c:	a0 e0       	ldi	r26, 0x00	; 0
    172e:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__cmpdi2_s8>
    1732:	59 f4       	brne	.+22     	; 0x174a <__vector_14+0x2bc>
				ctrlRespiracao();
    1734:	0e 94 00 07 	call	0xe00	; 0xe00 <ctrlRespiracao>
				p++;
    1738:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <p>
    173c:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <p+0x1>
    1740:	01 96       	adiw	r24, 0x01	; 1
    1742:	90 93 2a 04 	sts	0x042A, r25	; 0x80042a <p+0x1>
    1746:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <p>
			}
		}
	}
	
	if(p==2*vol){
    174a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    174e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    1752:	9c 01       	movw	r18, r24
    1754:	22 0f       	add	r18, r18
    1756:	33 1f       	adc	r19, r19
    1758:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <p>
    175c:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <p+0x1>
    1760:	28 17       	cp	r18, r24
    1762:	39 07       	cpc	r19, r25
    1764:	51 f4       	brne	.+20     	; 0x177a <__vector_14+0x2ec>
		if (mude_p0)
    1766:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <mude_p0>
    176a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <mude_p0+0x1>
    176e:	89 2b       	or	r24, r25
    1770:	21 f0       	breq	.+8      	; 0x177a <__vector_14+0x2ec>
			modo = 0;
    1772:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <modo+0x1>
    1776:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <modo>
	}
	
	if (modo == 0){
    177a:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    177e:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    1782:	89 2b       	or	r24, r25
    1784:	09 f0       	breq	.+2      	; 0x1788 <__vector_14+0x2fa>
    1786:	4f c0       	rjmp	.+158    	; 0x1826 <__vector_14+0x398>
		if (tempo_ms%periodo==0)
    1788:	20 90 0e 02 	lds	r2, 0x020E	; 0x80020e <tempo_ms>
    178c:	30 90 0f 02 	lds	r3, 0x020F	; 0x80020f <tempo_ms+0x1>
    1790:	40 90 10 02 	lds	r4, 0x0210	; 0x800210 <tempo_ms+0x2>
    1794:	50 90 11 02 	lds	r5, 0x0211	; 0x800211 <tempo_ms+0x3>
    1798:	60 90 12 02 	lds	r6, 0x0212	; 0x800212 <tempo_ms+0x4>
    179c:	70 90 13 02 	lds	r7, 0x0213	; 0x800213 <tempo_ms+0x5>
    17a0:	80 90 14 02 	lds	r8, 0x0214	; 0x800214 <tempo_ms+0x6>
    17a4:	90 90 15 02 	lds	r9, 0x0215	; 0x800215 <tempo_ms+0x7>
    17a8:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <periodo>
    17ac:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <periodo+0x1>
    17b0:	9a 8b       	std	Y+18, r25	; 0x12
    17b2:	89 8b       	std	Y+17, r24	; 0x11
    17b4:	89 2f       	mov	r24, r25
    17b6:	88 0f       	add	r24, r24
    17b8:	88 0b       	sbc	r24, r24
    17ba:	8b 8b       	std	Y+19, r24	; 0x13
    17bc:	8c 8b       	std	Y+20, r24	; 0x14
    17be:	8d 8b       	std	Y+21, r24	; 0x15
    17c0:	8e 8b       	std	Y+22, r24	; 0x16
    17c2:	8f 8b       	std	Y+23, r24	; 0x17
    17c4:	88 8f       	std	Y+24, r24	; 0x18
    17c6:	a9 88       	ldd	r10, Y+17	; 0x11
    17c8:	ba 88       	ldd	r11, Y+18	; 0x12
    17ca:	cb 88       	ldd	r12, Y+19	; 0x13
    17cc:	dc 88       	ldd	r13, Y+20	; 0x14
    17ce:	ed 88       	ldd	r14, Y+21	; 0x15
    17d0:	fe 88       	ldd	r15, Y+22	; 0x16
    17d2:	0f 89       	ldd	r16, Y+23	; 0x17
    17d4:	18 8d       	ldd	r17, Y+24	; 0x18
    17d6:	22 2d       	mov	r18, r2
    17d8:	33 2d       	mov	r19, r3
    17da:	44 2d       	mov	r20, r4
    17dc:	55 2d       	mov	r21, r5
    17de:	66 2d       	mov	r22, r6
    17e0:	77 2d       	mov	r23, r7
    17e2:	88 2d       	mov	r24, r8
    17e4:	99 2d       	mov	r25, r9
    17e6:	0e 94 0c 1b 	call	0x3618	; 0x3618 <__moddi3>
    17ea:	22 2e       	mov	r2, r18
    17ec:	33 2e       	mov	r3, r19
    17ee:	44 2e       	mov	r4, r20
    17f0:	55 2e       	mov	r5, r21
    17f2:	66 2e       	mov	r6, r22
    17f4:	77 2e       	mov	r7, r23
    17f6:	88 2e       	mov	r8, r24
    17f8:	99 2e       	mov	r9, r25
    17fa:	a2 2c       	mov	r10, r2
    17fc:	b3 2c       	mov	r11, r3
    17fe:	c4 2c       	mov	r12, r4
    1800:	d5 2c       	mov	r13, r5
    1802:	e6 2c       	mov	r14, r6
    1804:	f7 2c       	mov	r15, r7
    1806:	08 2d       	mov	r16, r8
    1808:	19 2d       	mov	r17, r9
    180a:	2a 2d       	mov	r18, r10
    180c:	3b 2d       	mov	r19, r11
    180e:	4c 2d       	mov	r20, r12
    1810:	5d 2d       	mov	r21, r13
    1812:	6e 2d       	mov	r22, r14
    1814:	7f 2d       	mov	r23, r15
    1816:	80 2f       	mov	r24, r16
    1818:	91 2f       	mov	r25, r17
    181a:	a0 e0       	ldi	r26, 0x00	; 0
    181c:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__cmpdi2_s8>
    1820:	11 f4       	brne	.+4      	; 0x1826 <__vector_14+0x398>
			ctrlRespiracao();
    1822:	0e 94 00 07 	call	0xe00	; 0xe00 <ctrlRespiracao>
	}
	
	if(tempo_ms%150==0){
    1826:	20 90 0e 02 	lds	r2, 0x020E	; 0x80020e <tempo_ms>
    182a:	30 90 0f 02 	lds	r3, 0x020F	; 0x80020f <tempo_ms+0x1>
    182e:	40 90 10 02 	lds	r4, 0x0210	; 0x800210 <tempo_ms+0x2>
    1832:	50 90 11 02 	lds	r5, 0x0211	; 0x800211 <tempo_ms+0x3>
    1836:	60 90 12 02 	lds	r6, 0x0212	; 0x800212 <tempo_ms+0x4>
    183a:	70 90 13 02 	lds	r7, 0x0213	; 0x800213 <tempo_ms+0x5>
    183e:	80 90 14 02 	lds	r8, 0x0214	; 0x800214 <tempo_ms+0x6>
    1842:	90 90 15 02 	lds	r9, 0x0215	; 0x800215 <tempo_ms+0x7>
    1846:	0f 2e       	mov	r0, r31
    1848:	f6 e9       	ldi	r31, 0x96	; 150
    184a:	af 2e       	mov	r10, r31
    184c:	f0 2d       	mov	r31, r0
    184e:	b1 2c       	mov	r11, r1
    1850:	c1 2c       	mov	r12, r1
    1852:	d1 2c       	mov	r13, r1
    1854:	e1 2c       	mov	r14, r1
    1856:	f1 2c       	mov	r15, r1
    1858:	00 e0       	ldi	r16, 0x00	; 0
    185a:	10 e0       	ldi	r17, 0x00	; 0
    185c:	22 2d       	mov	r18, r2
    185e:	33 2d       	mov	r19, r3
    1860:	44 2d       	mov	r20, r4
    1862:	55 2d       	mov	r21, r5
    1864:	66 2d       	mov	r22, r6
    1866:	77 2d       	mov	r23, r7
    1868:	88 2d       	mov	r24, r8
    186a:	99 2d       	mov	r25, r9
    186c:	0e 94 0c 1b 	call	0x3618	; 0x3618 <__moddi3>
    1870:	22 2e       	mov	r2, r18
    1872:	33 2e       	mov	r3, r19
    1874:	44 2e       	mov	r4, r20
    1876:	55 2e       	mov	r5, r21
    1878:	66 2e       	mov	r6, r22
    187a:	77 2e       	mov	r7, r23
    187c:	88 2e       	mov	r8, r24
    187e:	99 2e       	mov	r9, r25
    1880:	a2 2c       	mov	r10, r2
    1882:	b3 2c       	mov	r11, r3
    1884:	c4 2c       	mov	r12, r4
    1886:	d5 2c       	mov	r13, r5
    1888:	e6 2c       	mov	r14, r6
    188a:	f7 2c       	mov	r15, r7
    188c:	08 2d       	mov	r16, r8
    188e:	19 2d       	mov	r17, r9
    1890:	2a 2d       	mov	r18, r10
    1892:	3b 2d       	mov	r19, r11
    1894:	4c 2d       	mov	r20, r12
    1896:	5d 2d       	mov	r21, r13
    1898:	6e 2d       	mov	r22, r14
    189a:	7f 2d       	mov	r23, r15
    189c:	80 2f       	mov	r24, r16
    189e:	91 2f       	mov	r25, r17
    18a0:	a0 e0       	ldi	r26, 0x00	; 0
    18a2:	0e 94 0a 1c 	call	0x3814	; 0x3814 <__cmpdi2_s8>
    18a6:	a1 f4       	brne	.+40     	; 0x18d0 <__vector_14+0x442>
		ADMUX ^= 0b00000001;
    18a8:	8c e7       	ldi	r24, 0x7C	; 124
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	2c e7       	ldi	r18, 0x7C	; 124
    18ae:	30 e0       	ldi	r19, 0x00	; 0
    18b0:	f9 01       	movw	r30, r18
    18b2:	30 81       	ld	r19, Z
    18b4:	21 e0       	ldi	r18, 0x01	; 1
    18b6:	23 27       	eor	r18, r19
    18b8:	fc 01       	movw	r30, r24
    18ba:	20 83       	st	Z, r18
		DIDR0 ^= 0b00000011;
    18bc:	8e e7       	ldi	r24, 0x7E	; 126
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	2e e7       	ldi	r18, 0x7E	; 126
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	f9 01       	movw	r30, r18
    18c6:	30 81       	ld	r19, Z
    18c8:	23 e0       	ldi	r18, 0x03	; 3
    18ca:	23 27       	eor	r18, r19
    18cc:	fc 01       	movw	r30, r24
    18ce:	20 83       	st	Z, r18
	}
	
}
    18d0:	00 00       	nop
    18d2:	68 96       	adiw	r28, 0x18	; 24
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	f8 94       	cli
    18d8:	de bf       	out	0x3e, r29	; 62
    18da:	0f be       	out	0x3f, r0	; 63
    18dc:	cd bf       	out	0x3d, r28	; 61
    18de:	df 91       	pop	r29
    18e0:	cf 91       	pop	r28
    18e2:	ff 91       	pop	r31
    18e4:	ef 91       	pop	r30
    18e6:	bf 91       	pop	r27
    18e8:	af 91       	pop	r26
    18ea:	9f 91       	pop	r25
    18ec:	8f 91       	pop	r24
    18ee:	7f 91       	pop	r23
    18f0:	6f 91       	pop	r22
    18f2:	5f 91       	pop	r21
    18f4:	4f 91       	pop	r20
    18f6:	3f 91       	pop	r19
    18f8:	2f 91       	pop	r18
    18fa:	1f 91       	pop	r17
    18fc:	0f 91       	pop	r16
    18fe:	ff 90       	pop	r15
    1900:	ef 90       	pop	r14
    1902:	df 90       	pop	r13
    1904:	cf 90       	pop	r12
    1906:	bf 90       	pop	r11
    1908:	af 90       	pop	r10
    190a:	9f 90       	pop	r9
    190c:	8f 90       	pop	r8
    190e:	7f 90       	pop	r7
    1910:	6f 90       	pop	r6
    1912:	5f 90       	pop	r5
    1914:	4f 90       	pop	r4
    1916:	3f 90       	pop	r3
    1918:	2f 90       	pop	r2
    191a:	0f 90       	pop	r0
    191c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1920:	0f 90       	pop	r0
    1922:	1f 90       	pop	r1
    1924:	18 95       	reti

00001926 <__vector_2>:

ISR (INT1_vect)
{
    1926:	1f 92       	push	r1
    1928:	0f 92       	push	r0
    192a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    192e:	0f 92       	push	r0
    1930:	11 24       	eor	r1, r1
    1932:	2f 92       	push	r2
    1934:	3f 92       	push	r3
    1936:	4f 92       	push	r4
    1938:	5f 92       	push	r5
    193a:	6f 92       	push	r6
    193c:	7f 92       	push	r7
    193e:	8f 92       	push	r8
    1940:	9f 92       	push	r9
    1942:	af 92       	push	r10
    1944:	bf 92       	push	r11
    1946:	cf 92       	push	r12
    1948:	df 92       	push	r13
    194a:	ef 92       	push	r14
    194c:	ff 92       	push	r15
    194e:	0f 93       	push	r16
    1950:	1f 93       	push	r17
    1952:	2f 93       	push	r18
    1954:	3f 93       	push	r19
    1956:	4f 93       	push	r20
    1958:	5f 93       	push	r21
    195a:	6f 93       	push	r22
    195c:	7f 93       	push	r23
    195e:	8f 93       	push	r24
    1960:	9f 93       	push	r25
    1962:	af 93       	push	r26
    1964:	bf 93       	push	r27
    1966:	ef 93       	push	r30
    1968:	ff 93       	push	r31
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	cd b7       	in	r28, 0x3d	; 61
    1970:	de b7       	in	r29, 0x3e	; 62
	if (PIND == (PIND | 0b00001000)) //borda de subida?
    1972:	89 e2       	ldi	r24, 0x29	; 41
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	fc 01       	movw	r30, r24
    1978:	20 81       	ld	r18, Z
    197a:	89 e2       	ldi	r24, 0x29	; 41
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	fc 01       	movw	r30, r24
    1980:	80 81       	ld	r24, Z
    1982:	88 60       	ori	r24, 0x08	; 8
    1984:	28 17       	cp	r18, r24
    1986:	a1 f5       	brne	.+104    	; 0x19f0 <__vector_2+0xca>
		start_T = tempo_ms - 15;
    1988:	a0 90 0e 02 	lds	r10, 0x020E	; 0x80020e <tempo_ms>
    198c:	b0 90 0f 02 	lds	r11, 0x020F	; 0x80020f <tempo_ms+0x1>
    1990:	c0 90 10 02 	lds	r12, 0x0210	; 0x800210 <tempo_ms+0x2>
    1994:	d0 90 11 02 	lds	r13, 0x0211	; 0x800211 <tempo_ms+0x3>
    1998:	e0 90 12 02 	lds	r14, 0x0212	; 0x800212 <tempo_ms+0x4>
    199c:	f0 90 13 02 	lds	r15, 0x0213	; 0x800213 <tempo_ms+0x5>
    19a0:	00 91 14 02 	lds	r16, 0x0214	; 0x800214 <tempo_ms+0x6>
    19a4:	10 91 15 02 	lds	r17, 0x0215	; 0x800215 <tempo_ms+0x7>
    19a8:	2a 2d       	mov	r18, r10
    19aa:	3b 2d       	mov	r19, r11
    19ac:	4c 2d       	mov	r20, r12
    19ae:	5d 2d       	mov	r21, r13
    19b0:	6e 2d       	mov	r22, r14
    19b2:	7f 2d       	mov	r23, r15
    19b4:	80 2f       	mov	r24, r16
    19b6:	91 2f       	mov	r25, r17
    19b8:	a1 ef       	ldi	r26, 0xF1	; 241
    19ba:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <__adddi3_s8>
    19be:	a2 2e       	mov	r10, r18
    19c0:	b3 2e       	mov	r11, r19
    19c2:	c4 2e       	mov	r12, r20
    19c4:	d5 2e       	mov	r13, r21
    19c6:	e6 2e       	mov	r14, r22
    19c8:	f7 2e       	mov	r15, r23
    19ca:	08 2f       	mov	r16, r24
    19cc:	19 2f       	mov	r17, r25
    19ce:	a0 92 3c 04 	sts	0x043C, r10	; 0x80043c <start_T>
    19d2:	b0 92 3d 04 	sts	0x043D, r11	; 0x80043d <start_T+0x1>
    19d6:	c0 92 3e 04 	sts	0x043E, r12	; 0x80043e <start_T+0x2>
    19da:	d0 92 3f 04 	sts	0x043F, r13	; 0x80043f <start_T+0x3>
    19de:	e0 92 40 04 	sts	0x0440, r14	; 0x800440 <start_T+0x4>
    19e2:	f0 92 41 04 	sts	0x0441, r15	; 0x800441 <start_T+0x5>
    19e6:	00 93 42 04 	sts	0x0442, r16	; 0x800442 <start_T+0x6>
    19ea:	10 93 43 04 	sts	0x0443, r17	; 0x800443 <start_T+0x7>
	{
		final_T = tempo_ms - 15; // final do período
		half_T = final_T - start_T; // período em ms
		FreqCardio = (1.0/half_T)*30000; // conversão de KHz para bpm
	}
}
    19ee:	b9 c0       	rjmp	.+370    	; 0x1b62 <__vector_2+0x23c>

ISR (INT1_vect)
{
	if (PIND == (PIND | 0b00001000)) //borda de subida?
		start_T = tempo_ms - 15;
	else if (PIND == (PIND & 0b11110111)) //borda de descida?
    19f0:	89 e2       	ldi	r24, 0x29	; 41
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	fc 01       	movw	r30, r24
    19f6:	80 81       	ld	r24, Z
    19f8:	28 2f       	mov	r18, r24
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	89 e2       	ldi	r24, 0x29	; 41
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	fc 01       	movw	r30, r24
    1a02:	80 81       	ld	r24, Z
    1a04:	88 2f       	mov	r24, r24
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	87 7f       	andi	r24, 0xF7	; 247
    1a0a:	99 27       	eor	r25, r25
    1a0c:	28 17       	cp	r18, r24
    1a0e:	39 07       	cpc	r19, r25
    1a10:	09 f0       	breq	.+2      	; 0x1a14 <__vector_2+0xee>
    1a12:	a7 c0       	rjmp	.+334    	; 0x1b62 <__vector_2+0x23c>
	{
		final_T = tempo_ms - 15; // final do período
    1a14:	a0 90 0e 02 	lds	r10, 0x020E	; 0x80020e <tempo_ms>
    1a18:	b0 90 0f 02 	lds	r11, 0x020F	; 0x80020f <tempo_ms+0x1>
    1a1c:	c0 90 10 02 	lds	r12, 0x0210	; 0x800210 <tempo_ms+0x2>
    1a20:	d0 90 11 02 	lds	r13, 0x0211	; 0x800211 <tempo_ms+0x3>
    1a24:	e0 90 12 02 	lds	r14, 0x0212	; 0x800212 <tempo_ms+0x4>
    1a28:	f0 90 13 02 	lds	r15, 0x0213	; 0x800213 <tempo_ms+0x5>
    1a2c:	00 91 14 02 	lds	r16, 0x0214	; 0x800214 <tempo_ms+0x6>
    1a30:	10 91 15 02 	lds	r17, 0x0215	; 0x800215 <tempo_ms+0x7>
    1a34:	2a 2d       	mov	r18, r10
    1a36:	3b 2d       	mov	r19, r11
    1a38:	4c 2d       	mov	r20, r12
    1a3a:	5d 2d       	mov	r21, r13
    1a3c:	6e 2d       	mov	r22, r14
    1a3e:	7f 2d       	mov	r23, r15
    1a40:	80 2f       	mov	r24, r16
    1a42:	91 2f       	mov	r25, r17
    1a44:	a1 ef       	ldi	r26, 0xF1	; 241
    1a46:	0e 94 ec 1b 	call	0x37d8	; 0x37d8 <__adddi3_s8>
    1a4a:	a2 2e       	mov	r10, r18
    1a4c:	b3 2e       	mov	r11, r19
    1a4e:	c4 2e       	mov	r12, r20
    1a50:	d5 2e       	mov	r13, r21
    1a52:	e6 2e       	mov	r14, r22
    1a54:	f7 2e       	mov	r15, r23
    1a56:	08 2f       	mov	r16, r24
    1a58:	19 2f       	mov	r17, r25
    1a5a:	a0 92 4c 04 	sts	0x044C, r10	; 0x80044c <final_T>
    1a5e:	b0 92 4d 04 	sts	0x044D, r11	; 0x80044d <final_T+0x1>
    1a62:	c0 92 4e 04 	sts	0x044E, r12	; 0x80044e <final_T+0x2>
    1a66:	d0 92 4f 04 	sts	0x044F, r13	; 0x80044f <final_T+0x3>
    1a6a:	e0 92 50 04 	sts	0x0450, r14	; 0x800450 <final_T+0x4>
    1a6e:	f0 92 51 04 	sts	0x0451, r15	; 0x800451 <final_T+0x5>
    1a72:	00 93 52 04 	sts	0x0452, r16	; 0x800452 <final_T+0x6>
    1a76:	10 93 53 04 	sts	0x0453, r17	; 0x800453 <final_T+0x7>
		half_T = final_T - start_T; // período em ms
    1a7a:	a0 90 4c 04 	lds	r10, 0x044C	; 0x80044c <final_T>
    1a7e:	b0 90 4d 04 	lds	r11, 0x044D	; 0x80044d <final_T+0x1>
    1a82:	c0 90 4e 04 	lds	r12, 0x044E	; 0x80044e <final_T+0x2>
    1a86:	d0 90 4f 04 	lds	r13, 0x044F	; 0x80044f <final_T+0x3>
    1a8a:	e0 90 50 04 	lds	r14, 0x0450	; 0x800450 <final_T+0x4>
    1a8e:	f0 90 51 04 	lds	r15, 0x0451	; 0x800451 <final_T+0x5>
    1a92:	00 91 52 04 	lds	r16, 0x0452	; 0x800452 <final_T+0x6>
    1a96:	10 91 53 04 	lds	r17, 0x0453	; 0x800453 <final_T+0x7>
    1a9a:	20 90 3c 04 	lds	r2, 0x043C	; 0x80043c <start_T>
    1a9e:	30 90 3d 04 	lds	r3, 0x043D	; 0x80043d <start_T+0x1>
    1aa2:	40 90 3e 04 	lds	r4, 0x043E	; 0x80043e <start_T+0x2>
    1aa6:	50 90 3f 04 	lds	r5, 0x043F	; 0x80043f <start_T+0x3>
    1aaa:	60 90 40 04 	lds	r6, 0x0440	; 0x800440 <start_T+0x4>
    1aae:	70 90 41 04 	lds	r7, 0x0441	; 0x800441 <start_T+0x5>
    1ab2:	80 90 42 04 	lds	r8, 0x0442	; 0x800442 <start_T+0x6>
    1ab6:	90 90 43 04 	lds	r9, 0x0443	; 0x800443 <start_T+0x7>
    1aba:	2a 2d       	mov	r18, r10
    1abc:	3b 2d       	mov	r19, r11
    1abe:	4c 2d       	mov	r20, r12
    1ac0:	5d 2d       	mov	r21, r13
    1ac2:	6e 2d       	mov	r22, r14
    1ac4:	7f 2d       	mov	r23, r15
    1ac6:	80 2f       	mov	r24, r16
    1ac8:	91 2f       	mov	r25, r17
    1aca:	a2 2c       	mov	r10, r2
    1acc:	b3 2c       	mov	r11, r3
    1ace:	c4 2c       	mov	r12, r4
    1ad0:	d5 2c       	mov	r13, r5
    1ad2:	e6 2c       	mov	r14, r6
    1ad4:	f7 2c       	mov	r15, r7
    1ad6:	08 2d       	mov	r16, r8
    1ad8:	19 2d       	mov	r17, r9
    1ada:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <__subdi3>
    1ade:	a2 2e       	mov	r10, r18
    1ae0:	b3 2e       	mov	r11, r19
    1ae2:	c4 2e       	mov	r12, r20
    1ae4:	d5 2e       	mov	r13, r21
    1ae6:	e6 2e       	mov	r14, r22
    1ae8:	f7 2e       	mov	r15, r23
    1aea:	08 2f       	mov	r16, r24
    1aec:	19 2f       	mov	r17, r25
    1aee:	2a 2d       	mov	r18, r10
    1af0:	3b 2d       	mov	r19, r11
    1af2:	4c 2d       	mov	r20, r12
    1af4:	5d 2d       	mov	r21, r13
    1af6:	6e 2d       	mov	r22, r14
    1af8:	7f 2d       	mov	r23, r15
    1afa:	80 2f       	mov	r24, r16
    1afc:	91 2f       	mov	r25, r17
    1afe:	0e 94 4f 19 	call	0x329e	; 0x329e <__floatdisf>
    1b02:	dc 01       	movw	r26, r24
    1b04:	cb 01       	movw	r24, r22
    1b06:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <half_T>
    1b0a:	90 93 47 04 	sts	0x0447, r25	; 0x800447 <half_T+0x1>
    1b0e:	a0 93 48 04 	sts	0x0448, r26	; 0x800448 <half_T+0x2>
    1b12:	b0 93 49 04 	sts	0x0449, r27	; 0x800449 <half_T+0x3>
		FreqCardio = (1.0/half_T)*30000; // conversão de KHz para bpm
    1b16:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <half_T>
    1b1a:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <half_T+0x1>
    1b1e:	a0 91 48 04 	lds	r26, 0x0448	; 0x800448 <half_T+0x2>
    1b22:	b0 91 49 04 	lds	r27, 0x0449	; 0x800449 <half_T+0x3>
    1b26:	9c 01       	movw	r18, r24
    1b28:	ad 01       	movw	r20, r26
    1b2a:	60 e0       	ldi	r22, 0x00	; 0
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	80 e8       	ldi	r24, 0x80	; 128
    1b30:	9f e3       	ldi	r25, 0x3F	; 63
    1b32:	0e 94 a7 18 	call	0x314e	; 0x314e <__divsf3>
    1b36:	dc 01       	movw	r26, r24
    1b38:	cb 01       	movw	r24, r22
    1b3a:	20 e0       	ldi	r18, 0x00	; 0
    1b3c:	30 e6       	ldi	r19, 0x60	; 96
    1b3e:	4a ee       	ldi	r20, 0xEA	; 234
    1b40:	56 e4       	ldi	r21, 0x46	; 70
    1b42:	bc 01       	movw	r22, r24
    1b44:	cd 01       	movw	r24, r26
    1b46:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	cb 01       	movw	r24, r22
    1b4e:	bc 01       	movw	r22, r24
    1b50:	cd 01       	movw	r24, r26
    1b52:	0e 94 19 19 	call	0x3232	; 0x3232 <__fixsfsi>
    1b56:	dc 01       	movw	r26, r24
    1b58:	cb 01       	movw	r24, r22
    1b5a:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <FreqCardio+0x1>
    1b5e:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <FreqCardio>
	}
}
    1b62:	00 00       	nop
    1b64:	df 91       	pop	r29
    1b66:	cf 91       	pop	r28
    1b68:	ff 91       	pop	r31
    1b6a:	ef 91       	pop	r30
    1b6c:	bf 91       	pop	r27
    1b6e:	af 91       	pop	r26
    1b70:	9f 91       	pop	r25
    1b72:	8f 91       	pop	r24
    1b74:	7f 91       	pop	r23
    1b76:	6f 91       	pop	r22
    1b78:	5f 91       	pop	r21
    1b7a:	4f 91       	pop	r20
    1b7c:	3f 91       	pop	r19
    1b7e:	2f 91       	pop	r18
    1b80:	1f 91       	pop	r17
    1b82:	0f 91       	pop	r16
    1b84:	ff 90       	pop	r15
    1b86:	ef 90       	pop	r14
    1b88:	df 90       	pop	r13
    1b8a:	cf 90       	pop	r12
    1b8c:	bf 90       	pop	r11
    1b8e:	af 90       	pop	r10
    1b90:	9f 90       	pop	r9
    1b92:	8f 90       	pop	r8
    1b94:	7f 90       	pop	r7
    1b96:	6f 90       	pop	r6
    1b98:	5f 90       	pop	r5
    1b9a:	4f 90       	pop	r4
    1b9c:	3f 90       	pop	r3
    1b9e:	2f 90       	pop	r2
    1ba0:	0f 90       	pop	r0
    1ba2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1ba6:	0f 90       	pop	r0
    1ba8:	1f 90       	pop	r1
    1baa:	18 95       	reti

00001bac <vitaisLCD>:

void vitaisLCD(){
    1bac:	cf 93       	push	r28
    1bae:	df 93       	push	r29
    1bb0:	cd b7       	in	r28, 0x3d	; 61
    1bb2:	de b7       	in	r29, 0x3e	; 62
    1bb4:	2e 97       	sbiw	r28, 0x0e	; 14
    1bb6:	0f b6       	in	r0, 0x3f	; 63
    1bb8:	f8 94       	cli
    1bba:	de bf       	out	0x3e, r29	; 62
    1bbc:	0f be       	out	0x3f, r0	; 63
    1bbe:	cd bf       	out	0x3d, r28	; 61

	char bpm[3], o2[2];
	char str2[2], str1[1];
	int Temp_int = Temp;
    1bc0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Temp>
    1bc4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Temp+0x1>
    1bc8:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <Temp+0x2>
    1bcc:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <Temp+0x3>
    1bd0:	bc 01       	movw	r22, r24
    1bd2:	cd 01       	movw	r24, r26
    1bd4:	0e 94 19 19 	call	0x3232	; 0x3232 <__fixsfsi>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	9a 83       	std	Y+2, r25	; 0x02
    1bde:	89 83       	std	Y+1, r24	; 0x01
	int aux = 10*Temp;
    1be0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Temp>
    1be4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Temp+0x1>
    1be8:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <Temp+0x2>
    1bec:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <Temp+0x3>
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	40 e2       	ldi	r20, 0x20	; 32
    1bf6:	51 e4       	ldi	r21, 0x41	; 65
    1bf8:	bc 01       	movw	r22, r24
    1bfa:	cd 01       	movw	r24, r26
    1bfc:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    1c00:	dc 01       	movw	r26, r24
    1c02:	cb 01       	movw	r24, r22
    1c04:	bc 01       	movw	r22, r24
    1c06:	cd 01       	movw	r24, r26
    1c08:	0e 94 19 19 	call	0x3232	; 0x3232 <__fixsfsi>
    1c0c:	dc 01       	movw	r26, r24
    1c0e:	cb 01       	movw	r24, r22
    1c10:	9c 83       	std	Y+4, r25	; 0x04
    1c12:	8b 83       	std	Y+3, r24	; 0x03
	int Temp_frac = aux%10;
    1c14:	8b 81       	ldd	r24, Y+3	; 0x03
    1c16:	9c 81       	ldd	r25, Y+4	; 0x04
    1c18:	2a e0       	ldi	r18, 0x0A	; 10
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	b9 01       	movw	r22, r18
    1c1e:	0e 94 d3 1a 	call	0x35a6	; 0x35a6 <__divmodhi4>
    1c22:	9e 83       	std	Y+6, r25	; 0x06
    1c24:	8d 83       	std	Y+5, r24	; 0x05
	
	nokia_lcd_set_cursor(2,1);
    1c26:	61 e0       	ldi	r22, 0x01	; 1
    1c28:	82 e0       	ldi	r24, 0x02	; 2
    1c2a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("SINAIS VITAIS", 1);
    1c2e:	61 e0       	ldi	r22, 0x01	; 1
    1c30:	8d e5       	ldi	r24, 0x5D	; 93
    1c32:	91 e0       	ldi	r25, 0x01	; 1
    1c34:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(5,10);
    1c38:	6a e0       	ldi	r22, 0x0A	; 10
    1c3a:	85 e0       	ldi	r24, 0x05	; 5
    1c3c:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	itoa(FreqCardio, bpm, 10);
    1c40:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <FreqCardio>
    1c44:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <FreqCardio+0x1>
    1c48:	9e 01       	movw	r18, r28
    1c4a:	29 5f       	subi	r18, 0xF9	; 249
    1c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4e:	4a e0       	ldi	r20, 0x0A	; 10
    1c50:	50 e0       	ldi	r21, 0x00	; 0
    1c52:	b9 01       	movw	r22, r18
    1c54:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_write_string("    ", 1);
    1c58:	61 e0       	ldi	r22, 0x01	; 1
    1c5a:	8b e6       	ldi	r24, 0x6B	; 107
    1c5c:	91 e0       	ldi	r25, 0x01	; 1
    1c5e:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,10);
    1c62:	6a e0       	ldi	r22, 0x0A	; 10
    1c64:	85 e0       	ldi	r24, 0x05	; 5
    1c66:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(bpm, 1);
    1c6a:	ce 01       	movw	r24, r28
    1c6c:	07 96       	adiw	r24, 0x07	; 7
    1c6e:	61 e0       	ldi	r22, 0x01	; 1
    1c70:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,10);
    1c74:	6a e0       	ldi	r22, 0x0A	; 10
    1c76:	8d e2       	ldi	r24, 0x2D	; 45
    1c78:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("bpm", 1);
    1c7c:	61 e0       	ldi	r22, 0x01	; 1
    1c7e:	80 e7       	ldi	r24, 0x70	; 112
    1c80:	91 e0       	ldi	r25, 0x01	; 1
    1c82:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(5,19);
    1c86:	63 e1       	ldi	r22, 0x13	; 19
    1c88:	85 e0       	ldi	r24, 0x05	; 5
    1c8a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	itoa(O2, o2, 10);
    1c8e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <O2>
    1c92:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <O2+0x1>
    1c96:	9e 01       	movw	r18, r28
    1c98:	26 5f       	subi	r18, 0xF6	; 246
    1c9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9c:	4a e0       	ldi	r20, 0x0A	; 10
    1c9e:	50 e0       	ldi	r21, 0x00	; 0
    1ca0:	b9 01       	movw	r22, r18
    1ca2:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_write_string("    ", 1);
    1ca6:	61 e0       	ldi	r22, 0x01	; 1
    1ca8:	8b e6       	ldi	r24, 0x6B	; 107
    1caa:	91 e0       	ldi	r25, 0x01	; 1
    1cac:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,19);
    1cb0:	63 e1       	ldi	r22, 0x13	; 19
    1cb2:	85 e0       	ldi	r24, 0x05	; 5
    1cb4:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(o2, 1);
    1cb8:	ce 01       	movw	r24, r28
    1cba:	0a 96       	adiw	r24, 0x0a	; 10
    1cbc:	61 e0       	ldi	r22, 0x01	; 1
    1cbe:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,19);
    1cc2:	63 e1       	ldi	r22, 0x13	; 19
    1cc4:	8d e2       	ldi	r24, 0x2D	; 45
    1cc6:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("%SpO2", 1);
    1cca:	61 e0       	ldi	r22, 0x01	; 1
    1ccc:	84 e7       	ldi	r24, 0x74	; 116
    1cce:	91 e0       	ldi	r25, 0x01	; 1
    1cd0:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(5,28);
    1cd4:	6c e1       	ldi	r22, 0x1C	; 28
    1cd6:	85 e0       	ldi	r24, 0x05	; 5
    1cd8:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("    ", 1);
    1cdc:	61 e0       	ldi	r22, 0x01	; 1
    1cde:	8b e6       	ldi	r24, 0x6B	; 107
    1ce0:	91 e0       	ldi	r25, 0x01	; 1
    1ce2:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,28);
    1ce6:	6c e1       	ldi	r22, 0x1C	; 28
    1ce8:	85 e0       	ldi	r24, 0x05	; 5
    1cea:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	itoa(Temp_int, str2, 10);
    1cee:	9e 01       	movw	r18, r28
    1cf0:	24 5f       	subi	r18, 0xF4	; 244
    1cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf4:	89 81       	ldd	r24, Y+1	; 0x01
    1cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    1cf8:	4a e0       	ldi	r20, 0x0A	; 10
    1cfa:	50 e0       	ldi	r21, 0x00	; 0
    1cfc:	b9 01       	movw	r22, r18
    1cfe:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_write_string(str2, 1);
    1d02:	ce 01       	movw	r24, r28
    1d04:	0c 96       	adiw	r24, 0x0c	; 12
    1d06:	61 e0       	ldi	r22, 0x01	; 1
    1d08:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(18,28);
    1d0c:	6c e1       	ldi	r22, 0x1C	; 28
    1d0e:	82 e1       	ldi	r24, 0x12	; 18
    1d10:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(".",1);
    1d14:	61 e0       	ldi	r22, 0x01	; 1
    1d16:	8a e7       	ldi	r24, 0x7A	; 122
    1d18:	91 e0       	ldi	r25, 0x01	; 1
    1d1a:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(23,28);
    1d1e:	6c e1       	ldi	r22, 0x1C	; 28
    1d20:	87 e1       	ldi	r24, 0x17	; 23
    1d22:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	itoa(Temp_frac, str1, 10);
    1d26:	9e 01       	movw	r18, r28
    1d28:	22 5f       	subi	r18, 0xF2	; 242
    1d2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d2c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d2e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d30:	4a e0       	ldi	r20, 0x0A	; 10
    1d32:	50 e0       	ldi	r21, 0x00	; 0
    1d34:	b9 01       	movw	r22, r18
    1d36:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_write_string(str1, 1);
    1d3a:	ce 01       	movw	r24, r28
    1d3c:	0e 96       	adiw	r24, 0x0e	; 14
    1d3e:	61 e0       	ldi	r22, 0x01	; 1
    1d40:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,28);
    1d44:	6c e1       	ldi	r22, 0x1C	; 28
    1d46:	8d e2       	ldi	r24, 0x2D	; 45
    1d48:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("°C", 1);
    1d4c:	61 e0       	ldi	r22, 0x01	; 1
    1d4e:	8c e7       	ldi	r24, 0x7C	; 124
    1d50:	91 e0       	ldi	r25, 0x01	; 1
    1d52:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(1,37);
    1d56:	65 e2       	ldi	r22, 0x25	; 37
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(strPressao,1); 
    1d5e:	61 e0       	ldi	r22, 0x01	; 1
    1d60:	8a e4       	ldi	r24, 0x4A	; 74
    1d62:	91 e0       	ldi	r25, 0x01	; 1
    1d64:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(45,37);
    1d68:	65 e2       	ldi	r22, 0x25	; 37
    1d6a:	8d e2       	ldi	r24, 0x2D	; 45
    1d6c:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("mmHg", 1);
    1d70:	61 e0       	ldi	r22, 0x01	; 1
    1d72:	8f e7       	ldi	r24, 0x7F	; 127
    1d74:	91 e0       	ldi	r25, 0x01	; 1
    1d76:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_render();
    1d7a:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    1d7e:	00 00       	nop
    1d80:	2e 96       	adiw	r28, 0x0e	; 14
    1d82:	0f b6       	in	r0, 0x3f	; 63
    1d84:	f8 94       	cli
    1d86:	de bf       	out	0x3e, r29	; 62
    1d88:	0f be       	out	0x3f, r0	; 63
    1d8a:	cd bf       	out	0x3d, r28	; 61
    1d8c:	df 91       	pop	r29
    1d8e:	cf 91       	pop	r28
    1d90:	08 95       	ret

00001d92 <atualizaLCD>:

void atualizaLCD(){
    1d92:	cf 93       	push	r28
    1d94:	df 93       	push	r29
    1d96:	cd b7       	in	r28, 0x3d	; 61
    1d98:	de b7       	in	r29, 0x3e	; 62
	if (sel == 0)
    1d9a:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1d9e:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1da2:	89 2b       	or	r24, r25
    1da4:	19 f4       	brne	.+6      	; 0x1dac <atualizaLCD+0x1a>
		vitaisLCD();
    1da6:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <vitaisLCD>
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
	}
}
    1daa:	37 c0       	rjmp	.+110    	; 0x1e1a <atualizaLCD+0x88>
}

void atualizaLCD(){
	if (sel == 0)
		vitaisLCD();
	else if (sel == 1)
    1dac:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1db0:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	19 f4       	brne	.+6      	; 0x1dbe <atualizaLCD+0x2c>
		respLCD();
    1db8:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <respLCD>
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
	}
}
    1dbc:	2e c0       	rjmp	.+92     	; 0x1e1a <atualizaLCD+0x88>
void atualizaLCD(){
	if (sel == 0)
		vitaisLCD();
	else if (sel == 1)
		respLCD();
	else if (sel == 2)
    1dbe:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1dc2:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1dc6:	02 97       	sbiw	r24, 0x02	; 2
    1dc8:	19 f4       	brne	.+6      	; 0x1dd0 <atualizaLCD+0x3e>
		O2LCD();
    1dca:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <O2LCD>
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
	}
}
    1dce:	25 c0       	rjmp	.+74     	; 0x1e1a <atualizaLCD+0x88>
		vitaisLCD();
	else if (sel == 1)
		respLCD();
	else if (sel == 2)
		O2LCD();
	else if (sel == 3)
    1dd0:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1dd4:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1dd8:	03 97       	sbiw	r24, 0x03	; 3
    1dda:	19 f4       	brne	.+6      	; 0x1de2 <atualizaLCD+0x50>
		volLCD();
    1ddc:	0e 94 23 10 	call	0x2046	; 0x2046 <volLCD>
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
	}
}
    1de0:	1c c0       	rjmp	.+56     	; 0x1e1a <atualizaLCD+0x88>
		respLCD();
	else if (sel == 2)
		O2LCD();
	else if (sel == 3)
		volLCD();
	else if (sel == 4)
    1de2:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1de6:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1dea:	04 97       	sbiw	r24, 0x04	; 4
    1dec:	19 f4       	brne	.+6      	; 0x1df4 <atualizaLCD+0x62>
		pausaLCD();
    1dee:	0e 94 aa 10 	call	0x2154	; 0x2154 <pausaLCD>
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
	}
}
    1df2:	13 c0       	rjmp	.+38     	; 0x1e1a <atualizaLCD+0x88>
		O2LCD();
	else if (sel == 3)
		volLCD();
	else if (sel == 4)
		pausaLCD();
	else if (sel == 5){
    1df4:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    1df8:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    1dfc:	05 97       	sbiw	r24, 0x05	; 5
    1dfe:	69 f4       	brne	.+26     	; 0x1e1a <atualizaLCD+0x88>
		if(modo == 1)
    1e00:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    1e04:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    1e08:	01 97       	sbiw	r24, 0x01	; 1
    1e0a:	19 f4       	brne	.+6      	; 0x1e12 <atualizaLCD+0x80>
			sensibLCD();
    1e0c:	0e 94 38 11 	call	0x2270	; 0x2270 <sensibLCD>
		else sel = 0;
	}
}
    1e10:	04 c0       	rjmp	.+8      	; 0x1e1a <atualizaLCD+0x88>
	else if (sel == 4)
		pausaLCD();
	else if (sel == 5){
		if(modo == 1)
			sensibLCD();
		else sel = 0;
    1e12:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <sel+0x1>
    1e16:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <sel>
	}
}
    1e1a:	00 00       	nop
    1e1c:	df 91       	pop	r29
    1e1e:	cf 91       	pop	r28
    1e20:	08 95       	ret

00001e22 <respLCD>:

void respLCD(){
    1e22:	cf 93       	push	r28
    1e24:	df 93       	push	r29
    1e26:	00 d0       	rcall	.+0      	; 0x1e28 <respLCD+0x6>
    1e28:	00 d0       	rcall	.+0      	; 0x1e2a <respLCD+0x8>
    1e2a:	1f 92       	push	r1
    1e2c:	cd b7       	in	r28, 0x3d	; 61
    1e2e:	de b7       	in	r29, 0x3e	; 62
	char str2[3], str1[2];
	
	nokia_lcd_set_cursor(10,1);
    1e30:	61 e0       	ldi	r22, 0x01	; 1
    1e32:	8a e0       	ldi	r24, 0x0A	; 10
    1e34:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("PARAMETROS", 1);
    1e38:	61 e0       	ldi	r22, 0x01	; 1
    1e3a:	84 e8       	ldi	r24, 0x84	; 132
    1e3c:	91 e0       	ldi	r25, 0x01	; 1
    1e3e:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(10,10);
    1e42:	6a e0       	ldi	r22, 0x0A	; 10
    1e44:	8a e0       	ldi	r24, 0x0A	; 10
    1e46:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(strModo, 1);
    1e4a:	61 e0       	ldi	r22, 0x01	; 1
    1e4c:	80 e1       	ldi	r24, 0x10	; 16
    1e4e:	91 e0       	ldi	r25, 0x01	; 1
    1e50:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(FreqResp,str2,10);
    1e54:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqResp>
    1e58:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqResp+0x1>
    1e5c:	4a e0       	ldi	r20, 0x0A	; 10
    1e5e:	50 e0       	ldi	r21, 0x00	; 0
    1e60:	9e 01       	movw	r18, r28
    1e62:	2f 5f       	subi	r18, 0xFF	; 255
    1e64:	3f 4f       	sbci	r19, 0xFF	; 255
    1e66:	b9 01       	movw	r22, r18
    1e68:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,20);
    1e6c:	64 e1       	ldi	r22, 0x14	; 20
    1e6e:	85 e0       	ldi	r24, 0x05	; 5
    1e70:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("  ", 1);
    1e74:	61 e0       	ldi	r22, 0x01	; 1
    1e76:	8f e8       	ldi	r24, 0x8F	; 143
    1e78:	91 e0       	ldi	r25, 0x01	; 1
    1e7a:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,20);
    1e7e:	64 e1       	ldi	r22, 0x14	; 20
    1e80:	85 e0       	ldi	r24, 0x05	; 5
    1e82:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str2, 1);
    1e86:	61 e0       	ldi	r22, 0x01	; 1
    1e88:	ce 01       	movw	r24, r28
    1e8a:	01 96       	adiw	r24, 0x01	; 1
    1e8c:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(20,20);
    1e90:	64 e1       	ldi	r22, 0x14	; 20
    1e92:	84 e1       	ldi	r24, 0x14	; 20
    1e94:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("* resp/min", 1);
    1e98:	61 e0       	ldi	r22, 0x01	; 1
    1e9a:	82 e9       	ldi	r24, 0x92	; 146
    1e9c:	91 e0       	ldi	r25, 0x01	; 1
    1e9e:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(O2resp, str2, 10);
    1ea2:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <O2resp>
    1ea6:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <O2resp+0x1>
    1eaa:	4a e0       	ldi	r20, 0x0A	; 10
    1eac:	50 e0       	ldi	r21, 0x00	; 0
    1eae:	9e 01       	movw	r18, r28
    1eb0:	2f 5f       	subi	r18, 0xFF	; 255
    1eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb4:	b9 01       	movw	r22, r18
    1eb6:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,30);
    1eba:	6e e1       	ldi	r22, 0x1E	; 30
    1ebc:	85 e0       	ldi	r24, 0x05	; 5
    1ebe:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str2, 1);
    1ec2:	61 e0       	ldi	r22, 0x01	; 1
    1ec4:	ce 01       	movw	r24, r28
    1ec6:	01 96       	adiw	r24, 0x01	; 1
    1ec8:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,30);
    1ecc:	6e e1       	ldi	r22, 0x1E	; 30
    1ece:	8e e1       	ldi	r24, 0x1E	; 30
    1ed0:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("%O2", 1);
    1ed4:	61 e0       	ldi	r22, 0x01	; 1
    1ed6:	8d e9       	ldi	r24, 0x9D	; 157
    1ed8:	91 e0       	ldi	r25, 0x01	; 1
    1eda:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(vol, str1, 10);
    1ede:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    1ee2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    1ee6:	9e 01       	movw	r18, r28
    1ee8:	2c 5f       	subi	r18, 0xFC	; 252
    1eea:	3f 4f       	sbci	r19, 0xFF	; 255
    1eec:	4a e0       	ldi	r20, 0x0A	; 10
    1eee:	50 e0       	ldi	r21, 0x00	; 0
    1ef0:	b9 01       	movw	r22, r18
    1ef2:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,40);
    1ef6:	68 e2       	ldi	r22, 0x28	; 40
    1ef8:	85 e0       	ldi	r24, 0x05	; 5
    1efa:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str1, 1);
    1efe:	ce 01       	movw	r24, r28
    1f00:	04 96       	adiw	r24, 0x04	; 4
    1f02:	61 e0       	ldi	r22, 0x01	; 1
    1f04:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,40);
    1f08:	68 e2       	ldi	r22, 0x28	; 40
    1f0a:	8e e1       	ldi	r24, 0x1E	; 30
    1f0c:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("vol", 1);
    1f10:	61 e0       	ldi	r22, 0x01	; 1
    1f12:	81 ea       	ldi	r24, 0xA1	; 161
    1f14:	91 e0       	ldi	r25, 0x01	; 1
    1f16:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_render();
    1f1a:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    1f1e:	00 00       	nop
    1f20:	0f 90       	pop	r0
    1f22:	0f 90       	pop	r0
    1f24:	0f 90       	pop	r0
    1f26:	0f 90       	pop	r0
    1f28:	0f 90       	pop	r0
    1f2a:	df 91       	pop	r29
    1f2c:	cf 91       	pop	r28
    1f2e:	08 95       	ret

00001f30 <O2LCD>:

void O2LCD(){
    1f30:	cf 93       	push	r28
    1f32:	df 93       	push	r29
    1f34:	cd b7       	in	r28, 0x3d	; 61
    1f36:	de b7       	in	r29, 0x3e	; 62
    1f38:	29 97       	sbiw	r28, 0x09	; 9
    1f3a:	0f b6       	in	r0, 0x3f	; 63
    1f3c:	f8 94       	cli
    1f3e:	de bf       	out	0x3e, r29	; 62
    1f40:	0f be       	out	0x3f, r0	; 63
    1f42:	cd bf       	out	0x3d, r28	; 61
	char str2[3], str1[2], str3[4];
	
	nokia_lcd_set_cursor(10,1);
    1f44:	61 e0       	ldi	r22, 0x01	; 1
    1f46:	8a e0       	ldi	r24, 0x0A	; 10
    1f48:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("PARAMETROS", 1);
    1f4c:	61 e0       	ldi	r22, 0x01	; 1
    1f4e:	84 e8       	ldi	r24, 0x84	; 132
    1f50:	91 e0       	ldi	r25, 0x01	; 1
    1f52:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(10,10);
    1f56:	6a e0       	ldi	r22, 0x0A	; 10
    1f58:	8a e0       	ldi	r24, 0x0A	; 10
    1f5a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(strModo, 1);
    1f5e:	61 e0       	ldi	r22, 0x01	; 1
    1f60:	80 e1       	ldi	r24, 0x10	; 16
    1f62:	91 e0       	ldi	r25, 0x01	; 1
    1f64:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(FreqResp, str2, 10);
    1f68:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqResp>
    1f6c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqResp+0x1>
    1f70:	4a e0       	ldi	r20, 0x0A	; 10
    1f72:	50 e0       	ldi	r21, 0x00	; 0
    1f74:	9e 01       	movw	r18, r28
    1f76:	2f 5f       	subi	r18, 0xFF	; 255
    1f78:	3f 4f       	sbci	r19, 0xFF	; 255
    1f7a:	b9 01       	movw	r22, r18
    1f7c:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,20);
    1f80:	64 e1       	ldi	r22, 0x14	; 20
    1f82:	85 e0       	ldi	r24, 0x05	; 5
    1f84:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str2, 1);
    1f88:	61 e0       	ldi	r22, 0x01	; 1
    1f8a:	ce 01       	movw	r24, r28
    1f8c:	01 96       	adiw	r24, 0x01	; 1
    1f8e:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,20);
    1f92:	64 e1       	ldi	r22, 0x14	; 20
    1f94:	8e e1       	ldi	r24, 0x1E	; 30
    1f96:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("resp/min", 1);
    1f9a:	61 e0       	ldi	r22, 0x01	; 1
    1f9c:	85 ea       	ldi	r24, 0xA5	; 165
    1f9e:	91 e0       	ldi	r25, 0x01	; 1
    1fa0:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(O2resp,str3,10);
    1fa4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <O2resp>
    1fa8:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <O2resp+0x1>
    1fac:	9e 01       	movw	r18, r28
    1fae:	2a 5f       	subi	r18, 0xFA	; 250
    1fb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb2:	4a e0       	ldi	r20, 0x0A	; 10
    1fb4:	50 e0       	ldi	r21, 0x00	; 0
    1fb6:	b9 01       	movw	r22, r18
    1fb8:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,30);
    1fbc:	6e e1       	ldi	r22, 0x1E	; 30
    1fbe:	85 e0       	ldi	r24, 0x05	; 5
    1fc0:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("   ", 1);
    1fc4:	61 e0       	ldi	r22, 0x01	; 1
    1fc6:	8e ea       	ldi	r24, 0xAE	; 174
    1fc8:	91 e0       	ldi	r25, 0x01	; 1
    1fca:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,30);
    1fce:	6e e1       	ldi	r22, 0x1E	; 30
    1fd0:	85 e0       	ldi	r24, 0x05	; 5
    1fd2:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str3, 1);
    1fd6:	ce 01       	movw	r24, r28
    1fd8:	06 96       	adiw	r24, 0x06	; 6
    1fda:	61 e0       	ldi	r22, 0x01	; 1
    1fdc:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(20,30);
    1fe0:	6e e1       	ldi	r22, 0x1E	; 30
    1fe2:	84 e1       	ldi	r24, 0x14	; 20
    1fe4:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("* %O2", 1);
    1fe8:	61 e0       	ldi	r22, 0x01	; 1
    1fea:	82 eb       	ldi	r24, 0xB2	; 178
    1fec:	91 e0       	ldi	r25, 0x01	; 1
    1fee:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(vol, str1, 10);
    1ff2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    1ff6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    1ffa:	9e 01       	movw	r18, r28
    1ffc:	2c 5f       	subi	r18, 0xFC	; 252
    1ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    2000:	4a e0       	ldi	r20, 0x0A	; 10
    2002:	50 e0       	ldi	r21, 0x00	; 0
    2004:	b9 01       	movw	r22, r18
    2006:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,40);
    200a:	68 e2       	ldi	r22, 0x28	; 40
    200c:	85 e0       	ldi	r24, 0x05	; 5
    200e:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str1, 1);
    2012:	ce 01       	movw	r24, r28
    2014:	04 96       	adiw	r24, 0x04	; 4
    2016:	61 e0       	ldi	r22, 0x01	; 1
    2018:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,40);
    201c:	68 e2       	ldi	r22, 0x28	; 40
    201e:	8e e1       	ldi	r24, 0x1E	; 30
    2020:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("vol", 1);
    2024:	61 e0       	ldi	r22, 0x01	; 1
    2026:	81 ea       	ldi	r24, 0xA1	; 161
    2028:	91 e0       	ldi	r25, 0x01	; 1
    202a:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_render();
    202e:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    2032:	00 00       	nop
    2034:	29 96       	adiw	r28, 0x09	; 9
    2036:	0f b6       	in	r0, 0x3f	; 63
    2038:	f8 94       	cli
    203a:	de bf       	out	0x3e, r29	; 62
    203c:	0f be       	out	0x3f, r0	; 63
    203e:	cd bf       	out	0x3d, r28	; 61
    2040:	df 91       	pop	r29
    2042:	cf 91       	pop	r28
    2044:	08 95       	ret

00002046 <volLCD>:

void volLCD(){
    2046:	cf 93       	push	r28
    2048:	df 93       	push	r29
    204a:	00 d0       	rcall	.+0      	; 0x204c <volLCD+0x6>
    204c:	00 d0       	rcall	.+0      	; 0x204e <volLCD+0x8>
    204e:	1f 92       	push	r1
    2050:	cd b7       	in	r28, 0x3d	; 61
    2052:	de b7       	in	r29, 0x3e	; 62
	char str2[3], str1[2];
	
	nokia_lcd_set_cursor(10,1);
    2054:	61 e0       	ldi	r22, 0x01	; 1
    2056:	8a e0       	ldi	r24, 0x0A	; 10
    2058:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("PARAMETROS", 1);
    205c:	61 e0       	ldi	r22, 0x01	; 1
    205e:	84 e8       	ldi	r24, 0x84	; 132
    2060:	91 e0       	ldi	r25, 0x01	; 1
    2062:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(10,10);
    2066:	6a e0       	ldi	r22, 0x0A	; 10
    2068:	8a e0       	ldi	r24, 0x0A	; 10
    206a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(strModo, 1);
    206e:	61 e0       	ldi	r22, 0x01	; 1
    2070:	80 e1       	ldi	r24, 0x10	; 16
    2072:	91 e0       	ldi	r25, 0x01	; 1
    2074:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(FreqResp, str2, 10);
    2078:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqResp>
    207c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqResp+0x1>
    2080:	4a e0       	ldi	r20, 0x0A	; 10
    2082:	50 e0       	ldi	r21, 0x00	; 0
    2084:	9e 01       	movw	r18, r28
    2086:	2f 5f       	subi	r18, 0xFF	; 255
    2088:	3f 4f       	sbci	r19, 0xFF	; 255
    208a:	b9 01       	movw	r22, r18
    208c:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,20);
    2090:	64 e1       	ldi	r22, 0x14	; 20
    2092:	85 e0       	ldi	r24, 0x05	; 5
    2094:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str2, 1);
    2098:	61 e0       	ldi	r22, 0x01	; 1
    209a:	ce 01       	movw	r24, r28
    209c:	01 96       	adiw	r24, 0x01	; 1
    209e:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,20);
    20a2:	64 e1       	ldi	r22, 0x14	; 20
    20a4:	8e e1       	ldi	r24, 0x1E	; 30
    20a6:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("resp/min", 1);
    20aa:	61 e0       	ldi	r22, 0x01	; 1
    20ac:	85 ea       	ldi	r24, 0xA5	; 165
    20ae:	91 e0       	ldi	r25, 0x01	; 1
    20b0:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(O2resp, str2, 10);
    20b4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <O2resp>
    20b8:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <O2resp+0x1>
    20bc:	4a e0       	ldi	r20, 0x0A	; 10
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	9e 01       	movw	r18, r28
    20c2:	2f 5f       	subi	r18, 0xFF	; 255
    20c4:	3f 4f       	sbci	r19, 0xFF	; 255
    20c6:	b9 01       	movw	r22, r18
    20c8:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,30);
    20cc:	6e e1       	ldi	r22, 0x1E	; 30
    20ce:	85 e0       	ldi	r24, 0x05	; 5
    20d0:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str2, 1);
    20d4:	61 e0       	ldi	r22, 0x01	; 1
    20d6:	ce 01       	movw	r24, r28
    20d8:	01 96       	adiw	r24, 0x01	; 1
    20da:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,30);
    20de:	6e e1       	ldi	r22, 0x1E	; 30
    20e0:	8e e1       	ldi	r24, 0x1E	; 30
    20e2:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("%O2", 1);
    20e6:	61 e0       	ldi	r22, 0x01	; 1
    20e8:	8d e9       	ldi	r24, 0x9D	; 157
    20ea:	91 e0       	ldi	r25, 0x01	; 1
    20ec:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(vol,str1,10);
    20f0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    20f4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    20f8:	9e 01       	movw	r18, r28
    20fa:	2c 5f       	subi	r18, 0xFC	; 252
    20fc:	3f 4f       	sbci	r19, 0xFF	; 255
    20fe:	4a e0       	ldi	r20, 0x0A	; 10
    2100:	50 e0       	ldi	r21, 0x00	; 0
    2102:	b9 01       	movw	r22, r18
    2104:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,40);
    2108:	68 e2       	ldi	r22, 0x28	; 40
    210a:	85 e0       	ldi	r24, 0x05	; 5
    210c:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(" ", 1);
    2110:	61 e0       	ldi	r22, 0x01	; 1
    2112:	88 eb       	ldi	r24, 0xB8	; 184
    2114:	91 e0       	ldi	r25, 0x01	; 1
    2116:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,40);
    211a:	68 e2       	ldi	r22, 0x28	; 40
    211c:	85 e0       	ldi	r24, 0x05	; 5
    211e:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str1, 1);
    2122:	ce 01       	movw	r24, r28
    2124:	04 96       	adiw	r24, 0x04	; 4
    2126:	61 e0       	ldi	r22, 0x01	; 1
    2128:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(20,40);
    212c:	68 e2       	ldi	r22, 0x28	; 40
    212e:	84 e1       	ldi	r24, 0x14	; 20
    2130:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("* vol", 1);
    2134:	61 e0       	ldi	r22, 0x01	; 1
    2136:	8a eb       	ldi	r24, 0xBA	; 186
    2138:	91 e0       	ldi	r25, 0x01	; 1
    213a:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_render();
    213e:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    2142:	00 00       	nop
    2144:	0f 90       	pop	r0
    2146:	0f 90       	pop	r0
    2148:	0f 90       	pop	r0
    214a:	0f 90       	pop	r0
    214c:	0f 90       	pop	r0
    214e:	df 91       	pop	r29
    2150:	cf 91       	pop	r28
    2152:	08 95       	ret

00002154 <pausaLCD>:

void pausaLCD(){
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	00 d0       	rcall	.+0      	; 0x215a <pausaLCD+0x6>
    215a:	00 d0       	rcall	.+0      	; 0x215c <pausaLCD+0x8>
    215c:	00 d0       	rcall	.+0      	; 0x215e <pausaLCD+0xa>
    215e:	cd b7       	in	r28, 0x3d	; 61
    2160:	de b7       	in	r29, 0x3e	; 62
	char str2[2], str3[4];
	
	nokia_lcd_set_cursor(10,1);
    2162:	61 e0       	ldi	r22, 0x01	; 1
    2164:	8a e0       	ldi	r24, 0x0A	; 10
    2166:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("PARAMETROS", 1);
    216a:	61 e0       	ldi	r22, 0x01	; 1
    216c:	84 e8       	ldi	r24, 0x84	; 132
    216e:	91 e0       	ldi	r25, 0x01	; 1
    2170:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(5,10);
    2174:	6a e0       	ldi	r22, 0x0A	; 10
    2176:	85 e0       	ldi	r24, 0x05	; 5
    2178:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("* Pausa Insp.", 1);
    217c:	61 e0       	ldi	r22, 0x01	; 1
    217e:	80 ec       	ldi	r24, 0xC0	; 192
    2180:	91 e0       	ldi	r25, 0x01	; 1
    2182:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(pausa,str3,10);
    2186:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pausa>
    218a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pausa+0x1>
    218e:	9e 01       	movw	r18, r28
    2190:	2d 5f       	subi	r18, 0xFD	; 253
    2192:	3f 4f       	sbci	r19, 0xFF	; 255
    2194:	4a e0       	ldi	r20, 0x0A	; 10
    2196:	50 e0       	ldi	r21, 0x00	; 0
    2198:	b9 01       	movw	r22, r18
    219a:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,20);
    219e:	64 e1       	ldi	r22, 0x14	; 20
    21a0:	85 e0       	ldi	r24, 0x05	; 5
    21a2:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("   ", 1);
    21a6:	61 e0       	ldi	r22, 0x01	; 1
    21a8:	8e ea       	ldi	r24, 0xAE	; 174
    21aa:	91 e0       	ldi	r25, 0x01	; 1
    21ac:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(5,20);
    21b0:	64 e1       	ldi	r22, 0x14	; 20
    21b2:	85 e0       	ldi	r24, 0x05	; 5
    21b4:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str3, 1);
    21b8:	ce 01       	movw	r24, r28
    21ba:	03 96       	adiw	r24, 0x03	; 3
    21bc:	61 e0       	ldi	r22, 0x01	; 1
    21be:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(40,20);
    21c2:	64 e1       	ldi	r22, 0x14	; 20
    21c4:	88 e2       	ldi	r24, 0x28	; 40
    21c6:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("ms", 1);
    21ca:	61 e0       	ldi	r22, 0x01	; 1
    21cc:	8e ec       	ldi	r24, 0xCE	; 206
    21ce:	91 e0       	ldi	r25, 0x01	; 1
    21d0:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	if (modo == 1){
    21d4:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    21d8:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    21dc:	01 97       	sbiw	r24, 0x01	; 1
    21de:	e1 f5       	brne	.+120    	; 0x2258 <pausaLCD+0x104>
		nokia_lcd_set_cursor(5,30);
    21e0:	6e e1       	ldi	r22, 0x1E	; 30
    21e2:	85 e0       	ldi	r24, 0x05	; 5
    21e4:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Sensib.", 1);
    21e8:	61 e0       	ldi	r22, 0x01	; 1
    21ea:	81 ed       	ldi	r24, 0xD1	; 209
    21ec:	91 e0       	ldi	r25, 0x01	; 1
    21ee:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
		itoa(sensib, str2, 10);
    21f2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    21f6:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    21fa:	4a e0       	ldi	r20, 0x0A	; 10
    21fc:	50 e0       	ldi	r21, 0x00	; 0
    21fe:	9e 01       	movw	r18, r28
    2200:	2f 5f       	subi	r18, 0xFF	; 255
    2202:	3f 4f       	sbci	r19, 0xFF	; 255
    2204:	b9 01       	movw	r22, r18
    2206:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
		if (sensib<10){
    220a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    220e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    2212:	0a 97       	sbiw	r24, 0x0a	; 10
    2214:	34 f4       	brge	.+12     	; 0x2222 <pausaLCD+0xce>
			str2[2] = ' ';
    2216:	80 e2       	ldi	r24, 0x20	; 32
    2218:	8b 83       	std	Y+3, r24	; 0x03
			str2[1] = str2[0];
    221a:	89 81       	ldd	r24, Y+1	; 0x01
    221c:	8a 83       	std	Y+2, r24	; 0x02
			str2[0] = '0';
    221e:	80 e3       	ldi	r24, 0x30	; 48
    2220:	89 83       	std	Y+1, r24	; 0x01
		}
		nokia_lcd_set_cursor(5,40);
    2222:	68 e2       	ldi	r22, 0x28	; 40
    2224:	85 e0       	ldi	r24, 0x05	; 5
    2226:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("-0.", 1);
    222a:	61 e0       	ldi	r22, 0x01	; 1
    222c:	89 ed       	ldi	r24, 0xD9	; 217
    222e:	91 e0       	ldi	r25, 0x01	; 1
    2230:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
		nokia_lcd_set_cursor(23,40);
    2234:	68 e2       	ldi	r22, 0x28	; 40
    2236:	87 e1       	ldi	r24, 0x17	; 23
    2238:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(str2, 1);
    223c:	61 e0       	ldi	r22, 0x01	; 1
    223e:	ce 01       	movw	r24, r28
    2240:	01 96       	adiw	r24, 0x01	; 1
    2242:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
		nokia_lcd_set_cursor(40,40);
    2246:	68 e2       	ldi	r22, 0x28	; 40
    2248:	88 e2       	ldi	r24, 0x28	; 40
    224a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("cmHg", 1);
    224e:	61 e0       	ldi	r22, 0x01	; 1
    2250:	8d ed       	ldi	r24, 0xDD	; 221
    2252:	91 e0       	ldi	r25, 0x01	; 1
    2254:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	}
	
	nokia_lcd_render();
    2258:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    225c:	00 00       	nop
    225e:	26 96       	adiw	r28, 0x06	; 6
    2260:	0f b6       	in	r0, 0x3f	; 63
    2262:	f8 94       	cli
    2264:	de bf       	out	0x3e, r29	; 62
    2266:	0f be       	out	0x3f, r0	; 63
    2268:	cd bf       	out	0x3d, r28	; 61
    226a:	df 91       	pop	r29
    226c:	cf 91       	pop	r28
    226e:	08 95       	ret

00002270 <sensibLCD>:

void sensibLCD(){
    2270:	cf 93       	push	r28
    2272:	df 93       	push	r29
    2274:	cd b7       	in	r28, 0x3d	; 61
    2276:	de b7       	in	r29, 0x3e	; 62
    2278:	27 97       	sbiw	r28, 0x07	; 7
    227a:	0f b6       	in	r0, 0x3f	; 63
    227c:	f8 94       	cli
    227e:	de bf       	out	0x3e, r29	; 62
    2280:	0f be       	out	0x3f, r0	; 63
    2282:	cd bf       	out	0x3d, r28	; 61
	char str2[3], str3[4];
	
	nokia_lcd_set_cursor(10,1);
    2284:	61 e0       	ldi	r22, 0x01	; 1
    2286:	8a e0       	ldi	r24, 0x0A	; 10
    2288:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("PARAMETROS", 1);
    228c:	61 e0       	ldi	r22, 0x01	; 1
    228e:	84 e8       	ldi	r24, 0x84	; 132
    2290:	91 e0       	ldi	r25, 0x01	; 1
    2292:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(5,10);
    2296:	6a e0       	ldi	r22, 0x0A	; 10
    2298:	85 e0       	ldi	r24, 0x05	; 5
    229a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Pausa Insp.", 1);
    229e:	61 e0       	ldi	r22, 0x01	; 1
    22a0:	82 ee       	ldi	r24, 0xE2	; 226
    22a2:	91 e0       	ldi	r25, 0x01	; 1
    22a4:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	itoa(pausa, str3, 10);
    22a8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pausa>
    22ac:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pausa+0x1>
    22b0:	9e 01       	movw	r18, r28
    22b2:	2c 5f       	subi	r18, 0xFC	; 252
    22b4:	3f 4f       	sbci	r19, 0xFF	; 255
    22b6:	4a e0       	ldi	r20, 0x0A	; 10
    22b8:	50 e0       	ldi	r21, 0x00	; 0
    22ba:	b9 01       	movw	r22, r18
    22bc:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
	nokia_lcd_set_cursor(5,20);
    22c0:	64 e1       	ldi	r22, 0x14	; 20
    22c2:	85 e0       	ldi	r24, 0x05	; 5
    22c4:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(str3, 1);
    22c8:	ce 01       	movw	r24, r28
    22ca:	04 96       	adiw	r24, 0x04	; 4
    22cc:	61 e0       	ldi	r22, 0x01	; 1
    22ce:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	nokia_lcd_set_cursor(40,20);
    22d2:	64 e1       	ldi	r22, 0x14	; 20
    22d4:	88 e2       	ldi	r24, 0x28	; 40
    22d6:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("ms", 1);
    22da:	61 e0       	ldi	r22, 0x01	; 1
    22dc:	8e ec       	ldi	r24, 0xCE	; 206
    22de:	91 e0       	ldi	r25, 0x01	; 1
    22e0:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
	if (modo == 1){
    22e4:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <modo>
    22e8:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <modo+0x1>
    22ec:	01 97       	sbiw	r24, 0x01	; 1
    22ee:	09 f0       	breq	.+2      	; 0x22f2 <sensibLCD+0x82>
    22f0:	45 c0       	rjmp	.+138    	; 0x237c <sensibLCD+0x10c>
		nokia_lcd_set_cursor(5,30);
    22f2:	6e e1       	ldi	r22, 0x1E	; 30
    22f4:	85 e0       	ldi	r24, 0x05	; 5
    22f6:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("* Sensib.", 1);
    22fa:	61 e0       	ldi	r22, 0x01	; 1
    22fc:	8e ee       	ldi	r24, 0xEE	; 238
    22fe:	91 e0       	ldi	r25, 0x01	; 1
    2300:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	
		itoa(sensib, str2, 10);
    2304:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    2308:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    230c:	4a e0       	ldi	r20, 0x0A	; 10
    230e:	50 e0       	ldi	r21, 0x00	; 0
    2310:	9e 01       	movw	r18, r28
    2312:	2f 5f       	subi	r18, 0xFF	; 255
    2314:	3f 4f       	sbci	r19, 0xFF	; 255
    2316:	b9 01       	movw	r22, r18
    2318:	0e 94 6a 1c 	call	0x38d4	; 0x38d4 <itoa>
		if (sensib<10){
    231c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    2320:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    2324:	0a 97       	sbiw	r24, 0x0a	; 10
    2326:	34 f4       	brge	.+12     	; 0x2334 <sensibLCD+0xc4>
			str2[2] = ' ';
    2328:	80 e2       	ldi	r24, 0x20	; 32
    232a:	8b 83       	std	Y+3, r24	; 0x03
			str2[1] = str2[0];
    232c:	89 81       	ldd	r24, Y+1	; 0x01
    232e:	8a 83       	std	Y+2, r24	; 0x02
			str2[0] = '0';
    2330:	80 e3       	ldi	r24, 0x30	; 48
    2332:	89 83       	std	Y+1, r24	; 0x01
		}
		nokia_lcd_set_cursor(5,40);
    2334:	68 e2       	ldi	r22, 0x28	; 40
    2336:	85 e0       	ldi	r24, 0x05	; 5
    2338:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("-0.", 1);
    233c:	61 e0       	ldi	r22, 0x01	; 1
    233e:	89 ed       	ldi	r24, 0xD9	; 217
    2340:	91 e0       	ldi	r25, 0x01	; 1
    2342:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
		nokia_lcd_set_cursor(23,40);
    2346:	68 e2       	ldi	r22, 0x28	; 40
    2348:	87 e1       	ldi	r24, 0x17	; 23
    234a:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("  ", 1);
    234e:	61 e0       	ldi	r22, 0x01	; 1
    2350:	8f e8       	ldi	r24, 0x8F	; 143
    2352:	91 e0       	ldi	r25, 0x01	; 1
    2354:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
		nokia_lcd_set_cursor(23,40);
    2358:	68 e2       	ldi	r22, 0x28	; 40
    235a:	87 e1       	ldi	r24, 0x17	; 23
    235c:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(str2, 1);
    2360:	61 e0       	ldi	r22, 0x01	; 1
    2362:	ce 01       	movw	r24, r28
    2364:	01 96       	adiw	r24, 0x01	; 1
    2366:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
		nokia_lcd_set_cursor(40,40);
    236a:	68 e2       	ldi	r22, 0x28	; 40
    236c:	88 e2       	ldi	r24, 0x28	; 40
    236e:	0e 94 00 18 	call	0x3000	; 0x3000 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("cmHg", 1);
    2372:	61 e0       	ldi	r22, 0x01	; 1
    2374:	8d ed       	ldi	r24, 0xDD	; 221
    2376:	91 e0       	ldi	r25, 0x01	; 1
    2378:	0e 94 dd 17 	call	0x2fba	; 0x2fba <nokia_lcd_write_string>
	}
	
	nokia_lcd_render();
    237c:	0e 94 13 18 	call	0x3026	; 0x3026 <nokia_lcd_render>
}
    2380:	00 00       	nop
    2382:	27 96       	adiw	r28, 0x07	; 7
    2384:	0f b6       	in	r0, 0x3f	; 63
    2386:	f8 94       	cli
    2388:	de bf       	out	0x3e, r29	; 62
    238a:	0f be       	out	0x3f, r0	; 63
    238c:	cd bf       	out	0x3d, r28	; 61
    238e:	df 91       	pop	r29
    2390:	cf 91       	pop	r28
    2392:	08 95       	ret

00002394 <readTecl>:

void readTecl(){
    2394:	cf 93       	push	r28
    2396:	df 93       	push	r29
    2398:	cd b7       	in	r28, 0x3d	; 61
    239a:	de b7       	in	r29, 0x3e	; 62
		
	if (linha == 0){
    239c:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    23a0:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    23a4:	89 2b       	or	r24, r25
    23a6:	99 f4       	brne	.+38     	; 0x23ce <readTecl+0x3a>
		PORTB = (PORTB & 0b01111111);
    23a8:	85 e2       	ldi	r24, 0x25	; 37
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	25 e2       	ldi	r18, 0x25	; 37
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	f9 01       	movw	r30, r18
    23b2:	20 81       	ld	r18, Z
    23b4:	2f 77       	andi	r18, 0x7F	; 127
    23b6:	fc 01       	movw	r30, r24
    23b8:	20 83       	st	Z, r18
		PORTB = (PORTB | 0b01110000);
    23ba:	85 e2       	ldi	r24, 0x25	; 37
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	25 e2       	ldi	r18, 0x25	; 37
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	f9 01       	movw	r30, r18
    23c4:	20 81       	ld	r18, Z
    23c6:	20 67       	ori	r18, 0x70	; 112
    23c8:	fc 01       	movw	r30, r24
    23ca:	20 83       	st	Z, r18
    23cc:	4a c0       	rjmp	.+148    	; 0x2462 <readTecl+0xce>
	}
	else if (linha == 1){
    23ce:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    23d2:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    23d6:	01 97       	sbiw	r24, 0x01	; 1
    23d8:	99 f4       	brne	.+38     	; 0x2400 <readTecl+0x6c>
		PORTB = (PORTB & 0b10111111);
    23da:	85 e2       	ldi	r24, 0x25	; 37
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	25 e2       	ldi	r18, 0x25	; 37
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	f9 01       	movw	r30, r18
    23e4:	20 81       	ld	r18, Z
    23e6:	2f 7b       	andi	r18, 0xBF	; 191
    23e8:	fc 01       	movw	r30, r24
    23ea:	20 83       	st	Z, r18
		PORTB = (PORTB | 0b10110000);
    23ec:	85 e2       	ldi	r24, 0x25	; 37
    23ee:	90 e0       	ldi	r25, 0x00	; 0
    23f0:	25 e2       	ldi	r18, 0x25	; 37
    23f2:	30 e0       	ldi	r19, 0x00	; 0
    23f4:	f9 01       	movw	r30, r18
    23f6:	20 81       	ld	r18, Z
    23f8:	20 6b       	ori	r18, 0xB0	; 176
    23fa:	fc 01       	movw	r30, r24
    23fc:	20 83       	st	Z, r18
    23fe:	31 c0       	rjmp	.+98     	; 0x2462 <readTecl+0xce>
	}
	else if (linha == 2){
    2400:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2404:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    2408:	02 97       	sbiw	r24, 0x02	; 2
    240a:	99 f4       	brne	.+38     	; 0x2432 <readTecl+0x9e>
		PORTB = (PORTB & 0b11011111);
    240c:	85 e2       	ldi	r24, 0x25	; 37
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	25 e2       	ldi	r18, 0x25	; 37
    2412:	30 e0       	ldi	r19, 0x00	; 0
    2414:	f9 01       	movw	r30, r18
    2416:	20 81       	ld	r18, Z
    2418:	2f 7d       	andi	r18, 0xDF	; 223
    241a:	fc 01       	movw	r30, r24
    241c:	20 83       	st	Z, r18
		PORTB = (PORTB | 0b11010000);
    241e:	85 e2       	ldi	r24, 0x25	; 37
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	25 e2       	ldi	r18, 0x25	; 37
    2424:	30 e0       	ldi	r19, 0x00	; 0
    2426:	f9 01       	movw	r30, r18
    2428:	20 81       	ld	r18, Z
    242a:	20 6d       	ori	r18, 0xD0	; 208
    242c:	fc 01       	movw	r30, r24
    242e:	20 83       	st	Z, r18
    2430:	18 c0       	rjmp	.+48     	; 0x2462 <readTecl+0xce>
	}
	else if (linha == 3){
    2432:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2436:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    243a:	03 97       	sbiw	r24, 0x03	; 3
    243c:	91 f4       	brne	.+36     	; 0x2462 <readTecl+0xce>
		PORTB = (PORTB & 0b11101111);
    243e:	85 e2       	ldi	r24, 0x25	; 37
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	25 e2       	ldi	r18, 0x25	; 37
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	f9 01       	movw	r30, r18
    2448:	20 81       	ld	r18, Z
    244a:	2f 7e       	andi	r18, 0xEF	; 239
    244c:	fc 01       	movw	r30, r24
    244e:	20 83       	st	Z, r18
		PORTB = (PORTB | 0b11100000);
    2450:	85 e2       	ldi	r24, 0x25	; 37
    2452:	90 e0       	ldi	r25, 0x00	; 0
    2454:	25 e2       	ldi	r18, 0x25	; 37
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	f9 01       	movw	r30, r18
    245a:	20 81       	ld	r18, Z
    245c:	20 6e       	ori	r18, 0xE0	; 224
    245e:	fc 01       	movw	r30, r24
    2460:	20 83       	st	Z, r18
	}
		
	if (PIND == (PIND & 0b11111110)){
    2462:	89 e2       	ldi	r24, 0x29	; 41
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	fc 01       	movw	r30, r24
    2468:	80 81       	ld	r24, Z
    246a:	28 2f       	mov	r18, r24
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	89 e2       	ldi	r24, 0x29	; 41
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	fc 01       	movw	r30, r24
    2474:	80 81       	ld	r24, Z
    2476:	88 2f       	mov	r24, r24
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	8e 7f       	andi	r24, 0xFE	; 254
    247c:	99 27       	eor	r25, r25
    247e:	28 17       	cp	r18, r24
    2480:	39 07       	cpc	r19, r25
    2482:	81 f4       	brne	.+32     	; 0x24a4 <readTecl+0x110>
		 col = 0;
    2484:	10 92 3b 04 	sts	0x043B, r1	; 0x80043b <col+0x1>
    2488:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <col>
		 guarda(linha,col);
    248c:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <col>
    2490:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <col+0x1>
    2494:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2498:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    249c:	b9 01       	movw	r22, r18
    249e:	0e 94 ae 12 	call	0x255c	; 0x255c <guarda>
    24a2:	45 c0       	rjmp	.+138    	; 0x252e <readTecl+0x19a>
	}
	else if(PIND == (PIND & 0b11111101)){
    24a4:	89 e2       	ldi	r24, 0x29	; 41
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	fc 01       	movw	r30, r24
    24aa:	80 81       	ld	r24, Z
    24ac:	28 2f       	mov	r18, r24
    24ae:	30 e0       	ldi	r19, 0x00	; 0
    24b0:	89 e2       	ldi	r24, 0x29	; 41
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	fc 01       	movw	r30, r24
    24b6:	80 81       	ld	r24, Z
    24b8:	88 2f       	mov	r24, r24
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	8d 7f       	andi	r24, 0xFD	; 253
    24be:	99 27       	eor	r25, r25
    24c0:	28 17       	cp	r18, r24
    24c2:	39 07       	cpc	r19, r25
    24c4:	91 f4       	brne	.+36     	; 0x24ea <readTecl+0x156>
		 col = 1;
    24c6:	81 e0       	ldi	r24, 0x01	; 1
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	90 93 3b 04 	sts	0x043B, r25	; 0x80043b <col+0x1>
    24ce:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <col>
		 guarda(linha,col);
    24d2:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <col>
    24d6:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <col+0x1>
    24da:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    24de:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    24e2:	b9 01       	movw	r22, r18
    24e4:	0e 94 ae 12 	call	0x255c	; 0x255c <guarda>
    24e8:	22 c0       	rjmp	.+68     	; 0x252e <readTecl+0x19a>
	}
	else if(PIND == (PIND & 0b11111011)){
    24ea:	89 e2       	ldi	r24, 0x29	; 41
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	fc 01       	movw	r30, r24
    24f0:	80 81       	ld	r24, Z
    24f2:	28 2f       	mov	r18, r24
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	89 e2       	ldi	r24, 0x29	; 41
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	fc 01       	movw	r30, r24
    24fc:	80 81       	ld	r24, Z
    24fe:	88 2f       	mov	r24, r24
    2500:	90 e0       	ldi	r25, 0x00	; 0
    2502:	8b 7f       	andi	r24, 0xFB	; 251
    2504:	99 27       	eor	r25, r25
    2506:	28 17       	cp	r18, r24
    2508:	39 07       	cpc	r19, r25
    250a:	89 f4       	brne	.+34     	; 0x252e <readTecl+0x19a>
		col = 2;
    250c:	82 e0       	ldi	r24, 0x02	; 2
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	90 93 3b 04 	sts	0x043B, r25	; 0x80043b <col+0x1>
    2514:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <col>
		guarda(linha,col);
    2518:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <col>
    251c:	30 91 3b 04 	lds	r19, 0x043B	; 0x80043b <col+0x1>
    2520:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2524:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    2528:	b9 01       	movw	r22, r18
    252a:	0e 94 ae 12 	call	0x255c	; 0x255c <guarda>
	}
	linha++;
    252e:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2532:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    2536:	01 96       	adiw	r24, 0x01	; 1
    2538:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <linha+0x1>
    253c:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <linha>
	if(linha == 4)
    2540:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <linha>
    2544:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <linha+0x1>
    2548:	04 97       	sbiw	r24, 0x04	; 4
    254a:	21 f4       	brne	.+8      	; 0x2554 <readTecl+0x1c0>
		linha = 0;
    254c:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <linha+0x1>
    2550:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <linha>
}
    2554:	00 00       	nop
    2556:	df 91       	pop	r29
    2558:	cf 91       	pop	r28
    255a:	08 95       	ret

0000255c <guarda>:

void guarda (int linha, int col){
    255c:	cf 93       	push	r28
    255e:	df 93       	push	r29
    2560:	cd b7       	in	r28, 0x3d	; 61
    2562:	de b7       	in	r29, 0x3e	; 62
    2564:	6e 97       	sbiw	r28, 0x1e	; 30
    2566:	0f b6       	in	r0, 0x3f	; 63
    2568:	f8 94       	cli
    256a:	de bf       	out	0x3e, r29	; 62
    256c:	0f be       	out	0x3f, r0	; 63
    256e:	cd bf       	out	0x3d, r28	; 61
    2570:	9c 8f       	std	Y+28, r25	; 0x1c
    2572:	8b 8f       	std	Y+27, r24	; 0x1b
    2574:	7e 8f       	std	Y+30, r23	; 0x1e
    2576:	6d 8f       	std	Y+29, r22	; 0x1d
	char matriz[4][3] =
    2578:	8c e0       	ldi	r24, 0x0C	; 12
    257a:	e8 ef       	ldi	r30, 0xF8	; 248
    257c:	f1 e0       	ldi	r31, 0x01	; 1
    257e:	de 01       	movw	r26, r28
    2580:	1f 96       	adiw	r26, 0x0f	; 15
    2582:	01 90       	ld	r0, Z+
    2584:	0d 92       	st	X+, r0
    2586:	8a 95       	dec	r24
    2588:	e1 f7       	brne	.-8      	; 0x2582 <guarda+0x26>
		{'1','2','3'},
		{'4','5','6'},
		{'7','8','9'},
		{' ','0',' '}
	};
	 TIMSK2 = 0x00; 
    258a:	80 e7       	ldi	r24, 0x70	; 112
    258c:	90 e0       	ldi	r25, 0x00	; 0
    258e:	fc 01       	movw	r30, r24
    2590:	10 82       	st	Z, r1
    2592:	80 e0       	ldi	r24, 0x00	; 0
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	a0 ea       	ldi	r26, 0xA0	; 160
    2598:	b1 e4       	ldi	r27, 0x41	; 65
    259a:	89 83       	std	Y+1, r24	; 0x01
    259c:	9a 83       	std	Y+2, r25	; 0x02
    259e:	ab 83       	std	Y+3, r26	; 0x03
    25a0:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    25a2:	20 e0       	ldi	r18, 0x00	; 0
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	4a e7       	ldi	r20, 0x7A	; 122
    25a8:	55 e4       	ldi	r21, 0x45	; 69
    25aa:	69 81       	ldd	r22, Y+1	; 0x01
    25ac:	7a 81       	ldd	r23, Y+2	; 0x02
    25ae:	8b 81       	ldd	r24, Y+3	; 0x03
    25b0:	9c 81       	ldd	r25, Y+4	; 0x04
    25b2:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    25b6:	dc 01       	movw	r26, r24
    25b8:	cb 01       	movw	r24, r22
    25ba:	8d 83       	std	Y+5, r24	; 0x05
    25bc:	9e 83       	std	Y+6, r25	; 0x06
    25be:	af 83       	std	Y+7, r26	; 0x07
    25c0:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	30 e0       	ldi	r19, 0x00	; 0
    25c6:	40 e8       	ldi	r20, 0x80	; 128
    25c8:	5f e3       	ldi	r21, 0x3F	; 63
    25ca:	6d 81       	ldd	r22, Y+5	; 0x05
    25cc:	7e 81       	ldd	r23, Y+6	; 0x06
    25ce:	8f 81       	ldd	r24, Y+7	; 0x07
    25d0:	98 85       	ldd	r25, Y+8	; 0x08
    25d2:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
    25d6:	88 23       	and	r24, r24
    25d8:	2c f4       	brge	.+10     	; 0x25e4 <guarda+0x88>
		__ticks = 1;
    25da:	81 e0       	ldi	r24, 0x01	; 1
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	9a 87       	std	Y+10, r25	; 0x0a
    25e0:	89 87       	std	Y+9, r24	; 0x09
    25e2:	3f c0       	rjmp	.+126    	; 0x2662 <guarda+0x106>
	else if (__tmp > 65535)
    25e4:	20 e0       	ldi	r18, 0x00	; 0
    25e6:	3f ef       	ldi	r19, 0xFF	; 255
    25e8:	4f e7       	ldi	r20, 0x7F	; 127
    25ea:	57 e4       	ldi	r21, 0x47	; 71
    25ec:	6d 81       	ldd	r22, Y+5	; 0x05
    25ee:	7e 81       	ldd	r23, Y+6	; 0x06
    25f0:	8f 81       	ldd	r24, Y+7	; 0x07
    25f2:	98 85       	ldd	r25, Y+8	; 0x08
    25f4:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
    25f8:	18 16       	cp	r1, r24
    25fa:	4c f5       	brge	.+82     	; 0x264e <guarda+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25fc:	20 e0       	ldi	r18, 0x00	; 0
    25fe:	30 e0       	ldi	r19, 0x00	; 0
    2600:	40 e2       	ldi	r20, 0x20	; 32
    2602:	51 e4       	ldi	r21, 0x41	; 65
    2604:	69 81       	ldd	r22, Y+1	; 0x01
    2606:	7a 81       	ldd	r23, Y+2	; 0x02
    2608:	8b 81       	ldd	r24, Y+3	; 0x03
    260a:	9c 81       	ldd	r25, Y+4	; 0x04
    260c:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    2610:	dc 01       	movw	r26, r24
    2612:	cb 01       	movw	r24, r22
    2614:	bc 01       	movw	r22, r24
    2616:	cd 01       	movw	r24, r26
    2618:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    261c:	dc 01       	movw	r26, r24
    261e:	cb 01       	movw	r24, r22
    2620:	9a 87       	std	Y+10, r25	; 0x0a
    2622:	89 87       	std	Y+9, r24	; 0x09
    2624:	0f c0       	rjmp	.+30     	; 0x2644 <guarda+0xe8>
    2626:	80 e9       	ldi	r24, 0x90	; 144
    2628:	91 e0       	ldi	r25, 0x01	; 1
    262a:	9c 87       	std	Y+12, r25	; 0x0c
    262c:	8b 87       	std	Y+11, r24	; 0x0b
    262e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2630:	9c 85       	ldd	r25, Y+12	; 0x0c
    2632:	01 97       	sbiw	r24, 0x01	; 1
    2634:	f1 f7       	brne	.-4      	; 0x2632 <guarda+0xd6>
    2636:	9c 87       	std	Y+12, r25	; 0x0c
    2638:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    263a:	89 85       	ldd	r24, Y+9	; 0x09
    263c:	9a 85       	ldd	r25, Y+10	; 0x0a
    263e:	01 97       	sbiw	r24, 0x01	; 1
    2640:	9a 87       	std	Y+10, r25	; 0x0a
    2642:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2644:	89 85       	ldd	r24, Y+9	; 0x09
    2646:	9a 85       	ldd	r25, Y+10	; 0x0a
    2648:	89 2b       	or	r24, r25
    264a:	69 f7       	brne	.-38     	; 0x2626 <guarda+0xca>
    264c:	14 c0       	rjmp	.+40     	; 0x2676 <guarda+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    264e:	6d 81       	ldd	r22, Y+5	; 0x05
    2650:	7e 81       	ldd	r23, Y+6	; 0x06
    2652:	8f 81       	ldd	r24, Y+7	; 0x07
    2654:	98 85       	ldd	r25, Y+8	; 0x08
    2656:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    265a:	dc 01       	movw	r26, r24
    265c:	cb 01       	movw	r24, r22
    265e:	9a 87       	std	Y+10, r25	; 0x0a
    2660:	89 87       	std	Y+9, r24	; 0x09
    2662:	89 85       	ldd	r24, Y+9	; 0x09
    2664:	9a 85       	ldd	r25, Y+10	; 0x0a
    2666:	9e 87       	std	Y+14, r25	; 0x0e
    2668:	8d 87       	std	Y+13, r24	; 0x0d
    266a:	8d 85       	ldd	r24, Y+13	; 0x0d
    266c:	9e 85       	ldd	r25, Y+14	; 0x0e
    266e:	01 97       	sbiw	r24, 0x01	; 1
    2670:	f1 f7       	brne	.-4      	; 0x266e <guarda+0x112>
    2672:	9e 87       	std	Y+14, r25	; 0x0e
    2674:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(20);
	
	if (linha == 3 & col == 0)
    2676:	31 e0       	ldi	r19, 0x01	; 1
    2678:	8b 8d       	ldd	r24, Y+27	; 0x1b
    267a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    267c:	03 97       	sbiw	r24, 0x03	; 3
    267e:	09 f0       	breq	.+2      	; 0x2682 <guarda+0x126>
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	21 e0       	ldi	r18, 0x01	; 1
    2684:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2686:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2688:	89 2b       	or	r24, r25
    268a:	09 f0       	breq	.+2      	; 0x268e <guarda+0x132>
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	83 2f       	mov	r24, r19
    2690:	82 23       	and	r24, r18
    2692:	88 23       	and	r24, r24
    2694:	49 f0       	breq	.+18     	; 0x26a8 <guarda+0x14c>
		j--;
    2696:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <j>
    269a:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <j+0x1>
    269e:	01 97       	sbiw	r24, 0x01	; 1
    26a0:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <j+0x1>
    26a4:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <j>
	
	if (linha == 3 & col == 2)
    26a8:	31 e0       	ldi	r19, 0x01	; 1
    26aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26ae:	03 97       	sbiw	r24, 0x03	; 3
    26b0:	09 f0       	breq	.+2      	; 0x26b4 <guarda+0x158>
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	21 e0       	ldi	r18, 0x01	; 1
    26b6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26b8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26ba:	02 97       	sbiw	r24, 0x02	; 2
    26bc:	09 f0       	breq	.+2      	; 0x26c0 <guarda+0x164>
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	83 2f       	mov	r24, r19
    26c2:	82 23       	and	r24, r18
    26c4:	88 23       	and	r24, r24
    26c6:	11 f0       	breq	.+4      	; 0x26cc <guarda+0x170>
		mudaParametro();
    26c8:	0e 94 9a 13 	call	0x2734	; 0x2734 <mudaParametro>
	
	numero[j] = matriz[linha][col];
    26cc:	40 91 20 02 	lds	r20, 0x0220	; 0x800220 <j>
    26d0:	50 91 21 02 	lds	r21, 0x0221	; 0x800221 <j+0x1>
    26d4:	2b 8d       	ldd	r18, Y+27	; 0x1b
    26d6:	3c 8d       	ldd	r19, Y+28	; 0x1c
    26d8:	c9 01       	movw	r24, r18
    26da:	88 0f       	add	r24, r24
    26dc:	99 1f       	adc	r25, r25
    26de:	82 0f       	add	r24, r18
    26e0:	93 1f       	adc	r25, r19
    26e2:	9e 01       	movw	r18, r28
    26e4:	2f 5f       	subi	r18, 0xFF	; 255
    26e6:	3f 4f       	sbci	r19, 0xFF	; 255
    26e8:	28 0f       	add	r18, r24
    26ea:	39 1f       	adc	r19, r25
    26ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26ee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26f0:	82 0f       	add	r24, r18
    26f2:	93 1f       	adc	r25, r19
    26f4:	0e 96       	adiw	r24, 0x0e	; 14
    26f6:	fc 01       	movw	r30, r24
    26f8:	20 81       	ld	r18, Z
    26fa:	ca 01       	movw	r24, r20
    26fc:	8a 5c       	subi	r24, 0xCA	; 202
    26fe:	9e 4f       	sbci	r25, 0xFE	; 254
    2700:	fc 01       	movw	r30, r24
    2702:	20 83       	st	Z, r18
	j++;
    2704:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <j>
    2708:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <j+0x1>
    270c:	01 96       	adiw	r24, 0x01	; 1
    270e:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <j+0x1>
    2712:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <j>
		
	TIMSK2 = 0x01;
    2716:	80 e7       	ldi	r24, 0x70	; 112
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	21 e0       	ldi	r18, 0x01	; 1
    271c:	fc 01       	movw	r30, r24
    271e:	20 83       	st	Z, r18
}
    2720:	00 00       	nop
    2722:	6e 96       	adiw	r28, 0x1e	; 30
    2724:	0f b6       	in	r0, 0x3f	; 63
    2726:	f8 94       	cli
    2728:	de bf       	out	0x3e, r29	; 62
    272a:	0f be       	out	0x3f, r0	; 63
    272c:	cd bf       	out	0x3d, r28	; 61
    272e:	df 91       	pop	r29
    2730:	cf 91       	pop	r28
    2732:	08 95       	ret

00002734 <mudaParametro>:

void mudaParametro(){
    2734:	cf 93       	push	r28
    2736:	df 93       	push	r29
    2738:	00 d0       	rcall	.+0      	; 0x273a <mudaParametro+0x6>
    273a:	cd b7       	in	r28, 0x3d	; 61
    273c:	de b7       	in	r29, 0x3e	; 62
	j = 0;
    273e:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <j+0x1>
    2742:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <j>
	
	switch(sel){
    2746:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <sel>
    274a:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <sel+0x1>
    274e:	83 30       	cpi	r24, 0x03	; 3
    2750:	91 05       	cpc	r25, r1
    2752:	09 f4       	brne	.+2      	; 0x2756 <mudaParametro+0x22>
    2754:	5c c0       	rjmp	.+184    	; 0x280e <mudaParametro+0xda>
    2756:	84 30       	cpi	r24, 0x04	; 4
    2758:	91 05       	cpc	r25, r1
    275a:	34 f4       	brge	.+12     	; 0x2768 <mudaParametro+0x34>
    275c:	81 30       	cpi	r24, 0x01	; 1
    275e:	91 05       	cpc	r25, r1
    2760:	59 f0       	breq	.+22     	; 0x2778 <mudaParametro+0x44>
    2762:	02 97       	sbiw	r24, 0x02	; 2
    2764:	61 f1       	breq	.+88     	; 0x27be <mudaParametro+0x8a>
    2766:	c6 c0       	rjmp	.+396    	; 0x28f4 <mudaParametro+0x1c0>
    2768:	84 30       	cpi	r24, 0x04	; 4
    276a:	91 05       	cpc	r25, r1
    276c:	09 f4       	brne	.+2      	; 0x2770 <mudaParametro+0x3c>
    276e:	65 c0       	rjmp	.+202    	; 0x283a <mudaParametro+0x106>
    2770:	05 97       	sbiw	r24, 0x05	; 5
    2772:	09 f4       	brne	.+2      	; 0x2776 <mudaParametro+0x42>
    2774:	86 c0       	rjmp	.+268    	; 0x2882 <mudaParametro+0x14e>
    2776:	be c0       	rjmp	.+380    	; 0x28f4 <mudaParametro+0x1c0>
	case 1: 
		FreqResp = atoi(numero);
    2778:	86 e3       	ldi	r24, 0x36	; 54
    277a:	91 e0       	ldi	r25, 0x01	; 1
    277c:	0e 94 4c 1c 	call	0x3898	; 0x3898 <atoi>
    2780:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqResp+0x1>
    2784:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqResp>
		if (FreqResp<5) FreqResp = 5;
    2788:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqResp>
    278c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqResp+0x1>
    2790:	05 97       	sbiw	r24, 0x05	; 5
    2792:	3c f4       	brge	.+14     	; 0x27a2 <mudaParametro+0x6e>
    2794:	85 e0       	ldi	r24, 0x05	; 5
    2796:	90 e0       	ldi	r25, 0x00	; 0
    2798:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqResp+0x1>
    279c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqResp>
		else if (FreqResp>30) FreqResp = 30;
		break;
    27a0:	a0 c0       	rjmp	.+320    	; 0x28e2 <mudaParametro+0x1ae>
	
	switch(sel){
	case 1: 
		FreqResp = atoi(numero);
		if (FreqResp<5) FreqResp = 5;
		else if (FreqResp>30) FreqResp = 30;
    27a2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <FreqResp>
    27a6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <FreqResp+0x1>
    27aa:	4f 97       	sbiw	r24, 0x1f	; 31
    27ac:	0c f4       	brge	.+2      	; 0x27b0 <mudaParametro+0x7c>
    27ae:	99 c0       	rjmp	.+306    	; 0x28e2 <mudaParametro+0x1ae>
    27b0:	8e e1       	ldi	r24, 0x1E	; 30
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <FreqResp+0x1>
    27b8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <FreqResp>
		break;
    27bc:	92 c0       	rjmp	.+292    	; 0x28e2 <mudaParametro+0x1ae>
	case 2:
		O2resp = atoi(numero);
    27be:	86 e3       	ldi	r24, 0x36	; 54
    27c0:	91 e0       	ldi	r25, 0x01	; 1
    27c2:	0e 94 4c 1c 	call	0x3898	; 0x3898 <atoi>
    27c6:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <O2resp+0x1>
    27ca:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <O2resp>
		OCR1B = 2000 + O2resp*20;
    27ce:	8a e8       	ldi	r24, 0x8A	; 138
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <O2resp>
    27d6:	50 91 0d 02 	lds	r21, 0x020D	; 0x80020d <O2resp+0x1>
    27da:	64 e1       	ldi	r22, 0x14	; 20
    27dc:	64 9f       	mul	r22, r20
    27de:	90 01       	movw	r18, r0
    27e0:	65 9f       	mul	r22, r21
    27e2:	30 0d       	add	r19, r0
    27e4:	11 24       	eor	r1, r1
    27e6:	20 53       	subi	r18, 0x30	; 48
    27e8:	38 4f       	sbci	r19, 0xF8	; 248
    27ea:	fc 01       	movw	r30, r24
    27ec:	31 83       	std	Z+1, r19	; 0x01
    27ee:	20 83       	st	Z, r18
		if (O2resp>100) O2resp = 100;
    27f0:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <O2resp>
    27f4:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <O2resp+0x1>
    27f8:	85 36       	cpi	r24, 0x65	; 101
    27fa:	91 05       	cpc	r25, r1
    27fc:	0c f4       	brge	.+2      	; 0x2800 <mudaParametro+0xcc>
    27fe:	73 c0       	rjmp	.+230    	; 0x28e6 <mudaParametro+0x1b2>
    2800:	84 e6       	ldi	r24, 0x64	; 100
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <O2resp+0x1>
    2808:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <O2resp>
		break;
    280c:	6c c0       	rjmp	.+216    	; 0x28e6 <mudaParametro+0x1b2>
	case 3:
		vol = atoi(numero);
    280e:	86 e3       	ldi	r24, 0x36	; 54
    2810:	91 e0       	ldi	r25, 0x01	; 1
    2812:	0e 94 4c 1c 	call	0x3898	; 0x3898 <atoi>
    2816:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <vol+0x1>
    281a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <vol>
		if (vol>8) vol = 8;
    281e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <vol>
    2822:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <vol+0x1>
    2826:	09 97       	sbiw	r24, 0x09	; 9
    2828:	0c f4       	brge	.+2      	; 0x282c <mudaParametro+0xf8>
    282a:	5f c0       	rjmp	.+190    	; 0x28ea <mudaParametro+0x1b6>
    282c:	88 e0       	ldi	r24, 0x08	; 8
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <vol+0x1>
    2834:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <vol>
		break;
    2838:	58 c0       	rjmp	.+176    	; 0x28ea <mudaParametro+0x1b6>
	case 4:
		pausa = atoi(numero);
    283a:	86 e3       	ldi	r24, 0x36	; 54
    283c:	91 e0       	ldi	r25, 0x01	; 1
    283e:	0e 94 4c 1c 	call	0x3898	; 0x3898 <atoi>
    2842:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <pausa+0x1>
    2846:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pausa>
		if (pausa>500) pausa = 500;
    284a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pausa>
    284e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pausa+0x1>
    2852:	85 3f       	cpi	r24, 0xF5	; 245
    2854:	91 40       	sbci	r25, 0x01	; 1
    2856:	3c f0       	brlt	.+14     	; 0x2866 <mudaParametro+0x132>
    2858:	84 ef       	ldi	r24, 0xF4	; 244
    285a:	91 e0       	ldi	r25, 0x01	; 1
    285c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <pausa+0x1>
    2860:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pausa>
		else if (pausa<300) pausa = 300;
		break;
    2864:	44 c0       	rjmp	.+136    	; 0x28ee <mudaParametro+0x1ba>
		if (vol>8) vol = 8;
		break;
	case 4:
		pausa = atoi(numero);
		if (pausa>500) pausa = 500;
		else if (pausa<300) pausa = 300;
    2866:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pausa>
    286a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <pausa+0x1>
    286e:	8c 32       	cpi	r24, 0x2C	; 44
    2870:	91 40       	sbci	r25, 0x01	; 1
    2872:	ec f5       	brge	.+122    	; 0x28ee <mudaParametro+0x1ba>
    2874:	8c e2       	ldi	r24, 0x2C	; 44
    2876:	91 e0       	ldi	r25, 0x01	; 1
    2878:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <pausa+0x1>
    287c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pausa>
		break;
    2880:	36 c0       	rjmp	.+108    	; 0x28ee <mudaParametro+0x1ba>
	case 5:
		sensib = atoi(numero);
    2882:	86 e3       	ldi	r24, 0x36	; 54
    2884:	91 e0       	ldi	r25, 0x01	; 1
    2886:	0e 94 4c 1c 	call	0x3898	; 0x3898 <atoi>
    288a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <sensib+0x1>
    288e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <sensib>
		tempSensib = 50 * sensib;
    2892:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <sensib>
    2896:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <sensib+0x1>
    289a:	42 e3       	ldi	r20, 0x32	; 50
    289c:	42 9f       	mul	r20, r18
    289e:	c0 01       	movw	r24, r0
    28a0:	43 9f       	mul	r20, r19
    28a2:	90 0d       	add	r25, r0
    28a4:	11 24       	eor	r1, r1
    28a6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <tempSensib+0x1>
    28aa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <tempSensib>
		if (sensib>20) sensib = 20;
    28ae:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    28b2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    28b6:	45 97       	sbiw	r24, 0x15	; 21
    28b8:	3c f0       	brlt	.+14     	; 0x28c8 <mudaParametro+0x194>
    28ba:	84 e1       	ldi	r24, 0x14	; 20
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <sensib+0x1>
    28c2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <sensib>
		else if (sensib<5) sensib = 5;
		break;	
    28c6:	15 c0       	rjmp	.+42     	; 0x28f2 <mudaParametro+0x1be>
		break;
	case 5:
		sensib = atoi(numero);
		tempSensib = 50 * sensib;
		if (sensib>20) sensib = 20;
		else if (sensib<5) sensib = 5;
    28c8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sensib>
    28cc:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sensib+0x1>
    28d0:	05 97       	sbiw	r24, 0x05	; 5
    28d2:	7c f4       	brge	.+30     	; 0x28f2 <mudaParametro+0x1be>
    28d4:	85 e0       	ldi	r24, 0x05	; 5
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <sensib+0x1>
    28dc:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <sensib>
		break;	
    28e0:	08 c0       	rjmp	.+16     	; 0x28f2 <mudaParametro+0x1be>
	switch(sel){
	case 1: 
		FreqResp = atoi(numero);
		if (FreqResp<5) FreqResp = 5;
		else if (FreqResp>30) FreqResp = 30;
		break;
    28e2:	00 00       	nop
    28e4:	07 c0       	rjmp	.+14     	; 0x28f4 <mudaParametro+0x1c0>
	case 2:
		O2resp = atoi(numero);
		OCR1B = 2000 + O2resp*20;
		if (O2resp>100) O2resp = 100;
		break;
    28e6:	00 00       	nop
    28e8:	05 c0       	rjmp	.+10     	; 0x28f4 <mudaParametro+0x1c0>
	case 3:
		vol = atoi(numero);
		if (vol>8) vol = 8;
		break;
    28ea:	00 00       	nop
    28ec:	03 c0       	rjmp	.+6      	; 0x28f4 <mudaParametro+0x1c0>
	case 4:
		pausa = atoi(numero);
		if (pausa>500) pausa = 500;
		else if (pausa<300) pausa = 300;
		break;
    28ee:	00 00       	nop
    28f0:	01 c0       	rjmp	.+2      	; 0x28f4 <mudaParametro+0x1c0>
	case 5:
		sensib = atoi(numero);
		tempSensib = 50 * sensib;
		if (sensib>20) sensib = 20;
		else if (sensib<5) sensib = 5;
		break;	
    28f2:	00 00       	nop
	}
	for(int i = 0; i<4; i++)
    28f4:	1a 82       	std	Y+2, r1	; 0x02
    28f6:	19 82       	std	Y+1, r1	; 0x01
    28f8:	0e c0       	rjmp	.+28     	; 0x2916 <mudaParametro+0x1e2>
		numero[i] = " ";
    28fa:	88 eb       	ldi	r24, 0xB8	; 184
    28fc:	91 e0       	ldi	r25, 0x01	; 1
    28fe:	28 2f       	mov	r18, r24
    2900:	89 81       	ldd	r24, Y+1	; 0x01
    2902:	9a 81       	ldd	r25, Y+2	; 0x02
    2904:	8a 5c       	subi	r24, 0xCA	; 202
    2906:	9e 4f       	sbci	r25, 0xFE	; 254
    2908:	fc 01       	movw	r30, r24
    290a:	20 83       	st	Z, r18
		tempSensib = 50 * sensib;
		if (sensib>20) sensib = 20;
		else if (sensib<5) sensib = 5;
		break;	
	}
	for(int i = 0; i<4; i++)
    290c:	89 81       	ldd	r24, Y+1	; 0x01
    290e:	9a 81       	ldd	r25, Y+2	; 0x02
    2910:	01 96       	adiw	r24, 0x01	; 1
    2912:	9a 83       	std	Y+2, r25	; 0x02
    2914:	89 83       	std	Y+1, r24	; 0x01
    2916:	89 81       	ldd	r24, Y+1	; 0x01
    2918:	9a 81       	ldd	r25, Y+2	; 0x02
    291a:	04 97       	sbiw	r24, 0x04	; 4
    291c:	74 f3       	brlt	.-36     	; 0x28fa <mudaParametro+0x1c6>
		numero[i] = " ";
    291e:	00 00       	nop
    2920:	0f 90       	pop	r0
    2922:	0f 90       	pop	r0
    2924:	df 91       	pop	r29
    2926:	cf 91       	pop	r28
    2928:	08 95       	ret

0000292a <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
    292a:	1f 93       	push	r17
    292c:	cf 93       	push	r28
    292e:	df 93       	push	r29
    2930:	00 d0       	rcall	.+0      	; 0x2932 <write+0x8>
    2932:	cd b7       	in	r28, 0x3d	; 61
    2934:	de b7       	in	r29, 0x3e	; 62
    2936:	89 83       	std	Y+1, r24	; 0x01
    2938:	6a 83       	std	Y+2, r22	; 0x02
    293a:	88 e2       	ldi	r24, 0x28	; 40
    293c:	90 e0       	ldi	r25, 0x00	; 0
    293e:	28 e2       	ldi	r18, 0x28	; 40
    2940:	30 e0       	ldi	r19, 0x00	; 0
    2942:	f9 01       	movw	r30, r18
    2944:	20 81       	ld	r18, Z
    2946:	2f 7b       	andi	r18, 0xBF	; 191
    2948:	fc 01       	movw	r30, r24
    294a:	20 83       	st	Z, r18
    294c:	8a 81       	ldd	r24, Y+2	; 0x02
    294e:	88 23       	and	r24, r24
    2950:	51 f0       	breq	.+20     	; 0x2966 <write+0x3c>
    2952:	88 e2       	ldi	r24, 0x28	; 40
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	28 e2       	ldi	r18, 0x28	; 40
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	f9 01       	movw	r30, r18
    295c:	20 81       	ld	r18, Z
    295e:	28 60       	ori	r18, 0x08	; 8
    2960:	fc 01       	movw	r30, r24
    2962:	20 83       	st	Z, r18
    2964:	09 c0       	rjmp	.+18     	; 0x2978 <write+0x4e>
    2966:	88 e2       	ldi	r24, 0x28	; 40
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	28 e2       	ldi	r18, 0x28	; 40
    296c:	30 e0       	ldi	r19, 0x00	; 0
    296e:	f9 01       	movw	r30, r18
    2970:	20 81       	ld	r18, Z
    2972:	27 7f       	andi	r18, 0xF7	; 247
    2974:	fc 01       	movw	r30, r24
    2976:	20 83       	st	Z, r18
    2978:	10 e0       	ldi	r17, 0x00	; 0
    297a:	3c c0       	rjmp	.+120    	; 0x29f4 <write+0xca>
    297c:	89 81       	ldd	r24, Y+1	; 0x01
    297e:	88 2f       	mov	r24, r24
    2980:	90 e0       	ldi	r25, 0x00	; 0
    2982:	21 2f       	mov	r18, r17
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	47 e0       	ldi	r20, 0x07	; 7
    2988:	50 e0       	ldi	r21, 0x00	; 0
    298a:	ba 01       	movw	r22, r20
    298c:	62 1b       	sub	r22, r18
    298e:	73 0b       	sbc	r23, r19
    2990:	9b 01       	movw	r18, r22
    2992:	02 c0       	rjmp	.+4      	; 0x2998 <write+0x6e>
    2994:	95 95       	asr	r25
    2996:	87 95       	ror	r24
    2998:	2a 95       	dec	r18
    299a:	e2 f7       	brpl	.-8      	; 0x2994 <write+0x6a>
    299c:	81 70       	andi	r24, 0x01	; 1
    299e:	99 27       	eor	r25, r25
    29a0:	89 2b       	or	r24, r25
    29a2:	51 f0       	breq	.+20     	; 0x29b8 <write+0x8e>
    29a4:	88 e2       	ldi	r24, 0x28	; 40
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	28 e2       	ldi	r18, 0x28	; 40
    29aa:	30 e0       	ldi	r19, 0x00	; 0
    29ac:	f9 01       	movw	r30, r18
    29ae:	20 81       	ld	r18, Z
    29b0:	20 61       	ori	r18, 0x10	; 16
    29b2:	fc 01       	movw	r30, r24
    29b4:	20 83       	st	Z, r18
    29b6:	09 c0       	rjmp	.+18     	; 0x29ca <write+0xa0>
    29b8:	88 e2       	ldi	r24, 0x28	; 40
    29ba:	90 e0       	ldi	r25, 0x00	; 0
    29bc:	28 e2       	ldi	r18, 0x28	; 40
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	f9 01       	movw	r30, r18
    29c2:	20 81       	ld	r18, Z
    29c4:	2f 7e       	andi	r18, 0xEF	; 239
    29c6:	fc 01       	movw	r30, r24
    29c8:	20 83       	st	Z, r18
    29ca:	88 e2       	ldi	r24, 0x28	; 40
    29cc:	90 e0       	ldi	r25, 0x00	; 0
    29ce:	28 e2       	ldi	r18, 0x28	; 40
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	f9 01       	movw	r30, r18
    29d4:	20 81       	ld	r18, Z
    29d6:	20 62       	ori	r18, 0x20	; 32
    29d8:	fc 01       	movw	r30, r24
    29da:	20 83       	st	Z, r18
    29dc:	88 e2       	ldi	r24, 0x28	; 40
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	28 e2       	ldi	r18, 0x28	; 40
    29e2:	30 e0       	ldi	r19, 0x00	; 0
    29e4:	f9 01       	movw	r30, r18
    29e6:	20 81       	ld	r18, Z
    29e8:	2f 7d       	andi	r18, 0xDF	; 223
    29ea:	fc 01       	movw	r30, r24
    29ec:	20 83       	st	Z, r18
    29ee:	81 2f       	mov	r24, r17
    29f0:	11 e0       	ldi	r17, 0x01	; 1
    29f2:	18 0f       	add	r17, r24
    29f4:	18 30       	cpi	r17, 0x08	; 8
    29f6:	10 f2       	brcs	.-124    	; 0x297c <write+0x52>
    29f8:	88 e2       	ldi	r24, 0x28	; 40
    29fa:	90 e0       	ldi	r25, 0x00	; 0
    29fc:	28 e2       	ldi	r18, 0x28	; 40
    29fe:	30 e0       	ldi	r19, 0x00	; 0
    2a00:	f9 01       	movw	r30, r18
    2a02:	20 81       	ld	r18, Z
    2a04:	20 64       	ori	r18, 0x40	; 64
    2a06:	fc 01       	movw	r30, r24
    2a08:	20 83       	st	Z, r18
    2a0a:	00 00       	nop
    2a0c:	0f 90       	pop	r0
    2a0e:	0f 90       	pop	r0
    2a10:	df 91       	pop	r29
    2a12:	cf 91       	pop	r28
    2a14:	1f 91       	pop	r17
    2a16:	08 95       	ret

00002a18 <write_cmd>:
    2a18:	cf 93       	push	r28
    2a1a:	df 93       	push	r29
    2a1c:	1f 92       	push	r1
    2a1e:	cd b7       	in	r28, 0x3d	; 61
    2a20:	de b7       	in	r29, 0x3e	; 62
    2a22:	89 83       	std	Y+1, r24	; 0x01
    2a24:	60 e0       	ldi	r22, 0x00	; 0
    2a26:	89 81       	ldd	r24, Y+1	; 0x01
    2a28:	0e 94 95 14 	call	0x292a	; 0x292a <write>
    2a2c:	00 00       	nop
    2a2e:	0f 90       	pop	r0
    2a30:	df 91       	pop	r29
    2a32:	cf 91       	pop	r28
    2a34:	08 95       	ret

00002a36 <write_data>:
    2a36:	cf 93       	push	r28
    2a38:	df 93       	push	r29
    2a3a:	1f 92       	push	r1
    2a3c:	cd b7       	in	r28, 0x3d	; 61
    2a3e:	de b7       	in	r29, 0x3e	; 62
    2a40:	89 83       	std	Y+1, r24	; 0x01
    2a42:	61 e0       	ldi	r22, 0x01	; 1
    2a44:	89 81       	ldd	r24, Y+1	; 0x01
    2a46:	0e 94 95 14 	call	0x292a	; 0x292a <write>
    2a4a:	00 00       	nop
    2a4c:	0f 90       	pop	r0
    2a4e:	df 91       	pop	r29
    2a50:	cf 91       	pop	r28
    2a52:	08 95       	ret

00002a54 <nokia_lcd_init>:
    2a54:	0f 93       	push	r16
    2a56:	1f 93       	push	r17
    2a58:	cf 93       	push	r28
    2a5a:	df 93       	push	r29
    2a5c:	cd b7       	in	r28, 0x3d	; 61
    2a5e:	de b7       	in	r29, 0x3e	; 62
    2a60:	6c 97       	sbiw	r28, 0x1c	; 28
    2a62:	0f b6       	in	r0, 0x3f	; 63
    2a64:	f8 94       	cli
    2a66:	de bf       	out	0x3e, r29	; 62
    2a68:	0f be       	out	0x3f, r0	; 63
    2a6a:	cd bf       	out	0x3d, r28	; 61
    2a6c:	87 e2       	ldi	r24, 0x27	; 39
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	27 e2       	ldi	r18, 0x27	; 39
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	f9 01       	movw	r30, r18
    2a76:	20 81       	ld	r18, Z
    2a78:	20 64       	ori	r18, 0x40	; 64
    2a7a:	fc 01       	movw	r30, r24
    2a7c:	20 83       	st	Z, r18
    2a7e:	87 e2       	ldi	r24, 0x27	; 39
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	27 e2       	ldi	r18, 0x27	; 39
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	f9 01       	movw	r30, r18
    2a88:	20 81       	ld	r18, Z
    2a8a:	24 60       	ori	r18, 0x04	; 4
    2a8c:	fc 01       	movw	r30, r24
    2a8e:	20 83       	st	Z, r18
    2a90:	87 e2       	ldi	r24, 0x27	; 39
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	27 e2       	ldi	r18, 0x27	; 39
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	f9 01       	movw	r30, r18
    2a9a:	20 81       	ld	r18, Z
    2a9c:	28 60       	ori	r18, 0x08	; 8
    2a9e:	fc 01       	movw	r30, r24
    2aa0:	20 83       	st	Z, r18
    2aa2:	87 e2       	ldi	r24, 0x27	; 39
    2aa4:	90 e0       	ldi	r25, 0x00	; 0
    2aa6:	27 e2       	ldi	r18, 0x27	; 39
    2aa8:	30 e0       	ldi	r19, 0x00	; 0
    2aaa:	f9 01       	movw	r30, r18
    2aac:	20 81       	ld	r18, Z
    2aae:	20 61       	ori	r18, 0x10	; 16
    2ab0:	fc 01       	movw	r30, r24
    2ab2:	20 83       	st	Z, r18
    2ab4:	87 e2       	ldi	r24, 0x27	; 39
    2ab6:	90 e0       	ldi	r25, 0x00	; 0
    2ab8:	27 e2       	ldi	r18, 0x27	; 39
    2aba:	30 e0       	ldi	r19, 0x00	; 0
    2abc:	f9 01       	movw	r30, r18
    2abe:	20 81       	ld	r18, Z
    2ac0:	20 62       	ori	r18, 0x20	; 32
    2ac2:	fc 01       	movw	r30, r24
    2ac4:	20 83       	st	Z, r18
    2ac6:	88 e2       	ldi	r24, 0x28	; 40
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	28 e2       	ldi	r18, 0x28	; 40
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	f9 01       	movw	r30, r18
    2ad0:	20 81       	ld	r18, Z
    2ad2:	24 60       	ori	r18, 0x04	; 4
    2ad4:	fc 01       	movw	r30, r24
    2ad6:	20 83       	st	Z, r18
    2ad8:	88 e2       	ldi	r24, 0x28	; 40
    2ada:	90 e0       	ldi	r25, 0x00	; 0
    2adc:	28 e2       	ldi	r18, 0x28	; 40
    2ade:	30 e0       	ldi	r19, 0x00	; 0
    2ae0:	f9 01       	movw	r30, r18
    2ae2:	20 81       	ld	r18, Z
    2ae4:	20 64       	ori	r18, 0x40	; 64
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	20 83       	st	Z, r18
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	a0 e2       	ldi	r26, 0x20	; 32
    2af0:	b1 e4       	ldi	r27, 0x41	; 65
    2af2:	89 83       	std	Y+1, r24	; 0x01
    2af4:	9a 83       	std	Y+2, r25	; 0x02
    2af6:	ab 83       	std	Y+3, r26	; 0x03
    2af8:	bc 83       	std	Y+4, r27	; 0x04
    2afa:	20 e0       	ldi	r18, 0x00	; 0
    2afc:	30 e0       	ldi	r19, 0x00	; 0
    2afe:	4a e7       	ldi	r20, 0x7A	; 122
    2b00:	53 e4       	ldi	r21, 0x43	; 67
    2b02:	69 81       	ldd	r22, Y+1	; 0x01
    2b04:	7a 81       	ldd	r23, Y+2	; 0x02
    2b06:	8b 81       	ldd	r24, Y+3	; 0x03
    2b08:	9c 81       	ldd	r25, Y+4	; 0x04
    2b0a:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    2b0e:	dc 01       	movw	r26, r24
    2b10:	cb 01       	movw	r24, r22
    2b12:	8b 8b       	std	Y+19, r24	; 0x13
    2b14:	9c 8b       	std	Y+20, r25	; 0x14
    2b16:	ad 8b       	std	Y+21, r26	; 0x15
    2b18:	be 8b       	std	Y+22, r27	; 0x16
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	40 e8       	ldi	r20, 0x80	; 128
    2b20:	5f e3       	ldi	r21, 0x3F	; 63
    2b22:	6b 89       	ldd	r22, Y+19	; 0x13
    2b24:	7c 89       	ldd	r23, Y+20	; 0x14
    2b26:	8d 89       	ldd	r24, Y+21	; 0x15
    2b28:	9e 89       	ldd	r25, Y+22	; 0x16
    2b2a:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
    2b2e:	88 23       	and	r24, r24
    2b30:	2c f4       	brge	.+10     	; 0x2b3c <nokia_lcd_init+0xe8>
    2b32:	81 e0       	ldi	r24, 0x01	; 1
    2b34:	90 e0       	ldi	r25, 0x00	; 0
    2b36:	98 8f       	std	Y+24, r25	; 0x18
    2b38:	8f 8b       	std	Y+23, r24	; 0x17
    2b3a:	3f c0       	rjmp	.+126    	; 0x2bba <nokia_lcd_init+0x166>
    2b3c:	20 e0       	ldi	r18, 0x00	; 0
    2b3e:	3f ef       	ldi	r19, 0xFF	; 255
    2b40:	4f e7       	ldi	r20, 0x7F	; 127
    2b42:	57 e4       	ldi	r21, 0x47	; 71
    2b44:	6b 89       	ldd	r22, Y+19	; 0x13
    2b46:	7c 89       	ldd	r23, Y+20	; 0x14
    2b48:	8d 89       	ldd	r24, Y+21	; 0x15
    2b4a:	9e 89       	ldd	r25, Y+22	; 0x16
    2b4c:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
    2b50:	18 16       	cp	r1, r24
    2b52:	4c f5       	brge	.+82     	; 0x2ba6 <nokia_lcd_init+0x152>
    2b54:	20 e0       	ldi	r18, 0x00	; 0
    2b56:	30 e0       	ldi	r19, 0x00	; 0
    2b58:	40 e2       	ldi	r20, 0x20	; 32
    2b5a:	51 e4       	ldi	r21, 0x41	; 65
    2b5c:	69 81       	ldd	r22, Y+1	; 0x01
    2b5e:	7a 81       	ldd	r23, Y+2	; 0x02
    2b60:	8b 81       	ldd	r24, Y+3	; 0x03
    2b62:	9c 81       	ldd	r25, Y+4	; 0x04
    2b64:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    2b68:	dc 01       	movw	r26, r24
    2b6a:	cb 01       	movw	r24, r22
    2b6c:	bc 01       	movw	r22, r24
    2b6e:	cd 01       	movw	r24, r26
    2b70:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    2b74:	dc 01       	movw	r26, r24
    2b76:	cb 01       	movw	r24, r22
    2b78:	98 8f       	std	Y+24, r25	; 0x18
    2b7a:	8f 8b       	std	Y+23, r24	; 0x17
    2b7c:	0f c0       	rjmp	.+30     	; 0x2b9c <nokia_lcd_init+0x148>
    2b7e:	89 e1       	ldi	r24, 0x19	; 25
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	9a 8f       	std	Y+26, r25	; 0x1a
    2b84:	89 8f       	std	Y+25, r24	; 0x19
    2b86:	89 8d       	ldd	r24, Y+25	; 0x19
    2b88:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2b8a:	01 97       	sbiw	r24, 0x01	; 1
    2b8c:	f1 f7       	brne	.-4      	; 0x2b8a <nokia_lcd_init+0x136>
    2b8e:	9a 8f       	std	Y+26, r25	; 0x1a
    2b90:	89 8f       	std	Y+25, r24	; 0x19
    2b92:	8f 89       	ldd	r24, Y+23	; 0x17
    2b94:	98 8d       	ldd	r25, Y+24	; 0x18
    2b96:	01 97       	sbiw	r24, 0x01	; 1
    2b98:	98 8f       	std	Y+24, r25	; 0x18
    2b9a:	8f 8b       	std	Y+23, r24	; 0x17
    2b9c:	8f 89       	ldd	r24, Y+23	; 0x17
    2b9e:	98 8d       	ldd	r25, Y+24	; 0x18
    2ba0:	89 2b       	or	r24, r25
    2ba2:	69 f7       	brne	.-38     	; 0x2b7e <nokia_lcd_init+0x12a>
    2ba4:	14 c0       	rjmp	.+40     	; 0x2bce <nokia_lcd_init+0x17a>
    2ba6:	6b 89       	ldd	r22, Y+19	; 0x13
    2ba8:	7c 89       	ldd	r23, Y+20	; 0x14
    2baa:	8d 89       	ldd	r24, Y+21	; 0x15
    2bac:	9e 89       	ldd	r25, Y+22	; 0x16
    2bae:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    2bb2:	dc 01       	movw	r26, r24
    2bb4:	cb 01       	movw	r24, r22
    2bb6:	98 8f       	std	Y+24, r25	; 0x18
    2bb8:	8f 8b       	std	Y+23, r24	; 0x17
    2bba:	8f 89       	ldd	r24, Y+23	; 0x17
    2bbc:	98 8d       	ldd	r25, Y+24	; 0x18
    2bbe:	9c 8f       	std	Y+28, r25	; 0x1c
    2bc0:	8b 8f       	std	Y+27, r24	; 0x1b
    2bc2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bc4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bc6:	01 97       	sbiw	r24, 0x01	; 1
    2bc8:	f1 f7       	brne	.-4      	; 0x2bc6 <nokia_lcd_init+0x172>
    2bca:	9c 8f       	std	Y+28, r25	; 0x1c
    2bcc:	8b 8f       	std	Y+27, r24	; 0x1b
    2bce:	88 e2       	ldi	r24, 0x28	; 40
    2bd0:	90 e0       	ldi	r25, 0x00	; 0
    2bd2:	28 e2       	ldi	r18, 0x28	; 40
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	f9 01       	movw	r30, r18
    2bd8:	20 81       	ld	r18, Z
    2bda:	2b 7f       	andi	r18, 0xFB	; 251
    2bdc:	fc 01       	movw	r30, r24
    2bde:	20 83       	st	Z, r18
    2be0:	80 e0       	ldi	r24, 0x00	; 0
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	ac e8       	ldi	r26, 0x8C	; 140
    2be6:	b2 e4       	ldi	r27, 0x42	; 66
    2be8:	8d 83       	std	Y+5, r24	; 0x05
    2bea:	9e 83       	std	Y+6, r25	; 0x06
    2bec:	af 83       	std	Y+7, r26	; 0x07
    2bee:	b8 87       	std	Y+8, r27	; 0x08
    2bf0:	20 e0       	ldi	r18, 0x00	; 0
    2bf2:	30 e0       	ldi	r19, 0x00	; 0
    2bf4:	4a e7       	ldi	r20, 0x7A	; 122
    2bf6:	53 e4       	ldi	r21, 0x43	; 67
    2bf8:	6d 81       	ldd	r22, Y+5	; 0x05
    2bfa:	7e 81       	ldd	r23, Y+6	; 0x06
    2bfc:	8f 81       	ldd	r24, Y+7	; 0x07
    2bfe:	98 85       	ldd	r25, Y+8	; 0x08
    2c00:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    2c04:	dc 01       	movw	r26, r24
    2c06:	cb 01       	movw	r24, r22
    2c08:	89 87       	std	Y+9, r24	; 0x09
    2c0a:	9a 87       	std	Y+10, r25	; 0x0a
    2c0c:	ab 87       	std	Y+11, r26	; 0x0b
    2c0e:	bc 87       	std	Y+12, r27	; 0x0c
    2c10:	20 e0       	ldi	r18, 0x00	; 0
    2c12:	30 e0       	ldi	r19, 0x00	; 0
    2c14:	40 e8       	ldi	r20, 0x80	; 128
    2c16:	5f e3       	ldi	r21, 0x3F	; 63
    2c18:	69 85       	ldd	r22, Y+9	; 0x09
    2c1a:	7a 85       	ldd	r23, Y+10	; 0x0a
    2c1c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c1e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2c20:	0e 94 a2 18 	call	0x3144	; 0x3144 <__cmpsf2>
    2c24:	88 23       	and	r24, r24
    2c26:	2c f4       	brge	.+10     	; 0x2c32 <nokia_lcd_init+0x1de>
    2c28:	81 e0       	ldi	r24, 0x01	; 1
    2c2a:	90 e0       	ldi	r25, 0x00	; 0
    2c2c:	9e 87       	std	Y+14, r25	; 0x0e
    2c2e:	8d 87       	std	Y+13, r24	; 0x0d
    2c30:	3f c0       	rjmp	.+126    	; 0x2cb0 <nokia_lcd_init+0x25c>
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	3f ef       	ldi	r19, 0xFF	; 255
    2c36:	4f e7       	ldi	r20, 0x7F	; 127
    2c38:	57 e4       	ldi	r21, 0x47	; 71
    2c3a:	69 85       	ldd	r22, Y+9	; 0x09
    2c3c:	7a 85       	ldd	r23, Y+10	; 0x0a
    2c3e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c40:	9c 85       	ldd	r25, Y+12	; 0x0c
    2c42:	0e 94 55 1a 	call	0x34aa	; 0x34aa <__gesf2>
    2c46:	18 16       	cp	r1, r24
    2c48:	4c f5       	brge	.+82     	; 0x2c9c <nokia_lcd_init+0x248>
    2c4a:	20 e0       	ldi	r18, 0x00	; 0
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	40 e2       	ldi	r20, 0x20	; 32
    2c50:	51 e4       	ldi	r21, 0x41	; 65
    2c52:	6d 81       	ldd	r22, Y+5	; 0x05
    2c54:	7e 81       	ldd	r23, Y+6	; 0x06
    2c56:	8f 81       	ldd	r24, Y+7	; 0x07
    2c58:	98 85       	ldd	r25, Y+8	; 0x08
    2c5a:	0e 94 5a 1a 	call	0x34b4	; 0x34b4 <__mulsf3>
    2c5e:	dc 01       	movw	r26, r24
    2c60:	cb 01       	movw	r24, r22
    2c62:	bc 01       	movw	r22, r24
    2c64:	cd 01       	movw	r24, r26
    2c66:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	cb 01       	movw	r24, r22
    2c6e:	9e 87       	std	Y+14, r25	; 0x0e
    2c70:	8d 87       	std	Y+13, r24	; 0x0d
    2c72:	0f c0       	rjmp	.+30     	; 0x2c92 <nokia_lcd_init+0x23e>
    2c74:	89 e1       	ldi	r24, 0x19	; 25
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	98 8b       	std	Y+16, r25	; 0x10
    2c7a:	8f 87       	std	Y+15, r24	; 0x0f
    2c7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c7e:	98 89       	ldd	r25, Y+16	; 0x10
    2c80:	01 97       	sbiw	r24, 0x01	; 1
    2c82:	f1 f7       	brne	.-4      	; 0x2c80 <nokia_lcd_init+0x22c>
    2c84:	98 8b       	std	Y+16, r25	; 0x10
    2c86:	8f 87       	std	Y+15, r24	; 0x0f
    2c88:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c8c:	01 97       	sbiw	r24, 0x01	; 1
    2c8e:	9e 87       	std	Y+14, r25	; 0x0e
    2c90:	8d 87       	std	Y+13, r24	; 0x0d
    2c92:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c94:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c96:	89 2b       	or	r24, r25
    2c98:	69 f7       	brne	.-38     	; 0x2c74 <nokia_lcd_init+0x220>
    2c9a:	14 c0       	rjmp	.+40     	; 0x2cc4 <nokia_lcd_init+0x270>
    2c9c:	69 85       	ldd	r22, Y+9	; 0x09
    2c9e:	7a 85       	ldd	r23, Y+10	; 0x0a
    2ca0:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ca2:	9c 85       	ldd	r25, Y+12	; 0x0c
    2ca4:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    2ca8:	dc 01       	movw	r26, r24
    2caa:	cb 01       	movw	r24, r22
    2cac:	9e 87       	std	Y+14, r25	; 0x0e
    2cae:	8d 87       	std	Y+13, r24	; 0x0d
    2cb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cb4:	9a 8b       	std	Y+18, r25	; 0x12
    2cb6:	89 8b       	std	Y+17, r24	; 0x11
    2cb8:	89 89       	ldd	r24, Y+17	; 0x11
    2cba:	9a 89       	ldd	r25, Y+18	; 0x12
    2cbc:	01 97       	sbiw	r24, 0x01	; 1
    2cbe:	f1 f7       	brne	.-4      	; 0x2cbc <nokia_lcd_init+0x268>
    2cc0:	9a 8b       	std	Y+18, r25	; 0x12
    2cc2:	89 8b       	std	Y+17, r24	; 0x11
    2cc4:	88 e2       	ldi	r24, 0x28	; 40
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	28 e2       	ldi	r18, 0x28	; 40
    2cca:	30 e0       	ldi	r19, 0x00	; 0
    2ccc:	f9 01       	movw	r30, r18
    2cce:	20 81       	ld	r18, Z
    2cd0:	24 60       	ori	r18, 0x04	; 4
    2cd2:	fc 01       	movw	r30, r24
    2cd4:	20 83       	st	Z, r18
    2cd6:	88 e2       	ldi	r24, 0x28	; 40
    2cd8:	90 e0       	ldi	r25, 0x00	; 0
    2cda:	28 e2       	ldi	r18, 0x28	; 40
    2cdc:	30 e0       	ldi	r19, 0x00	; 0
    2cde:	f9 01       	movw	r30, r18
    2ce0:	20 81       	ld	r18, Z
    2ce2:	2f 7b       	andi	r18, 0xBF	; 191
    2ce4:	fc 01       	movw	r30, r24
    2ce6:	20 83       	st	Z, r18
    2ce8:	81 e2       	ldi	r24, 0x21	; 33
    2cea:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2cee:	83 e1       	ldi	r24, 0x13	; 19
    2cf0:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2cf4:	86 e0       	ldi	r24, 0x06	; 6
    2cf6:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2cfa:	82 ec       	ldi	r24, 0xC2	; 194
    2cfc:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d00:	80 e2       	ldi	r24, 0x20	; 32
    2d02:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d06:	89 e0       	ldi	r24, 0x09	; 9
    2d08:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d0c:	80 e8       	ldi	r24, 0x80	; 128
    2d0e:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d12:	80 e4       	ldi	r24, 0x40	; 64
    2d14:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d18:	00 e0       	ldi	r16, 0x00	; 0
    2d1a:	10 e0       	ldi	r17, 0x00	; 0
    2d1c:	05 c0       	rjmp	.+10     	; 0x2d28 <nokia_lcd_init+0x2d4>
    2d1e:	80 e0       	ldi	r24, 0x00	; 0
    2d20:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <write_data>
    2d24:	0f 5f       	subi	r16, 0xFF	; 255
    2d26:	1f 4f       	sbci	r17, 0xFF	; 255
    2d28:	08 3f       	cpi	r16, 0xF8	; 248
    2d2a:	f1 e0       	ldi	r31, 0x01	; 1
    2d2c:	1f 07       	cpc	r17, r31
    2d2e:	b8 f3       	brcs	.-18     	; 0x2d1e <nokia_lcd_init+0x2ca>
    2d30:	88 e0       	ldi	r24, 0x08	; 8
    2d32:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d36:	8c e0       	ldi	r24, 0x0C	; 12
    2d38:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d3c:	00 00       	nop
    2d3e:	6c 96       	adiw	r28, 0x1c	; 28
    2d40:	0f b6       	in	r0, 0x3f	; 63
    2d42:	f8 94       	cli
    2d44:	de bf       	out	0x3e, r29	; 62
    2d46:	0f be       	out	0x3f, r0	; 63
    2d48:	cd bf       	out	0x3d, r28	; 61
    2d4a:	df 91       	pop	r29
    2d4c:	cf 91       	pop	r28
    2d4e:	1f 91       	pop	r17
    2d50:	0f 91       	pop	r16
    2d52:	08 95       	ret

00002d54 <nokia_lcd_clear>:
    2d54:	0f 93       	push	r16
    2d56:	1f 93       	push	r17
    2d58:	cf 93       	push	r28
    2d5a:	df 93       	push	r29
    2d5c:	cd b7       	in	r28, 0x3d	; 61
    2d5e:	de b7       	in	r29, 0x3e	; 62
    2d60:	80 e8       	ldi	r24, 0x80	; 128
    2d62:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d66:	80 e4       	ldi	r24, 0x40	; 64
    2d68:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
    2d6c:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <nokia_lcd+0x1f8>
    2d70:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <nokia_lcd+0x1f9>
    2d74:	00 e0       	ldi	r16, 0x00	; 0
    2d76:	10 e0       	ldi	r17, 0x00	; 0
    2d78:	07 c0       	rjmp	.+14     	; 0x2d88 <nokia_lcd_clear+0x34>
    2d7a:	c8 01       	movw	r24, r16
    2d7c:	89 5d       	subi	r24, 0xD9	; 217
    2d7e:	9d 4f       	sbci	r25, 0xFD	; 253
    2d80:	fc 01       	movw	r30, r24
    2d82:	10 82       	st	Z, r1
    2d84:	0f 5f       	subi	r16, 0xFF	; 255
    2d86:	1f 4f       	sbci	r17, 0xFF	; 255
    2d88:	08 3f       	cpi	r16, 0xF8	; 248
    2d8a:	f1 e0       	ldi	r31, 0x01	; 1
    2d8c:	1f 07       	cpc	r17, r31
    2d8e:	a8 f3       	brcs	.-22     	; 0x2d7a <nokia_lcd_clear+0x26>
    2d90:	00 00       	nop
    2d92:	df 91       	pop	r29
    2d94:	cf 91       	pop	r28
    2d96:	1f 91       	pop	r17
    2d98:	0f 91       	pop	r16
    2d9a:	08 95       	ret

00002d9c <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
    2d9c:	cf 93       	push	r28
    2d9e:	df 93       	push	r29
    2da0:	00 d0       	rcall	.+0      	; 0x2da2 <nokia_lcd_set_pixel+0x6>
    2da2:	00 d0       	rcall	.+0      	; 0x2da4 <nokia_lcd_set_pixel+0x8>
    2da4:	1f 92       	push	r1
    2da6:	cd b7       	in	r28, 0x3d	; 61
    2da8:	de b7       	in	r29, 0x3e	; 62
    2daa:	8b 83       	std	Y+3, r24	; 0x03
    2dac:	6c 83       	std	Y+4, r22	; 0x04
    2dae:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    2db0:	8c 81       	ldd	r24, Y+4	; 0x04
    2db2:	86 95       	lsr	r24
    2db4:	86 95       	lsr	r24
    2db6:	86 95       	lsr	r24
    2db8:	88 2f       	mov	r24, r24
    2dba:	90 e0       	ldi	r25, 0x00	; 0
    2dbc:	44 e5       	ldi	r20, 0x54	; 84
    2dbe:	48 9f       	mul	r20, r24
    2dc0:	90 01       	movw	r18, r0
    2dc2:	49 9f       	mul	r20, r25
    2dc4:	30 0d       	add	r19, r0
    2dc6:	11 24       	eor	r1, r1
    2dc8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dca:	88 2f       	mov	r24, r24
    2dcc:	90 e0       	ldi	r25, 0x00	; 0
    2dce:	82 0f       	add	r24, r18
    2dd0:	93 1f       	adc	r25, r19
    2dd2:	89 5d       	subi	r24, 0xD9	; 217
    2dd4:	9d 4f       	sbci	r25, 0xFD	; 253
    2dd6:	9a 83       	std	Y+2, r25	; 0x02
    2dd8:	89 83       	std	Y+1, r24	; 0x01
	if (value)
    2dda:	8d 81       	ldd	r24, Y+5	; 0x05
    2ddc:	88 23       	and	r24, r24
    2dde:	c9 f0       	breq	.+50     	; 0x2e12 <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
    2de0:	89 81       	ldd	r24, Y+1	; 0x01
    2de2:	9a 81       	ldd	r25, Y+2	; 0x02
    2de4:	fc 01       	movw	r30, r24
    2de6:	80 81       	ld	r24, Z
    2de8:	48 2f       	mov	r20, r24
    2dea:	8c 81       	ldd	r24, Y+4	; 0x04
    2dec:	88 2f       	mov	r24, r24
    2dee:	90 e0       	ldi	r25, 0x00	; 0
    2df0:	9c 01       	movw	r18, r24
    2df2:	27 70       	andi	r18, 0x07	; 7
    2df4:	33 27       	eor	r19, r19
    2df6:	81 e0       	ldi	r24, 0x01	; 1
    2df8:	90 e0       	ldi	r25, 0x00	; 0
    2dfa:	02 c0       	rjmp	.+4      	; 0x2e00 <nokia_lcd_set_pixel+0x64>
    2dfc:	88 0f       	add	r24, r24
    2dfe:	99 1f       	adc	r25, r25
    2e00:	2a 95       	dec	r18
    2e02:	e2 f7       	brpl	.-8      	; 0x2dfc <nokia_lcd_set_pixel+0x60>
    2e04:	84 2b       	or	r24, r20
    2e06:	28 2f       	mov	r18, r24
    2e08:	89 81       	ldd	r24, Y+1	; 0x01
    2e0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e0c:	fc 01       	movw	r30, r24
    2e0e:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
    2e10:	19 c0       	rjmp	.+50     	; 0x2e44 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
    2e12:	89 81       	ldd	r24, Y+1	; 0x01
    2e14:	9a 81       	ldd	r25, Y+2	; 0x02
    2e16:	fc 01       	movw	r30, r24
    2e18:	80 81       	ld	r24, Z
    2e1a:	48 2f       	mov	r20, r24
    2e1c:	8c 81       	ldd	r24, Y+4	; 0x04
    2e1e:	88 2f       	mov	r24, r24
    2e20:	90 e0       	ldi	r25, 0x00	; 0
    2e22:	9c 01       	movw	r18, r24
    2e24:	27 70       	andi	r18, 0x07	; 7
    2e26:	33 27       	eor	r19, r19
    2e28:	81 e0       	ldi	r24, 0x01	; 1
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	02 c0       	rjmp	.+4      	; 0x2e32 <nokia_lcd_set_pixel+0x96>
    2e2e:	88 0f       	add	r24, r24
    2e30:	99 1f       	adc	r25, r25
    2e32:	2a 95       	dec	r18
    2e34:	e2 f7       	brpl	.-8      	; 0x2e2e <nokia_lcd_set_pixel+0x92>
    2e36:	80 95       	com	r24
    2e38:	84 23       	and	r24, r20
    2e3a:	28 2f       	mov	r18, r24
    2e3c:	89 81       	ldd	r24, Y+1	; 0x01
    2e3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e40:	fc 01       	movw	r30, r24
    2e42:	20 83       	st	Z, r18
}
    2e44:	00 00       	nop
    2e46:	0f 90       	pop	r0
    2e48:	0f 90       	pop	r0
    2e4a:	0f 90       	pop	r0
    2e4c:	0f 90       	pop	r0
    2e4e:	0f 90       	pop	r0
    2e50:	df 91       	pop	r29
    2e52:	cf 91       	pop	r28
    2e54:	08 95       	ret

00002e56 <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
    2e56:	0f 93       	push	r16
    2e58:	1f 93       	push	r17
    2e5a:	cf 93       	push	r28
    2e5c:	df 93       	push	r29
    2e5e:	00 d0       	rcall	.+0      	; 0x2e60 <nokia_lcd_write_char+0xa>
    2e60:	00 d0       	rcall	.+0      	; 0x2e62 <nokia_lcd_write_char+0xc>
    2e62:	1f 92       	push	r1
    2e64:	cd b7       	in	r28, 0x3d	; 61
    2e66:	de b7       	in	r29, 0x3e	; 62
    2e68:	8c 83       	std	Y+4, r24	; 0x04
    2e6a:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    2e6c:	10 e0       	ldi	r17, 0x00	; 0
    2e6e:	65 c0       	rjmp	.+202    	; 0x2f3a <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
    2e70:	00 e0       	ldi	r16, 0x00	; 0
    2e72:	4e c0       	rjmp	.+156    	; 0x2f10 <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    2e74:	8c 81       	ldd	r24, Y+4	; 0x04
    2e76:	88 2f       	mov	r24, r24
    2e78:	90 e0       	ldi	r25, 0x00	; 0
    2e7a:	9c 01       	movw	r18, r24
    2e7c:	20 52       	subi	r18, 0x20	; 32
    2e7e:	31 09       	sbc	r19, r1
    2e80:	9d 81       	ldd	r25, Y+5	; 0x05
    2e82:	81 2f       	mov	r24, r17
    2e84:	69 2f       	mov	r22, r25
    2e86:	0e 94 c7 1a 	call	0x358e	; 0x358e <__udivmodqi4>
    2e8a:	48 2f       	mov	r20, r24
    2e8c:	50 e0       	ldi	r21, 0x00	; 0
    2e8e:	c9 01       	movw	r24, r18
    2e90:	88 0f       	add	r24, r24
    2e92:	99 1f       	adc	r25, r25
    2e94:	88 0f       	add	r24, r24
    2e96:	99 1f       	adc	r25, r25
    2e98:	82 0f       	add	r24, r18
    2e9a:	93 1f       	adc	r25, r19
    2e9c:	84 0f       	add	r24, r20
    2e9e:	95 1f       	adc	r25, r21
    2ea0:	84 58       	subi	r24, 0x84	; 132
    2ea2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea4:	9a 83       	std	Y+2, r25	; 0x02
    2ea6:	89 83       	std	Y+1, r24	; 0x01
    2ea8:	89 81       	ldd	r24, Y+1	; 0x01
    2eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    2eac:	fc 01       	movw	r30, r24
    2eae:	84 91       	lpm	r24, Z
    2eb0:	8b 83       	std	Y+3, r24	; 0x03
    2eb2:	8b 81       	ldd	r24, Y+3	; 0x03
    2eb4:	28 2f       	mov	r18, r24
    2eb6:	30 e0       	ldi	r19, 0x00	; 0
    2eb8:	9d 81       	ldd	r25, Y+5	; 0x05
    2eba:	80 2f       	mov	r24, r16
    2ebc:	69 2f       	mov	r22, r25
    2ebe:	0e 94 c7 1a 	call	0x358e	; 0x358e <__udivmodqi4>
    2ec2:	88 2f       	mov	r24, r24
    2ec4:	90 e0       	ldi	r25, 0x00	; 0
    2ec6:	a9 01       	movw	r20, r18
    2ec8:	02 c0       	rjmp	.+4      	; 0x2ece <nokia_lcd_write_char+0x78>
    2eca:	55 95       	asr	r21
    2ecc:	47 95       	ror	r20
    2ece:	8a 95       	dec	r24
    2ed0:	e2 f7       	brpl	.-8      	; 0x2eca <nokia_lcd_write_char+0x74>
    2ed2:	ca 01       	movw	r24, r20
    2ed4:	81 70       	andi	r24, 0x01	; 1
    2ed6:	99 27       	eor	r25, r25
    2ed8:	89 2b       	or	r24, r25
    2eda:	61 f0       	breq	.+24     	; 0x2ef4 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    2edc:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <nokia_lcd+0x1f9>
    2ee0:	98 2f       	mov	r25, r24
    2ee2:	90 0f       	add	r25, r16
    2ee4:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <nokia_lcd+0x1f8>
    2ee8:	81 0f       	add	r24, r17
    2eea:	41 e0       	ldi	r20, 0x01	; 1
    2eec:	69 2f       	mov	r22, r25
    2eee:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <nokia_lcd_set_pixel>
    2ef2:	0b c0       	rjmp	.+22     	; 0x2f0a <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    2ef4:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <nokia_lcd+0x1f9>
    2ef8:	98 2f       	mov	r25, r24
    2efa:	90 0f       	add	r25, r16
    2efc:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <nokia_lcd+0x1f8>
    2f00:	81 0f       	add	r24, r17
    2f02:	40 e0       	ldi	r20, 0x00	; 0
    2f04:	69 2f       	mov	r22, r25
    2f06:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    2f0a:	80 2f       	mov	r24, r16
    2f0c:	01 e0       	ldi	r16, 0x01	; 1
    2f0e:	08 0f       	add	r16, r24
    2f10:	40 2f       	mov	r20, r16
    2f12:	50 e0       	ldi	r21, 0x00	; 0
    2f14:	8d 81       	ldd	r24, Y+5	; 0x05
    2f16:	28 2f       	mov	r18, r24
    2f18:	30 e0       	ldi	r19, 0x00	; 0
    2f1a:	c9 01       	movw	r24, r18
    2f1c:	88 0f       	add	r24, r24
    2f1e:	99 1f       	adc	r25, r25
    2f20:	88 0f       	add	r24, r24
    2f22:	99 1f       	adc	r25, r25
    2f24:	88 0f       	add	r24, r24
    2f26:	99 1f       	adc	r25, r25
    2f28:	82 1b       	sub	r24, r18
    2f2a:	93 0b       	sbc	r25, r19
    2f2c:	48 17       	cp	r20, r24
    2f2e:	59 07       	cpc	r21, r25
    2f30:	0c f4       	brge	.+2      	; 0x2f34 <nokia_lcd_write_char+0xde>
    2f32:	a0 cf       	rjmp	.-192    	; 0x2e74 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    2f34:	81 2f       	mov	r24, r17
    2f36:	11 e0       	ldi	r17, 0x01	; 1
    2f38:	18 0f       	add	r17, r24
    2f3a:	41 2f       	mov	r20, r17
    2f3c:	50 e0       	ldi	r21, 0x00	; 0
    2f3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2f40:	28 2f       	mov	r18, r24
    2f42:	30 e0       	ldi	r19, 0x00	; 0
    2f44:	c9 01       	movw	r24, r18
    2f46:	88 0f       	add	r24, r24
    2f48:	99 1f       	adc	r25, r25
    2f4a:	88 0f       	add	r24, r24
    2f4c:	99 1f       	adc	r25, r25
    2f4e:	82 0f       	add	r24, r18
    2f50:	93 1f       	adc	r25, r19
    2f52:	48 17       	cp	r20, r24
    2f54:	59 07       	cpc	r21, r25
    2f56:	0c f4       	brge	.+2      	; 0x2f5a <nokia_lcd_write_char+0x104>
    2f58:	8b cf       	rjmp	.-234    	; 0x2e70 <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    2f5a:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <nokia_lcd+0x1f8>
    2f5e:	9d 81       	ldd	r25, Y+5	; 0x05
    2f60:	89 2f       	mov	r24, r25
    2f62:	88 0f       	add	r24, r24
    2f64:	88 0f       	add	r24, r24
    2f66:	89 0f       	add	r24, r25
    2f68:	82 0f       	add	r24, r18
    2f6a:	8f 5f       	subi	r24, 0xFF	; 255
    2f6c:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
    2f70:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <nokia_lcd+0x1f8>
    2f74:	84 35       	cpi	r24, 0x54	; 84
    2f76:	70 f0       	brcs	.+28     	; 0x2f94 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
    2f78:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    2f7c:	20 91 20 04 	lds	r18, 0x0420	; 0x800420 <nokia_lcd+0x1f9>
    2f80:	9d 81       	ldd	r25, Y+5	; 0x05
    2f82:	89 2f       	mov	r24, r25
    2f84:	88 0f       	add	r24, r24
    2f86:	88 0f       	add	r24, r24
    2f88:	88 0f       	add	r24, r24
    2f8a:	89 1b       	sub	r24, r25
    2f8c:	82 0f       	add	r24, r18
    2f8e:	8f 5f       	subi	r24, 0xFF	; 255
    2f90:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
    2f94:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <nokia_lcd+0x1f9>
    2f98:	80 33       	cpi	r24, 0x30	; 48
    2f9a:	20 f0       	brcs	.+8      	; 0x2fa4 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
    2f9c:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    2fa0:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <nokia_lcd+0x1f9>
	}
}
    2fa4:	00 00       	nop
    2fa6:	0f 90       	pop	r0
    2fa8:	0f 90       	pop	r0
    2faa:	0f 90       	pop	r0
    2fac:	0f 90       	pop	r0
    2fae:	0f 90       	pop	r0
    2fb0:	df 91       	pop	r29
    2fb2:	cf 91       	pop	r28
    2fb4:	1f 91       	pop	r17
    2fb6:	0f 91       	pop	r16
    2fb8:	08 95       	ret

00002fba <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    2fba:	cf 93       	push	r28
    2fbc:	df 93       	push	r29
    2fbe:	00 d0       	rcall	.+0      	; 0x2fc0 <nokia_lcd_write_string+0x6>
    2fc0:	1f 92       	push	r1
    2fc2:	cd b7       	in	r28, 0x3d	; 61
    2fc4:	de b7       	in	r29, 0x3e	; 62
    2fc6:	9a 83       	std	Y+2, r25	; 0x02
    2fc8:	89 83       	std	Y+1, r24	; 0x01
    2fca:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
    2fcc:	0c c0       	rjmp	.+24     	; 0x2fe6 <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
    2fce:	89 81       	ldd	r24, Y+1	; 0x01
    2fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd2:	9c 01       	movw	r18, r24
    2fd4:	2f 5f       	subi	r18, 0xFF	; 255
    2fd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2fd8:	3a 83       	std	Y+2, r19	; 0x02
    2fda:	29 83       	std	Y+1, r18	; 0x01
    2fdc:	fc 01       	movw	r30, r24
    2fde:	80 81       	ld	r24, Z
    2fe0:	6b 81       	ldd	r22, Y+3	; 0x03
    2fe2:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    2fe6:	89 81       	ldd	r24, Y+1	; 0x01
    2fe8:	9a 81       	ldd	r25, Y+2	; 0x02
    2fea:	fc 01       	movw	r30, r24
    2fec:	80 81       	ld	r24, Z
    2fee:	88 23       	and	r24, r24
    2ff0:	71 f7       	brne	.-36     	; 0x2fce <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
    2ff2:	00 00       	nop
    2ff4:	0f 90       	pop	r0
    2ff6:	0f 90       	pop	r0
    2ff8:	0f 90       	pop	r0
    2ffa:	df 91       	pop	r29
    2ffc:	cf 91       	pop	r28
    2ffe:	08 95       	ret

00003000 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    3000:	cf 93       	push	r28
    3002:	df 93       	push	r29
    3004:	00 d0       	rcall	.+0      	; 0x3006 <nokia_lcd_set_cursor+0x6>
    3006:	cd b7       	in	r28, 0x3d	; 61
    3008:	de b7       	in	r29, 0x3e	; 62
    300a:	89 83       	std	Y+1, r24	; 0x01
    300c:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
    300e:	89 81       	ldd	r24, Y+1	; 0x01
    3010:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    3014:	8a 81       	ldd	r24, Y+2	; 0x02
    3016:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <nokia_lcd+0x1f9>
}
    301a:	00 00       	nop
    301c:	0f 90       	pop	r0
    301e:	0f 90       	pop	r0
    3020:	df 91       	pop	r29
    3022:	cf 91       	pop	r28
    3024:	08 95       	ret

00003026 <nokia_lcd_render>:

void nokia_lcd_render(void)
{
    3026:	0f 93       	push	r16
    3028:	1f 93       	push	r17
    302a:	cf 93       	push	r28
    302c:	df 93       	push	r29
    302e:	cd b7       	in	r28, 0x3d	; 61
    3030:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    3032:	80 e8       	ldi	r24, 0x80	; 128
    3034:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>
	write_cmd(0x40);
    3038:	80 e4       	ldi	r24, 0x40	; 64
    303a:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    303e:	00 e0       	ldi	r16, 0x00	; 0
    3040:	10 e0       	ldi	r17, 0x00	; 0
    3042:	09 c0       	rjmp	.+18     	; 0x3056 <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
    3044:	c8 01       	movw	r24, r16
    3046:	89 5d       	subi	r24, 0xD9	; 217
    3048:	9d 4f       	sbci	r25, 0xFD	; 253
    304a:	fc 01       	movw	r30, r24
    304c:	80 81       	ld	r24, Z
    304e:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    3052:	0f 5f       	subi	r16, 0xFF	; 255
    3054:	1f 4f       	sbci	r17, 0xFF	; 255
    3056:	08 3f       	cpi	r16, 0xF8	; 248
    3058:	f1 e0       	ldi	r31, 0x01	; 1
    305a:	1f 07       	cpc	r17, r31
    305c:	98 f3       	brcs	.-26     	; 0x3044 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
    305e:	00 00       	nop
    3060:	df 91       	pop	r29
    3062:	cf 91       	pop	r28
    3064:	1f 91       	pop	r17
    3066:	0f 91       	pop	r16
    3068:	08 95       	ret

0000306a <__subsf3>:
    306a:	50 58       	subi	r21, 0x80	; 128

0000306c <__addsf3>:
    306c:	bb 27       	eor	r27, r27
    306e:	aa 27       	eor	r26, r26
    3070:	0e 94 4d 18 	call	0x309a	; 0x309a <__addsf3x>
    3074:	0c 94 1b 1a 	jmp	0x3436	; 0x3436 <__fp_round>
    3078:	0e 94 0d 1a 	call	0x341a	; 0x341a <__fp_pscA>
    307c:	38 f0       	brcs	.+14     	; 0x308c <__addsf3+0x20>
    307e:	0e 94 14 1a 	call	0x3428	; 0x3428 <__fp_pscB>
    3082:	20 f0       	brcs	.+8      	; 0x308c <__addsf3+0x20>
    3084:	39 f4       	brne	.+14     	; 0x3094 <__addsf3+0x28>
    3086:	9f 3f       	cpi	r25, 0xFF	; 255
    3088:	19 f4       	brne	.+6      	; 0x3090 <__addsf3+0x24>
    308a:	26 f4       	brtc	.+8      	; 0x3094 <__addsf3+0x28>
    308c:	0c 94 fa 19 	jmp	0x33f4	; 0x33f4 <__fp_nan>
    3090:	0e f4       	brtc	.+2      	; 0x3094 <__addsf3+0x28>
    3092:	e0 95       	com	r30
    3094:	e7 fb       	bst	r30, 7
    3096:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__fp_inf>

0000309a <__addsf3x>:
    309a:	e9 2f       	mov	r30, r25
    309c:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__fp_split3>
    30a0:	58 f3       	brcs	.-42     	; 0x3078 <__addsf3+0xc>
    30a2:	ba 17       	cp	r27, r26
    30a4:	62 07       	cpc	r22, r18
    30a6:	73 07       	cpc	r23, r19
    30a8:	84 07       	cpc	r24, r20
    30aa:	95 07       	cpc	r25, r21
    30ac:	20 f0       	brcs	.+8      	; 0x30b6 <__addsf3x+0x1c>
    30ae:	79 f4       	brne	.+30     	; 0x30ce <__addsf3x+0x34>
    30b0:	a6 f5       	brtc	.+104    	; 0x311a <__addsf3x+0x80>
    30b2:	0c 94 4e 1a 	jmp	0x349c	; 0x349c <__fp_zero>
    30b6:	0e f4       	brtc	.+2      	; 0x30ba <__addsf3x+0x20>
    30b8:	e0 95       	com	r30
    30ba:	0b 2e       	mov	r0, r27
    30bc:	ba 2f       	mov	r27, r26
    30be:	a0 2d       	mov	r26, r0
    30c0:	0b 01       	movw	r0, r22
    30c2:	b9 01       	movw	r22, r18
    30c4:	90 01       	movw	r18, r0
    30c6:	0c 01       	movw	r0, r24
    30c8:	ca 01       	movw	r24, r20
    30ca:	a0 01       	movw	r20, r0
    30cc:	11 24       	eor	r1, r1
    30ce:	ff 27       	eor	r31, r31
    30d0:	59 1b       	sub	r21, r25
    30d2:	99 f0       	breq	.+38     	; 0x30fa <__addsf3x+0x60>
    30d4:	59 3f       	cpi	r21, 0xF9	; 249
    30d6:	50 f4       	brcc	.+20     	; 0x30ec <__addsf3x+0x52>
    30d8:	50 3e       	cpi	r21, 0xE0	; 224
    30da:	68 f1       	brcs	.+90     	; 0x3136 <__addsf3x+0x9c>
    30dc:	1a 16       	cp	r1, r26
    30de:	f0 40       	sbci	r31, 0x00	; 0
    30e0:	a2 2f       	mov	r26, r18
    30e2:	23 2f       	mov	r18, r19
    30e4:	34 2f       	mov	r19, r20
    30e6:	44 27       	eor	r20, r20
    30e8:	58 5f       	subi	r21, 0xF8	; 248
    30ea:	f3 cf       	rjmp	.-26     	; 0x30d2 <__addsf3x+0x38>
    30ec:	46 95       	lsr	r20
    30ee:	37 95       	ror	r19
    30f0:	27 95       	ror	r18
    30f2:	a7 95       	ror	r26
    30f4:	f0 40       	sbci	r31, 0x00	; 0
    30f6:	53 95       	inc	r21
    30f8:	c9 f7       	brne	.-14     	; 0x30ec <__addsf3x+0x52>
    30fa:	7e f4       	brtc	.+30     	; 0x311a <__addsf3x+0x80>
    30fc:	1f 16       	cp	r1, r31
    30fe:	ba 0b       	sbc	r27, r26
    3100:	62 0b       	sbc	r22, r18
    3102:	73 0b       	sbc	r23, r19
    3104:	84 0b       	sbc	r24, r20
    3106:	ba f0       	brmi	.+46     	; 0x3136 <__addsf3x+0x9c>
    3108:	91 50       	subi	r25, 0x01	; 1
    310a:	a1 f0       	breq	.+40     	; 0x3134 <__addsf3x+0x9a>
    310c:	ff 0f       	add	r31, r31
    310e:	bb 1f       	adc	r27, r27
    3110:	66 1f       	adc	r22, r22
    3112:	77 1f       	adc	r23, r23
    3114:	88 1f       	adc	r24, r24
    3116:	c2 f7       	brpl	.-16     	; 0x3108 <__addsf3x+0x6e>
    3118:	0e c0       	rjmp	.+28     	; 0x3136 <__addsf3x+0x9c>
    311a:	ba 0f       	add	r27, r26
    311c:	62 1f       	adc	r22, r18
    311e:	73 1f       	adc	r23, r19
    3120:	84 1f       	adc	r24, r20
    3122:	48 f4       	brcc	.+18     	; 0x3136 <__addsf3x+0x9c>
    3124:	87 95       	ror	r24
    3126:	77 95       	ror	r23
    3128:	67 95       	ror	r22
    312a:	b7 95       	ror	r27
    312c:	f7 95       	ror	r31
    312e:	9e 3f       	cpi	r25, 0xFE	; 254
    3130:	08 f0       	brcs	.+2      	; 0x3134 <__addsf3x+0x9a>
    3132:	b0 cf       	rjmp	.-160    	; 0x3094 <__addsf3+0x28>
    3134:	93 95       	inc	r25
    3136:	88 0f       	add	r24, r24
    3138:	08 f0       	brcs	.+2      	; 0x313c <__addsf3x+0xa2>
    313a:	99 27       	eor	r25, r25
    313c:	ee 0f       	add	r30, r30
    313e:	97 95       	ror	r25
    3140:	87 95       	ror	r24
    3142:	08 95       	ret

00003144 <__cmpsf2>:
    3144:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <__fp_cmp>
    3148:	08 f4       	brcc	.+2      	; 0x314c <__cmpsf2+0x8>
    314a:	81 e0       	ldi	r24, 0x01	; 1
    314c:	08 95       	ret

0000314e <__divsf3>:
    314e:	0e 94 bb 18 	call	0x3176	; 0x3176 <__divsf3x>
    3152:	0c 94 1b 1a 	jmp	0x3436	; 0x3436 <__fp_round>
    3156:	0e 94 14 1a 	call	0x3428	; 0x3428 <__fp_pscB>
    315a:	58 f0       	brcs	.+22     	; 0x3172 <__divsf3+0x24>
    315c:	0e 94 0d 1a 	call	0x341a	; 0x341a <__fp_pscA>
    3160:	40 f0       	brcs	.+16     	; 0x3172 <__divsf3+0x24>
    3162:	29 f4       	brne	.+10     	; 0x316e <__divsf3+0x20>
    3164:	5f 3f       	cpi	r21, 0xFF	; 255
    3166:	29 f0       	breq	.+10     	; 0x3172 <__divsf3+0x24>
    3168:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__fp_inf>
    316c:	51 11       	cpse	r21, r1
    316e:	0c 94 4f 1a 	jmp	0x349e	; 0x349e <__fp_szero>
    3172:	0c 94 fa 19 	jmp	0x33f4	; 0x33f4 <__fp_nan>

00003176 <__divsf3x>:
    3176:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__fp_split3>
    317a:	68 f3       	brcs	.-38     	; 0x3156 <__divsf3+0x8>

0000317c <__divsf3_pse>:
    317c:	99 23       	and	r25, r25
    317e:	b1 f3       	breq	.-20     	; 0x316c <__divsf3+0x1e>
    3180:	55 23       	and	r21, r21
    3182:	91 f3       	breq	.-28     	; 0x3168 <__divsf3+0x1a>
    3184:	95 1b       	sub	r25, r21
    3186:	55 0b       	sbc	r21, r21
    3188:	bb 27       	eor	r27, r27
    318a:	aa 27       	eor	r26, r26
    318c:	62 17       	cp	r22, r18
    318e:	73 07       	cpc	r23, r19
    3190:	84 07       	cpc	r24, r20
    3192:	38 f0       	brcs	.+14     	; 0x31a2 <__divsf3_pse+0x26>
    3194:	9f 5f       	subi	r25, 0xFF	; 255
    3196:	5f 4f       	sbci	r21, 0xFF	; 255
    3198:	22 0f       	add	r18, r18
    319a:	33 1f       	adc	r19, r19
    319c:	44 1f       	adc	r20, r20
    319e:	aa 1f       	adc	r26, r26
    31a0:	a9 f3       	breq	.-22     	; 0x318c <__divsf3_pse+0x10>
    31a2:	35 d0       	rcall	.+106    	; 0x320e <__divsf3_pse+0x92>
    31a4:	0e 2e       	mov	r0, r30
    31a6:	3a f0       	brmi	.+14     	; 0x31b6 <__divsf3_pse+0x3a>
    31a8:	e0 e8       	ldi	r30, 0x80	; 128
    31aa:	32 d0       	rcall	.+100    	; 0x3210 <__divsf3_pse+0x94>
    31ac:	91 50       	subi	r25, 0x01	; 1
    31ae:	50 40       	sbci	r21, 0x00	; 0
    31b0:	e6 95       	lsr	r30
    31b2:	00 1c       	adc	r0, r0
    31b4:	ca f7       	brpl	.-14     	; 0x31a8 <__divsf3_pse+0x2c>
    31b6:	2b d0       	rcall	.+86     	; 0x320e <__divsf3_pse+0x92>
    31b8:	fe 2f       	mov	r31, r30
    31ba:	29 d0       	rcall	.+82     	; 0x320e <__divsf3_pse+0x92>
    31bc:	66 0f       	add	r22, r22
    31be:	77 1f       	adc	r23, r23
    31c0:	88 1f       	adc	r24, r24
    31c2:	bb 1f       	adc	r27, r27
    31c4:	26 17       	cp	r18, r22
    31c6:	37 07       	cpc	r19, r23
    31c8:	48 07       	cpc	r20, r24
    31ca:	ab 07       	cpc	r26, r27
    31cc:	b0 e8       	ldi	r27, 0x80	; 128
    31ce:	09 f0       	breq	.+2      	; 0x31d2 <__divsf3_pse+0x56>
    31d0:	bb 0b       	sbc	r27, r27
    31d2:	80 2d       	mov	r24, r0
    31d4:	bf 01       	movw	r22, r30
    31d6:	ff 27       	eor	r31, r31
    31d8:	93 58       	subi	r25, 0x83	; 131
    31da:	5f 4f       	sbci	r21, 0xFF	; 255
    31dc:	3a f0       	brmi	.+14     	; 0x31ec <__divsf3_pse+0x70>
    31de:	9e 3f       	cpi	r25, 0xFE	; 254
    31e0:	51 05       	cpc	r21, r1
    31e2:	78 f0       	brcs	.+30     	; 0x3202 <__divsf3_pse+0x86>
    31e4:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__fp_inf>
    31e8:	0c 94 4f 1a 	jmp	0x349e	; 0x349e <__fp_szero>
    31ec:	5f 3f       	cpi	r21, 0xFF	; 255
    31ee:	e4 f3       	brlt	.-8      	; 0x31e8 <__divsf3_pse+0x6c>
    31f0:	98 3e       	cpi	r25, 0xE8	; 232
    31f2:	d4 f3       	brlt	.-12     	; 0x31e8 <__divsf3_pse+0x6c>
    31f4:	86 95       	lsr	r24
    31f6:	77 95       	ror	r23
    31f8:	67 95       	ror	r22
    31fa:	b7 95       	ror	r27
    31fc:	f7 95       	ror	r31
    31fe:	9f 5f       	subi	r25, 0xFF	; 255
    3200:	c9 f7       	brne	.-14     	; 0x31f4 <__divsf3_pse+0x78>
    3202:	88 0f       	add	r24, r24
    3204:	91 1d       	adc	r25, r1
    3206:	96 95       	lsr	r25
    3208:	87 95       	ror	r24
    320a:	97 f9       	bld	r25, 7
    320c:	08 95       	ret
    320e:	e1 e0       	ldi	r30, 0x01	; 1
    3210:	66 0f       	add	r22, r22
    3212:	77 1f       	adc	r23, r23
    3214:	88 1f       	adc	r24, r24
    3216:	bb 1f       	adc	r27, r27
    3218:	62 17       	cp	r22, r18
    321a:	73 07       	cpc	r23, r19
    321c:	84 07       	cpc	r24, r20
    321e:	ba 07       	cpc	r27, r26
    3220:	20 f0       	brcs	.+8      	; 0x322a <__divsf3_pse+0xae>
    3222:	62 1b       	sub	r22, r18
    3224:	73 0b       	sbc	r23, r19
    3226:	84 0b       	sbc	r24, r20
    3228:	ba 0b       	sbc	r27, r26
    322a:	ee 1f       	adc	r30, r30
    322c:	88 f7       	brcc	.-30     	; 0x3210 <__divsf3_pse+0x94>
    322e:	e0 95       	com	r30
    3230:	08 95       	ret

00003232 <__fixsfsi>:
    3232:	0e 94 20 19 	call	0x3240	; 0x3240 <__fixunssfsi>
    3236:	68 94       	set
    3238:	b1 11       	cpse	r27, r1
    323a:	0c 94 4f 1a 	jmp	0x349e	; 0x349e <__fp_szero>
    323e:	08 95       	ret

00003240 <__fixunssfsi>:
    3240:	0e 94 34 1a 	call	0x3468	; 0x3468 <__fp_splitA>
    3244:	88 f0       	brcs	.+34     	; 0x3268 <__fixunssfsi+0x28>
    3246:	9f 57       	subi	r25, 0x7F	; 127
    3248:	98 f0       	brcs	.+38     	; 0x3270 <__fixunssfsi+0x30>
    324a:	b9 2f       	mov	r27, r25
    324c:	99 27       	eor	r25, r25
    324e:	b7 51       	subi	r27, 0x17	; 23
    3250:	b0 f0       	brcs	.+44     	; 0x327e <__fixunssfsi+0x3e>
    3252:	e1 f0       	breq	.+56     	; 0x328c <__fixunssfsi+0x4c>
    3254:	66 0f       	add	r22, r22
    3256:	77 1f       	adc	r23, r23
    3258:	88 1f       	adc	r24, r24
    325a:	99 1f       	adc	r25, r25
    325c:	1a f0       	brmi	.+6      	; 0x3264 <__fixunssfsi+0x24>
    325e:	ba 95       	dec	r27
    3260:	c9 f7       	brne	.-14     	; 0x3254 <__fixunssfsi+0x14>
    3262:	14 c0       	rjmp	.+40     	; 0x328c <__fixunssfsi+0x4c>
    3264:	b1 30       	cpi	r27, 0x01	; 1
    3266:	91 f0       	breq	.+36     	; 0x328c <__fixunssfsi+0x4c>
    3268:	0e 94 4e 1a 	call	0x349c	; 0x349c <__fp_zero>
    326c:	b1 e0       	ldi	r27, 0x01	; 1
    326e:	08 95       	ret
    3270:	0c 94 4e 1a 	jmp	0x349c	; 0x349c <__fp_zero>
    3274:	67 2f       	mov	r22, r23
    3276:	78 2f       	mov	r23, r24
    3278:	88 27       	eor	r24, r24
    327a:	b8 5f       	subi	r27, 0xF8	; 248
    327c:	39 f0       	breq	.+14     	; 0x328c <__fixunssfsi+0x4c>
    327e:	b9 3f       	cpi	r27, 0xF9	; 249
    3280:	cc f3       	brlt	.-14     	; 0x3274 <__fixunssfsi+0x34>
    3282:	86 95       	lsr	r24
    3284:	77 95       	ror	r23
    3286:	67 95       	ror	r22
    3288:	b3 95       	inc	r27
    328a:	d9 f7       	brne	.-10     	; 0x3282 <__fixunssfsi+0x42>
    328c:	3e f4       	brtc	.+14     	; 0x329c <__fixunssfsi+0x5c>
    328e:	90 95       	com	r25
    3290:	80 95       	com	r24
    3292:	70 95       	com	r23
    3294:	61 95       	neg	r22
    3296:	7f 4f       	sbci	r23, 0xFF	; 255
    3298:	8f 4f       	sbci	r24, 0xFF	; 255
    329a:	9f 4f       	sbci	r25, 0xFF	; 255
    329c:	08 95       	ret

0000329e <__floatdisf>:
    329e:	97 fb       	bst	r25, 7
    32a0:	16 f4       	brtc	.+4      	; 0x32a6 <__floatdisf+0x8>
    32a2:	0e 94 fd 19 	call	0x33fa	; 0x33fa <__fp_negdi>
    32a6:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__fp_di2sf>

000032aa <__floatunsisf>:
    32aa:	e8 94       	clt
    32ac:	09 c0       	rjmp	.+18     	; 0x32c0 <__floatsisf+0x12>

000032ae <__floatsisf>:
    32ae:	97 fb       	bst	r25, 7
    32b0:	3e f4       	brtc	.+14     	; 0x32c0 <__floatsisf+0x12>
    32b2:	90 95       	com	r25
    32b4:	80 95       	com	r24
    32b6:	70 95       	com	r23
    32b8:	61 95       	neg	r22
    32ba:	7f 4f       	sbci	r23, 0xFF	; 255
    32bc:	8f 4f       	sbci	r24, 0xFF	; 255
    32be:	9f 4f       	sbci	r25, 0xFF	; 255
    32c0:	99 23       	and	r25, r25
    32c2:	a9 f0       	breq	.+42     	; 0x32ee <__floatsisf+0x40>
    32c4:	f9 2f       	mov	r31, r25
    32c6:	96 e9       	ldi	r25, 0x96	; 150
    32c8:	bb 27       	eor	r27, r27
    32ca:	93 95       	inc	r25
    32cc:	f6 95       	lsr	r31
    32ce:	87 95       	ror	r24
    32d0:	77 95       	ror	r23
    32d2:	67 95       	ror	r22
    32d4:	b7 95       	ror	r27
    32d6:	f1 11       	cpse	r31, r1
    32d8:	f8 cf       	rjmp	.-16     	; 0x32ca <__floatsisf+0x1c>
    32da:	fa f4       	brpl	.+62     	; 0x331a <__floatsisf+0x6c>
    32dc:	bb 0f       	add	r27, r27
    32de:	11 f4       	brne	.+4      	; 0x32e4 <__floatsisf+0x36>
    32e0:	60 ff       	sbrs	r22, 0
    32e2:	1b c0       	rjmp	.+54     	; 0x331a <__floatsisf+0x6c>
    32e4:	6f 5f       	subi	r22, 0xFF	; 255
    32e6:	7f 4f       	sbci	r23, 0xFF	; 255
    32e8:	8f 4f       	sbci	r24, 0xFF	; 255
    32ea:	9f 4f       	sbci	r25, 0xFF	; 255
    32ec:	16 c0       	rjmp	.+44     	; 0x331a <__floatsisf+0x6c>
    32ee:	88 23       	and	r24, r24
    32f0:	11 f0       	breq	.+4      	; 0x32f6 <__floatsisf+0x48>
    32f2:	96 e9       	ldi	r25, 0x96	; 150
    32f4:	11 c0       	rjmp	.+34     	; 0x3318 <__floatsisf+0x6a>
    32f6:	77 23       	and	r23, r23
    32f8:	21 f0       	breq	.+8      	; 0x3302 <__floatsisf+0x54>
    32fa:	9e e8       	ldi	r25, 0x8E	; 142
    32fc:	87 2f       	mov	r24, r23
    32fe:	76 2f       	mov	r23, r22
    3300:	05 c0       	rjmp	.+10     	; 0x330c <__floatsisf+0x5e>
    3302:	66 23       	and	r22, r22
    3304:	71 f0       	breq	.+28     	; 0x3322 <__floatsisf+0x74>
    3306:	96 e8       	ldi	r25, 0x86	; 134
    3308:	86 2f       	mov	r24, r22
    330a:	70 e0       	ldi	r23, 0x00	; 0
    330c:	60 e0       	ldi	r22, 0x00	; 0
    330e:	2a f0       	brmi	.+10     	; 0x331a <__floatsisf+0x6c>
    3310:	9a 95       	dec	r25
    3312:	66 0f       	add	r22, r22
    3314:	77 1f       	adc	r23, r23
    3316:	88 1f       	adc	r24, r24
    3318:	da f7       	brpl	.-10     	; 0x3310 <__floatsisf+0x62>
    331a:	88 0f       	add	r24, r24
    331c:	96 95       	lsr	r25
    331e:	87 95       	ror	r24
    3320:	97 f9       	bld	r25, 7
    3322:	08 95       	ret

00003324 <__floatundisf>:
    3324:	e8 94       	clt

00003326 <__fp_di2sf>:
    3326:	f9 2f       	mov	r31, r25
    3328:	96 eb       	ldi	r25, 0xB6	; 182
    332a:	ff 23       	and	r31, r31
    332c:	81 f0       	breq	.+32     	; 0x334e <__fp_di2sf+0x28>
    332e:	12 16       	cp	r1, r18
    3330:	13 06       	cpc	r1, r19
    3332:	14 06       	cpc	r1, r20
    3334:	44 0b       	sbc	r20, r20
    3336:	93 95       	inc	r25
    3338:	f6 95       	lsr	r31
    333a:	87 95       	ror	r24
    333c:	77 95       	ror	r23
    333e:	67 95       	ror	r22
    3340:	57 95       	ror	r21
    3342:	40 40       	sbci	r20, 0x00	; 0
    3344:	ff 23       	and	r31, r31
    3346:	b9 f7       	brne	.-18     	; 0x3336 <__fp_di2sf+0x10>
    3348:	1b c0       	rjmp	.+54     	; 0x3380 <__fp_di2sf+0x5a>
    334a:	99 27       	eor	r25, r25
    334c:	08 95       	ret
    334e:	88 23       	and	r24, r24
    3350:	51 f4       	brne	.+20     	; 0x3366 <__fp_di2sf+0x40>
    3352:	98 50       	subi	r25, 0x08	; 8
    3354:	d2 f7       	brpl	.-12     	; 0x334a <__fp_di2sf+0x24>
    3356:	87 2b       	or	r24, r23
    3358:	76 2f       	mov	r23, r22
    335a:	65 2f       	mov	r22, r21
    335c:	54 2f       	mov	r21, r20
    335e:	43 2f       	mov	r20, r19
    3360:	32 2f       	mov	r19, r18
    3362:	20 e0       	ldi	r18, 0x00	; 0
    3364:	b1 f3       	breq	.-20     	; 0x3352 <__fp_di2sf+0x2c>
    3366:	12 16       	cp	r1, r18
    3368:	13 06       	cpc	r1, r19
    336a:	14 06       	cpc	r1, r20
    336c:	44 0b       	sbc	r20, r20
    336e:	88 23       	and	r24, r24
    3370:	3a f0       	brmi	.+14     	; 0x3380 <__fp_di2sf+0x5a>
    3372:	9a 95       	dec	r25
    3374:	44 0f       	add	r20, r20
    3376:	55 1f       	adc	r21, r21
    3378:	66 1f       	adc	r22, r22
    337a:	77 1f       	adc	r23, r23
    337c:	88 1f       	adc	r24, r24
    337e:	ca f7       	brpl	.-14     	; 0x3372 <__fp_di2sf+0x4c>
    3380:	55 23       	and	r21, r21
    3382:	4a f4       	brpl	.+18     	; 0x3396 <__fp_di2sf+0x70>
    3384:	44 0f       	add	r20, r20
    3386:	55 1f       	adc	r21, r21
    3388:	11 f4       	brne	.+4      	; 0x338e <__fp_di2sf+0x68>
    338a:	60 ff       	sbrs	r22, 0
    338c:	04 c0       	rjmp	.+8      	; 0x3396 <__fp_di2sf+0x70>
    338e:	6f 5f       	subi	r22, 0xFF	; 255
    3390:	7f 4f       	sbci	r23, 0xFF	; 255
    3392:	8f 4f       	sbci	r24, 0xFF	; 255
    3394:	9f 4f       	sbci	r25, 0xFF	; 255
    3396:	88 0f       	add	r24, r24
    3398:	96 95       	lsr	r25
    339a:	87 95       	ror	r24
    339c:	97 f9       	bld	r25, 7
    339e:	08 95       	ret

000033a0 <__fp_cmp>:
    33a0:	99 0f       	add	r25, r25
    33a2:	00 08       	sbc	r0, r0
    33a4:	55 0f       	add	r21, r21
    33a6:	aa 0b       	sbc	r26, r26
    33a8:	e0 e8       	ldi	r30, 0x80	; 128
    33aa:	fe ef       	ldi	r31, 0xFE	; 254
    33ac:	16 16       	cp	r1, r22
    33ae:	17 06       	cpc	r1, r23
    33b0:	e8 07       	cpc	r30, r24
    33b2:	f9 07       	cpc	r31, r25
    33b4:	c0 f0       	brcs	.+48     	; 0x33e6 <__fp_cmp+0x46>
    33b6:	12 16       	cp	r1, r18
    33b8:	13 06       	cpc	r1, r19
    33ba:	e4 07       	cpc	r30, r20
    33bc:	f5 07       	cpc	r31, r21
    33be:	98 f0       	brcs	.+38     	; 0x33e6 <__fp_cmp+0x46>
    33c0:	62 1b       	sub	r22, r18
    33c2:	73 0b       	sbc	r23, r19
    33c4:	84 0b       	sbc	r24, r20
    33c6:	95 0b       	sbc	r25, r21
    33c8:	39 f4       	brne	.+14     	; 0x33d8 <__fp_cmp+0x38>
    33ca:	0a 26       	eor	r0, r26
    33cc:	61 f0       	breq	.+24     	; 0x33e6 <__fp_cmp+0x46>
    33ce:	23 2b       	or	r18, r19
    33d0:	24 2b       	or	r18, r20
    33d2:	25 2b       	or	r18, r21
    33d4:	21 f4       	brne	.+8      	; 0x33de <__fp_cmp+0x3e>
    33d6:	08 95       	ret
    33d8:	0a 26       	eor	r0, r26
    33da:	09 f4       	brne	.+2      	; 0x33de <__fp_cmp+0x3e>
    33dc:	a1 40       	sbci	r26, 0x01	; 1
    33de:	a6 95       	lsr	r26
    33e0:	8f ef       	ldi	r24, 0xFF	; 255
    33e2:	81 1d       	adc	r24, r1
    33e4:	81 1d       	adc	r24, r1
    33e6:	08 95       	ret

000033e8 <__fp_inf>:
    33e8:	97 f9       	bld	r25, 7
    33ea:	9f 67       	ori	r25, 0x7F	; 127
    33ec:	80 e8       	ldi	r24, 0x80	; 128
    33ee:	70 e0       	ldi	r23, 0x00	; 0
    33f0:	60 e0       	ldi	r22, 0x00	; 0
    33f2:	08 95       	ret

000033f4 <__fp_nan>:
    33f4:	9f ef       	ldi	r25, 0xFF	; 255
    33f6:	80 ec       	ldi	r24, 0xC0	; 192
    33f8:	08 95       	ret

000033fa <__fp_negdi>:
    33fa:	90 95       	com	r25
    33fc:	80 95       	com	r24
    33fe:	70 95       	com	r23
    3400:	60 95       	com	r22
    3402:	50 95       	com	r21
    3404:	40 95       	com	r20
    3406:	30 95       	com	r19
    3408:	21 95       	neg	r18
    340a:	3f 4f       	sbci	r19, 0xFF	; 255
    340c:	4f 4f       	sbci	r20, 0xFF	; 255
    340e:	5f 4f       	sbci	r21, 0xFF	; 255
    3410:	6f 4f       	sbci	r22, 0xFF	; 255
    3412:	7f 4f       	sbci	r23, 0xFF	; 255
    3414:	8f 4f       	sbci	r24, 0xFF	; 255
    3416:	9f 4f       	sbci	r25, 0xFF	; 255
    3418:	08 95       	ret

0000341a <__fp_pscA>:
    341a:	00 24       	eor	r0, r0
    341c:	0a 94       	dec	r0
    341e:	16 16       	cp	r1, r22
    3420:	17 06       	cpc	r1, r23
    3422:	18 06       	cpc	r1, r24
    3424:	09 06       	cpc	r0, r25
    3426:	08 95       	ret

00003428 <__fp_pscB>:
    3428:	00 24       	eor	r0, r0
    342a:	0a 94       	dec	r0
    342c:	12 16       	cp	r1, r18
    342e:	13 06       	cpc	r1, r19
    3430:	14 06       	cpc	r1, r20
    3432:	05 06       	cpc	r0, r21
    3434:	08 95       	ret

00003436 <__fp_round>:
    3436:	09 2e       	mov	r0, r25
    3438:	03 94       	inc	r0
    343a:	00 0c       	add	r0, r0
    343c:	11 f4       	brne	.+4      	; 0x3442 <__fp_round+0xc>
    343e:	88 23       	and	r24, r24
    3440:	52 f0       	brmi	.+20     	; 0x3456 <__fp_round+0x20>
    3442:	bb 0f       	add	r27, r27
    3444:	40 f4       	brcc	.+16     	; 0x3456 <__fp_round+0x20>
    3446:	bf 2b       	or	r27, r31
    3448:	11 f4       	brne	.+4      	; 0x344e <__fp_round+0x18>
    344a:	60 ff       	sbrs	r22, 0
    344c:	04 c0       	rjmp	.+8      	; 0x3456 <__fp_round+0x20>
    344e:	6f 5f       	subi	r22, 0xFF	; 255
    3450:	7f 4f       	sbci	r23, 0xFF	; 255
    3452:	8f 4f       	sbci	r24, 0xFF	; 255
    3454:	9f 4f       	sbci	r25, 0xFF	; 255
    3456:	08 95       	ret

00003458 <__fp_split3>:
    3458:	57 fd       	sbrc	r21, 7
    345a:	90 58       	subi	r25, 0x80	; 128
    345c:	44 0f       	add	r20, r20
    345e:	55 1f       	adc	r21, r21
    3460:	59 f0       	breq	.+22     	; 0x3478 <__fp_splitA+0x10>
    3462:	5f 3f       	cpi	r21, 0xFF	; 255
    3464:	71 f0       	breq	.+28     	; 0x3482 <__fp_splitA+0x1a>
    3466:	47 95       	ror	r20

00003468 <__fp_splitA>:
    3468:	88 0f       	add	r24, r24
    346a:	97 fb       	bst	r25, 7
    346c:	99 1f       	adc	r25, r25
    346e:	61 f0       	breq	.+24     	; 0x3488 <__fp_splitA+0x20>
    3470:	9f 3f       	cpi	r25, 0xFF	; 255
    3472:	79 f0       	breq	.+30     	; 0x3492 <__fp_splitA+0x2a>
    3474:	87 95       	ror	r24
    3476:	08 95       	ret
    3478:	12 16       	cp	r1, r18
    347a:	13 06       	cpc	r1, r19
    347c:	14 06       	cpc	r1, r20
    347e:	55 1f       	adc	r21, r21
    3480:	f2 cf       	rjmp	.-28     	; 0x3466 <__fp_split3+0xe>
    3482:	46 95       	lsr	r20
    3484:	f1 df       	rcall	.-30     	; 0x3468 <__fp_splitA>
    3486:	08 c0       	rjmp	.+16     	; 0x3498 <__fp_splitA+0x30>
    3488:	16 16       	cp	r1, r22
    348a:	17 06       	cpc	r1, r23
    348c:	18 06       	cpc	r1, r24
    348e:	99 1f       	adc	r25, r25
    3490:	f1 cf       	rjmp	.-30     	; 0x3474 <__fp_splitA+0xc>
    3492:	86 95       	lsr	r24
    3494:	71 05       	cpc	r23, r1
    3496:	61 05       	cpc	r22, r1
    3498:	08 94       	sec
    349a:	08 95       	ret

0000349c <__fp_zero>:
    349c:	e8 94       	clt

0000349e <__fp_szero>:
    349e:	bb 27       	eor	r27, r27
    34a0:	66 27       	eor	r22, r22
    34a2:	77 27       	eor	r23, r23
    34a4:	cb 01       	movw	r24, r22
    34a6:	97 f9       	bld	r25, 7
    34a8:	08 95       	ret

000034aa <__gesf2>:
    34aa:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <__fp_cmp>
    34ae:	08 f4       	brcc	.+2      	; 0x34b2 <__gesf2+0x8>
    34b0:	8f ef       	ldi	r24, 0xFF	; 255
    34b2:	08 95       	ret

000034b4 <__mulsf3>:
    34b4:	0e 94 6d 1a 	call	0x34da	; 0x34da <__mulsf3x>
    34b8:	0c 94 1b 1a 	jmp	0x3436	; 0x3436 <__fp_round>
    34bc:	0e 94 0d 1a 	call	0x341a	; 0x341a <__fp_pscA>
    34c0:	38 f0       	brcs	.+14     	; 0x34d0 <__mulsf3+0x1c>
    34c2:	0e 94 14 1a 	call	0x3428	; 0x3428 <__fp_pscB>
    34c6:	20 f0       	brcs	.+8      	; 0x34d0 <__mulsf3+0x1c>
    34c8:	95 23       	and	r25, r21
    34ca:	11 f0       	breq	.+4      	; 0x34d0 <__mulsf3+0x1c>
    34cc:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__fp_inf>
    34d0:	0c 94 fa 19 	jmp	0x33f4	; 0x33f4 <__fp_nan>
    34d4:	11 24       	eor	r1, r1
    34d6:	0c 94 4f 1a 	jmp	0x349e	; 0x349e <__fp_szero>

000034da <__mulsf3x>:
    34da:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__fp_split3>
    34de:	70 f3       	brcs	.-36     	; 0x34bc <__mulsf3+0x8>

000034e0 <__mulsf3_pse>:
    34e0:	95 9f       	mul	r25, r21
    34e2:	c1 f3       	breq	.-16     	; 0x34d4 <__mulsf3+0x20>
    34e4:	95 0f       	add	r25, r21
    34e6:	50 e0       	ldi	r21, 0x00	; 0
    34e8:	55 1f       	adc	r21, r21
    34ea:	62 9f       	mul	r22, r18
    34ec:	f0 01       	movw	r30, r0
    34ee:	72 9f       	mul	r23, r18
    34f0:	bb 27       	eor	r27, r27
    34f2:	f0 0d       	add	r31, r0
    34f4:	b1 1d       	adc	r27, r1
    34f6:	63 9f       	mul	r22, r19
    34f8:	aa 27       	eor	r26, r26
    34fa:	f0 0d       	add	r31, r0
    34fc:	b1 1d       	adc	r27, r1
    34fe:	aa 1f       	adc	r26, r26
    3500:	64 9f       	mul	r22, r20
    3502:	66 27       	eor	r22, r22
    3504:	b0 0d       	add	r27, r0
    3506:	a1 1d       	adc	r26, r1
    3508:	66 1f       	adc	r22, r22
    350a:	82 9f       	mul	r24, r18
    350c:	22 27       	eor	r18, r18
    350e:	b0 0d       	add	r27, r0
    3510:	a1 1d       	adc	r26, r1
    3512:	62 1f       	adc	r22, r18
    3514:	73 9f       	mul	r23, r19
    3516:	b0 0d       	add	r27, r0
    3518:	a1 1d       	adc	r26, r1
    351a:	62 1f       	adc	r22, r18
    351c:	83 9f       	mul	r24, r19
    351e:	a0 0d       	add	r26, r0
    3520:	61 1d       	adc	r22, r1
    3522:	22 1f       	adc	r18, r18
    3524:	74 9f       	mul	r23, r20
    3526:	33 27       	eor	r19, r19
    3528:	a0 0d       	add	r26, r0
    352a:	61 1d       	adc	r22, r1
    352c:	23 1f       	adc	r18, r19
    352e:	84 9f       	mul	r24, r20
    3530:	60 0d       	add	r22, r0
    3532:	21 1d       	adc	r18, r1
    3534:	82 2f       	mov	r24, r18
    3536:	76 2f       	mov	r23, r22
    3538:	6a 2f       	mov	r22, r26
    353a:	11 24       	eor	r1, r1
    353c:	9f 57       	subi	r25, 0x7F	; 127
    353e:	50 40       	sbci	r21, 0x00	; 0
    3540:	9a f0       	brmi	.+38     	; 0x3568 <__mulsf3_pse+0x88>
    3542:	f1 f0       	breq	.+60     	; 0x3580 <__mulsf3_pse+0xa0>
    3544:	88 23       	and	r24, r24
    3546:	4a f0       	brmi	.+18     	; 0x355a <__mulsf3_pse+0x7a>
    3548:	ee 0f       	add	r30, r30
    354a:	ff 1f       	adc	r31, r31
    354c:	bb 1f       	adc	r27, r27
    354e:	66 1f       	adc	r22, r22
    3550:	77 1f       	adc	r23, r23
    3552:	88 1f       	adc	r24, r24
    3554:	91 50       	subi	r25, 0x01	; 1
    3556:	50 40       	sbci	r21, 0x00	; 0
    3558:	a9 f7       	brne	.-22     	; 0x3544 <__mulsf3_pse+0x64>
    355a:	9e 3f       	cpi	r25, 0xFE	; 254
    355c:	51 05       	cpc	r21, r1
    355e:	80 f0       	brcs	.+32     	; 0x3580 <__mulsf3_pse+0xa0>
    3560:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <__fp_inf>
    3564:	0c 94 4f 1a 	jmp	0x349e	; 0x349e <__fp_szero>
    3568:	5f 3f       	cpi	r21, 0xFF	; 255
    356a:	e4 f3       	brlt	.-8      	; 0x3564 <__mulsf3_pse+0x84>
    356c:	98 3e       	cpi	r25, 0xE8	; 232
    356e:	d4 f3       	brlt	.-12     	; 0x3564 <__mulsf3_pse+0x84>
    3570:	86 95       	lsr	r24
    3572:	77 95       	ror	r23
    3574:	67 95       	ror	r22
    3576:	b7 95       	ror	r27
    3578:	f7 95       	ror	r31
    357a:	e7 95       	ror	r30
    357c:	9f 5f       	subi	r25, 0xFF	; 255
    357e:	c1 f7       	brne	.-16     	; 0x3570 <__mulsf3_pse+0x90>
    3580:	fe 2b       	or	r31, r30
    3582:	88 0f       	add	r24, r24
    3584:	91 1d       	adc	r25, r1
    3586:	96 95       	lsr	r25
    3588:	87 95       	ror	r24
    358a:	97 f9       	bld	r25, 7
    358c:	08 95       	ret

0000358e <__udivmodqi4>:
    358e:	99 1b       	sub	r25, r25
    3590:	79 e0       	ldi	r23, 0x09	; 9
    3592:	04 c0       	rjmp	.+8      	; 0x359c <__udivmodqi4_ep>

00003594 <__udivmodqi4_loop>:
    3594:	99 1f       	adc	r25, r25
    3596:	96 17       	cp	r25, r22
    3598:	08 f0       	brcs	.+2      	; 0x359c <__udivmodqi4_ep>
    359a:	96 1b       	sub	r25, r22

0000359c <__udivmodqi4_ep>:
    359c:	88 1f       	adc	r24, r24
    359e:	7a 95       	dec	r23
    35a0:	c9 f7       	brne	.-14     	; 0x3594 <__udivmodqi4_loop>
    35a2:	80 95       	com	r24
    35a4:	08 95       	ret

000035a6 <__divmodhi4>:
    35a6:	97 fb       	bst	r25, 7
    35a8:	07 2e       	mov	r0, r23
    35aa:	16 f4       	brtc	.+4      	; 0x35b0 <__divmodhi4+0xa>
    35ac:	00 94       	com	r0
    35ae:	07 d0       	rcall	.+14     	; 0x35be <__divmodhi4_neg1>
    35b0:	77 fd       	sbrc	r23, 7
    35b2:	09 d0       	rcall	.+18     	; 0x35c6 <__divmodhi4_neg2>
    35b4:	0e 94 16 1c 	call	0x382c	; 0x382c <__udivmodhi4>
    35b8:	07 fc       	sbrc	r0, 7
    35ba:	05 d0       	rcall	.+10     	; 0x35c6 <__divmodhi4_neg2>
    35bc:	3e f4       	brtc	.+14     	; 0x35cc <__divmodhi4_exit>

000035be <__divmodhi4_neg1>:
    35be:	90 95       	com	r25
    35c0:	81 95       	neg	r24
    35c2:	9f 4f       	sbci	r25, 0xFF	; 255
    35c4:	08 95       	ret

000035c6 <__divmodhi4_neg2>:
    35c6:	70 95       	com	r23
    35c8:	61 95       	neg	r22
    35ca:	7f 4f       	sbci	r23, 0xFF	; 255

000035cc <__divmodhi4_exit>:
    35cc:	08 95       	ret

000035ce <__divmodsi4>:
    35ce:	05 2e       	mov	r0, r21
    35d0:	97 fb       	bst	r25, 7
    35d2:	1e f4       	brtc	.+6      	; 0x35da <__divmodsi4+0xc>
    35d4:	00 94       	com	r0
    35d6:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <__negsi2>
    35da:	57 fd       	sbrc	r21, 7
    35dc:	07 d0       	rcall	.+14     	; 0x35ec <__divmodsi4_neg2>
    35de:	0e 94 2a 1c 	call	0x3854	; 0x3854 <__udivmodsi4>
    35e2:	07 fc       	sbrc	r0, 7
    35e4:	03 d0       	rcall	.+6      	; 0x35ec <__divmodsi4_neg2>
    35e6:	4e f4       	brtc	.+18     	; 0x35fa <__divmodsi4_exit>
    35e8:	0c 94 fe 1a 	jmp	0x35fc	; 0x35fc <__negsi2>

000035ec <__divmodsi4_neg2>:
    35ec:	50 95       	com	r21
    35ee:	40 95       	com	r20
    35f0:	30 95       	com	r19
    35f2:	21 95       	neg	r18
    35f4:	3f 4f       	sbci	r19, 0xFF	; 255
    35f6:	4f 4f       	sbci	r20, 0xFF	; 255
    35f8:	5f 4f       	sbci	r21, 0xFF	; 255

000035fa <__divmodsi4_exit>:
    35fa:	08 95       	ret

000035fc <__negsi2>:
    35fc:	90 95       	com	r25
    35fe:	80 95       	com	r24
    3600:	70 95       	com	r23
    3602:	61 95       	neg	r22
    3604:	7f 4f       	sbci	r23, 0xFF	; 255
    3606:	8f 4f       	sbci	r24, 0xFF	; 255
    3608:	9f 4f       	sbci	r25, 0xFF	; 255
    360a:	08 95       	ret

0000360c <__tablejump2__>:
    360c:	ee 0f       	add	r30, r30
    360e:	ff 1f       	adc	r31, r31
    3610:	05 90       	lpm	r0, Z+
    3612:	f4 91       	lpm	r31, Z
    3614:	e0 2d       	mov	r30, r0
    3616:	09 94       	ijmp

00003618 <__moddi3>:
    3618:	68 94       	set
    361a:	01 c0       	rjmp	.+2      	; 0x361e <__divdi3_moddi3>

0000361c <__divdi3>:
    361c:	e8 94       	clt

0000361e <__divdi3_moddi3>:
    361e:	f9 2f       	mov	r31, r25
    3620:	f1 2b       	or	r31, r17
    3622:	12 f0       	brmi	.+4      	; 0x3628 <__divdi3_moddi3+0xa>
    3624:	0c 94 40 1b 	jmp	0x3680	; 0x3680 <__udivdi3_umoddi3>
    3628:	a0 e0       	ldi	r26, 0x00	; 0
    362a:	b0 e0       	ldi	r27, 0x00	; 0
    362c:	ea e1       	ldi	r30, 0x1A	; 26
    362e:	fb e1       	ldi	r31, 0x1B	; 27
    3630:	0c 94 b2 1b 	jmp	0x3764	; 0x3764 <__prologue_saves__+0xc>
    3634:	09 2e       	mov	r0, r25
    3636:	05 94       	asr	r0
    3638:	22 f4       	brpl	.+8      	; 0x3642 <__divdi3_moddi3+0x24>
    363a:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__negdi2>
    363e:	11 23       	and	r17, r17
    3640:	92 f4       	brpl	.+36     	; 0x3666 <__divdi3_moddi3+0x48>
    3642:	f0 e8       	ldi	r31, 0x80	; 128
    3644:	0f 26       	eor	r0, r31
    3646:	ff ef       	ldi	r31, 0xFF	; 255
    3648:	e0 94       	com	r14
    364a:	f0 94       	com	r15
    364c:	00 95       	com	r16
    364e:	10 95       	com	r17
    3650:	b0 94       	com	r11
    3652:	c0 94       	com	r12
    3654:	d0 94       	com	r13
    3656:	a1 94       	neg	r10
    3658:	bf 0a       	sbc	r11, r31
    365a:	cf 0a       	sbc	r12, r31
    365c:	df 0a       	sbc	r13, r31
    365e:	ef 0a       	sbc	r14, r31
    3660:	ff 0a       	sbc	r15, r31
    3662:	0f 0b       	sbc	r16, r31
    3664:	1f 0b       	sbc	r17, r31
    3666:	0e 94 4b 1b 	call	0x3696	; 0x3696 <__udivmod64>
    366a:	07 fc       	sbrc	r0, 7
    366c:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__negdi2>
    3670:	cd b7       	in	r28, 0x3d	; 61
    3672:	de b7       	in	r29, 0x3e	; 62
    3674:	ec e0       	ldi	r30, 0x0C	; 12
    3676:	0c 94 ce 1b 	jmp	0x379c	; 0x379c <__epilogue_restores__+0xc>

0000367a <__umoddi3>:
    367a:	68 94       	set
    367c:	01 c0       	rjmp	.+2      	; 0x3680 <__udivdi3_umoddi3>

0000367e <__udivdi3>:
    367e:	e8 94       	clt

00003680 <__udivdi3_umoddi3>:
    3680:	8f 92       	push	r8
    3682:	9f 92       	push	r9
    3684:	cf 93       	push	r28
    3686:	df 93       	push	r29
    3688:	0e 94 4b 1b 	call	0x3696	; 0x3696 <__udivmod64>
    368c:	df 91       	pop	r29
    368e:	cf 91       	pop	r28
    3690:	9f 90       	pop	r9
    3692:	8f 90       	pop	r8
    3694:	08 95       	ret

00003696 <__udivmod64>:
    3696:	88 24       	eor	r8, r8
    3698:	99 24       	eor	r9, r9
    369a:	f4 01       	movw	r30, r8
    369c:	e4 01       	movw	r28, r8
    369e:	b0 e4       	ldi	r27, 0x40	; 64
    36a0:	9f 93       	push	r25
    36a2:	aa 27       	eor	r26, r26
    36a4:	9a 15       	cp	r25, r10
    36a6:	8b 04       	cpc	r8, r11
    36a8:	9c 04       	cpc	r9, r12
    36aa:	ed 05       	cpc	r30, r13
    36ac:	fe 05       	cpc	r31, r14
    36ae:	cf 05       	cpc	r28, r15
    36b0:	d0 07       	cpc	r29, r16
    36b2:	a1 07       	cpc	r26, r17
    36b4:	98 f4       	brcc	.+38     	; 0x36dc <__udivmod64+0x46>
    36b6:	ad 2f       	mov	r26, r29
    36b8:	dc 2f       	mov	r29, r28
    36ba:	cf 2f       	mov	r28, r31
    36bc:	fe 2f       	mov	r31, r30
    36be:	e9 2d       	mov	r30, r9
    36c0:	98 2c       	mov	r9, r8
    36c2:	89 2e       	mov	r8, r25
    36c4:	98 2f       	mov	r25, r24
    36c6:	87 2f       	mov	r24, r23
    36c8:	76 2f       	mov	r23, r22
    36ca:	65 2f       	mov	r22, r21
    36cc:	54 2f       	mov	r21, r20
    36ce:	43 2f       	mov	r20, r19
    36d0:	32 2f       	mov	r19, r18
    36d2:	22 27       	eor	r18, r18
    36d4:	b8 50       	subi	r27, 0x08	; 8
    36d6:	31 f7       	brne	.-52     	; 0x36a4 <__udivmod64+0xe>
    36d8:	bf 91       	pop	r27
    36da:	27 c0       	rjmp	.+78     	; 0x372a <__udivmod64+0x94>
    36dc:	1b 2e       	mov	r1, r27
    36de:	bf 91       	pop	r27
    36e0:	bb 27       	eor	r27, r27
    36e2:	22 0f       	add	r18, r18
    36e4:	33 1f       	adc	r19, r19
    36e6:	44 1f       	adc	r20, r20
    36e8:	55 1f       	adc	r21, r21
    36ea:	66 1f       	adc	r22, r22
    36ec:	77 1f       	adc	r23, r23
    36ee:	88 1f       	adc	r24, r24
    36f0:	99 1f       	adc	r25, r25
    36f2:	88 1c       	adc	r8, r8
    36f4:	99 1c       	adc	r9, r9
    36f6:	ee 1f       	adc	r30, r30
    36f8:	ff 1f       	adc	r31, r31
    36fa:	cc 1f       	adc	r28, r28
    36fc:	dd 1f       	adc	r29, r29
    36fe:	aa 1f       	adc	r26, r26
    3700:	bb 1f       	adc	r27, r27
    3702:	8a 14       	cp	r8, r10
    3704:	9b 04       	cpc	r9, r11
    3706:	ec 05       	cpc	r30, r12
    3708:	fd 05       	cpc	r31, r13
    370a:	ce 05       	cpc	r28, r14
    370c:	df 05       	cpc	r29, r15
    370e:	a0 07       	cpc	r26, r16
    3710:	b1 07       	cpc	r27, r17
    3712:	48 f0       	brcs	.+18     	; 0x3726 <__udivmod64+0x90>
    3714:	8a 18       	sub	r8, r10
    3716:	9b 08       	sbc	r9, r11
    3718:	ec 09       	sbc	r30, r12
    371a:	fd 09       	sbc	r31, r13
    371c:	ce 09       	sbc	r28, r14
    371e:	df 09       	sbc	r29, r15
    3720:	a0 0b       	sbc	r26, r16
    3722:	b1 0b       	sbc	r27, r17
    3724:	21 60       	ori	r18, 0x01	; 1
    3726:	1a 94       	dec	r1
    3728:	e1 f6       	brne	.-72     	; 0x36e2 <__udivmod64+0x4c>
    372a:	2e f4       	brtc	.+10     	; 0x3736 <__udivmod64+0xa0>
    372c:	94 01       	movw	r18, r8
    372e:	af 01       	movw	r20, r30
    3730:	be 01       	movw	r22, r28
    3732:	cd 01       	movw	r24, r26
    3734:	00 0c       	add	r0, r0
    3736:	08 95       	ret

00003738 <__negdi2>:
    3738:	60 95       	com	r22
    373a:	70 95       	com	r23
    373c:	80 95       	com	r24
    373e:	90 95       	com	r25
    3740:	30 95       	com	r19
    3742:	40 95       	com	r20
    3744:	50 95       	com	r21
    3746:	21 95       	neg	r18
    3748:	3f 4f       	sbci	r19, 0xFF	; 255
    374a:	4f 4f       	sbci	r20, 0xFF	; 255
    374c:	5f 4f       	sbci	r21, 0xFF	; 255
    374e:	6f 4f       	sbci	r22, 0xFF	; 255
    3750:	7f 4f       	sbci	r23, 0xFF	; 255
    3752:	8f 4f       	sbci	r24, 0xFF	; 255
    3754:	9f 4f       	sbci	r25, 0xFF	; 255
    3756:	08 95       	ret

00003758 <__prologue_saves__>:
    3758:	2f 92       	push	r2
    375a:	3f 92       	push	r3
    375c:	4f 92       	push	r4
    375e:	5f 92       	push	r5
    3760:	6f 92       	push	r6
    3762:	7f 92       	push	r7
    3764:	8f 92       	push	r8
    3766:	9f 92       	push	r9
    3768:	af 92       	push	r10
    376a:	bf 92       	push	r11
    376c:	cf 92       	push	r12
    376e:	df 92       	push	r13
    3770:	ef 92       	push	r14
    3772:	ff 92       	push	r15
    3774:	0f 93       	push	r16
    3776:	1f 93       	push	r17
    3778:	cf 93       	push	r28
    377a:	df 93       	push	r29
    377c:	cd b7       	in	r28, 0x3d	; 61
    377e:	de b7       	in	r29, 0x3e	; 62
    3780:	ca 1b       	sub	r28, r26
    3782:	db 0b       	sbc	r29, r27
    3784:	0f b6       	in	r0, 0x3f	; 63
    3786:	f8 94       	cli
    3788:	de bf       	out	0x3e, r29	; 62
    378a:	0f be       	out	0x3f, r0	; 63
    378c:	cd bf       	out	0x3d, r28	; 61
    378e:	09 94       	ijmp

00003790 <__epilogue_restores__>:
    3790:	2a 88       	ldd	r2, Y+18	; 0x12
    3792:	39 88       	ldd	r3, Y+17	; 0x11
    3794:	48 88       	ldd	r4, Y+16	; 0x10
    3796:	5f 84       	ldd	r5, Y+15	; 0x0f
    3798:	6e 84       	ldd	r6, Y+14	; 0x0e
    379a:	7d 84       	ldd	r7, Y+13	; 0x0d
    379c:	8c 84       	ldd	r8, Y+12	; 0x0c
    379e:	9b 84       	ldd	r9, Y+11	; 0x0b
    37a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    37a2:	b9 84       	ldd	r11, Y+9	; 0x09
    37a4:	c8 84       	ldd	r12, Y+8	; 0x08
    37a6:	df 80       	ldd	r13, Y+7	; 0x07
    37a8:	ee 80       	ldd	r14, Y+6	; 0x06
    37aa:	fd 80       	ldd	r15, Y+5	; 0x05
    37ac:	0c 81       	ldd	r16, Y+4	; 0x04
    37ae:	1b 81       	ldd	r17, Y+3	; 0x03
    37b0:	aa 81       	ldd	r26, Y+2	; 0x02
    37b2:	b9 81       	ldd	r27, Y+1	; 0x01
    37b4:	ce 0f       	add	r28, r30
    37b6:	d1 1d       	adc	r29, r1
    37b8:	0f b6       	in	r0, 0x3f	; 63
    37ba:	f8 94       	cli
    37bc:	de bf       	out	0x3e, r29	; 62
    37be:	0f be       	out	0x3f, r0	; 63
    37c0:	cd bf       	out	0x3d, r28	; 61
    37c2:	ed 01       	movw	r28, r26
    37c4:	08 95       	ret

000037c6 <__adddi3>:
    37c6:	2a 0d       	add	r18, r10
    37c8:	3b 1d       	adc	r19, r11
    37ca:	4c 1d       	adc	r20, r12
    37cc:	5d 1d       	adc	r21, r13
    37ce:	6e 1d       	adc	r22, r14
    37d0:	7f 1d       	adc	r23, r15
    37d2:	80 1f       	adc	r24, r16
    37d4:	91 1f       	adc	r25, r17
    37d6:	08 95       	ret

000037d8 <__adddi3_s8>:
    37d8:	00 24       	eor	r0, r0
    37da:	a7 fd       	sbrc	r26, 7
    37dc:	00 94       	com	r0
    37de:	2a 0f       	add	r18, r26
    37e0:	30 1d       	adc	r19, r0
    37e2:	40 1d       	adc	r20, r0
    37e4:	50 1d       	adc	r21, r0
    37e6:	60 1d       	adc	r22, r0
    37e8:	70 1d       	adc	r23, r0
    37ea:	80 1d       	adc	r24, r0
    37ec:	90 1d       	adc	r25, r0
    37ee:	08 95       	ret

000037f0 <__subdi3>:
    37f0:	2a 19       	sub	r18, r10
    37f2:	3b 09       	sbc	r19, r11
    37f4:	4c 09       	sbc	r20, r12
    37f6:	5d 09       	sbc	r21, r13
    37f8:	6e 09       	sbc	r22, r14
    37fa:	7f 09       	sbc	r23, r15
    37fc:	80 0b       	sbc	r24, r16
    37fe:	91 0b       	sbc	r25, r17
    3800:	08 95       	ret

00003802 <__cmpdi2>:
    3802:	2a 15       	cp	r18, r10
    3804:	3b 05       	cpc	r19, r11
    3806:	4c 05       	cpc	r20, r12
    3808:	5d 05       	cpc	r21, r13
    380a:	6e 05       	cpc	r22, r14
    380c:	7f 05       	cpc	r23, r15
    380e:	80 07       	cpc	r24, r16
    3810:	91 07       	cpc	r25, r17
    3812:	08 95       	ret

00003814 <__cmpdi2_s8>:
    3814:	00 24       	eor	r0, r0
    3816:	a7 fd       	sbrc	r26, 7
    3818:	00 94       	com	r0
    381a:	2a 17       	cp	r18, r26
    381c:	30 05       	cpc	r19, r0
    381e:	40 05       	cpc	r20, r0
    3820:	50 05       	cpc	r21, r0
    3822:	60 05       	cpc	r22, r0
    3824:	70 05       	cpc	r23, r0
    3826:	80 05       	cpc	r24, r0
    3828:	90 05       	cpc	r25, r0
    382a:	08 95       	ret

0000382c <__udivmodhi4>:
    382c:	aa 1b       	sub	r26, r26
    382e:	bb 1b       	sub	r27, r27
    3830:	51 e1       	ldi	r21, 0x11	; 17
    3832:	07 c0       	rjmp	.+14     	; 0x3842 <__udivmodhi4_ep>

00003834 <__udivmodhi4_loop>:
    3834:	aa 1f       	adc	r26, r26
    3836:	bb 1f       	adc	r27, r27
    3838:	a6 17       	cp	r26, r22
    383a:	b7 07       	cpc	r27, r23
    383c:	10 f0       	brcs	.+4      	; 0x3842 <__udivmodhi4_ep>
    383e:	a6 1b       	sub	r26, r22
    3840:	b7 0b       	sbc	r27, r23

00003842 <__udivmodhi4_ep>:
    3842:	88 1f       	adc	r24, r24
    3844:	99 1f       	adc	r25, r25
    3846:	5a 95       	dec	r21
    3848:	a9 f7       	brne	.-22     	; 0x3834 <__udivmodhi4_loop>
    384a:	80 95       	com	r24
    384c:	90 95       	com	r25
    384e:	bc 01       	movw	r22, r24
    3850:	cd 01       	movw	r24, r26
    3852:	08 95       	ret

00003854 <__udivmodsi4>:
    3854:	a1 e2       	ldi	r26, 0x21	; 33
    3856:	1a 2e       	mov	r1, r26
    3858:	aa 1b       	sub	r26, r26
    385a:	bb 1b       	sub	r27, r27
    385c:	fd 01       	movw	r30, r26
    385e:	0d c0       	rjmp	.+26     	; 0x387a <__udivmodsi4_ep>

00003860 <__udivmodsi4_loop>:
    3860:	aa 1f       	adc	r26, r26
    3862:	bb 1f       	adc	r27, r27
    3864:	ee 1f       	adc	r30, r30
    3866:	ff 1f       	adc	r31, r31
    3868:	a2 17       	cp	r26, r18
    386a:	b3 07       	cpc	r27, r19
    386c:	e4 07       	cpc	r30, r20
    386e:	f5 07       	cpc	r31, r21
    3870:	20 f0       	brcs	.+8      	; 0x387a <__udivmodsi4_ep>
    3872:	a2 1b       	sub	r26, r18
    3874:	b3 0b       	sbc	r27, r19
    3876:	e4 0b       	sbc	r30, r20
    3878:	f5 0b       	sbc	r31, r21

0000387a <__udivmodsi4_ep>:
    387a:	66 1f       	adc	r22, r22
    387c:	77 1f       	adc	r23, r23
    387e:	88 1f       	adc	r24, r24
    3880:	99 1f       	adc	r25, r25
    3882:	1a 94       	dec	r1
    3884:	69 f7       	brne	.-38     	; 0x3860 <__udivmodsi4_loop>
    3886:	60 95       	com	r22
    3888:	70 95       	com	r23
    388a:	80 95       	com	r24
    388c:	90 95       	com	r25
    388e:	9b 01       	movw	r18, r22
    3890:	ac 01       	movw	r20, r24
    3892:	bd 01       	movw	r22, r26
    3894:	cf 01       	movw	r24, r30
    3896:	08 95       	ret

00003898 <atoi>:
    3898:	fc 01       	movw	r30, r24
    389a:	88 27       	eor	r24, r24
    389c:	99 27       	eor	r25, r25
    389e:	e8 94       	clt
    38a0:	21 91       	ld	r18, Z+
    38a2:	20 32       	cpi	r18, 0x20	; 32
    38a4:	e9 f3       	breq	.-6      	; 0x38a0 <atoi+0x8>
    38a6:	29 30       	cpi	r18, 0x09	; 9
    38a8:	10 f0       	brcs	.+4      	; 0x38ae <atoi+0x16>
    38aa:	2e 30       	cpi	r18, 0x0E	; 14
    38ac:	c8 f3       	brcs	.-14     	; 0x38a0 <atoi+0x8>
    38ae:	2b 32       	cpi	r18, 0x2B	; 43
    38b0:	41 f0       	breq	.+16     	; 0x38c2 <atoi+0x2a>
    38b2:	2d 32       	cpi	r18, 0x2D	; 45
    38b4:	39 f4       	brne	.+14     	; 0x38c4 <atoi+0x2c>
    38b6:	68 94       	set
    38b8:	04 c0       	rjmp	.+8      	; 0x38c2 <atoi+0x2a>
    38ba:	0e 94 80 1c 	call	0x3900	; 0x3900 <__mulhi_const_10>
    38be:	82 0f       	add	r24, r18
    38c0:	91 1d       	adc	r25, r1
    38c2:	21 91       	ld	r18, Z+
    38c4:	20 53       	subi	r18, 0x30	; 48
    38c6:	2a 30       	cpi	r18, 0x0A	; 10
    38c8:	c0 f3       	brcs	.-16     	; 0x38ba <atoi+0x22>
    38ca:	1e f4       	brtc	.+6      	; 0x38d2 <atoi+0x3a>
    38cc:	90 95       	com	r25
    38ce:	81 95       	neg	r24
    38d0:	9f 4f       	sbci	r25, 0xFF	; 255
    38d2:	08 95       	ret

000038d4 <itoa>:
    38d4:	45 32       	cpi	r20, 0x25	; 37
    38d6:	51 05       	cpc	r21, r1
    38d8:	20 f4       	brcc	.+8      	; 0x38e2 <itoa+0xe>
    38da:	42 30       	cpi	r20, 0x02	; 2
    38dc:	10 f0       	brcs	.+4      	; 0x38e2 <itoa+0xe>
    38de:	0c 94 75 1c 	jmp	0x38ea	; 0x38ea <__itoa_ncheck>
    38e2:	fb 01       	movw	r30, r22
    38e4:	10 82       	st	Z, r1
    38e6:	cb 01       	movw	r24, r22
    38e8:	08 95       	ret

000038ea <__itoa_ncheck>:
    38ea:	bb 27       	eor	r27, r27
    38ec:	4a 30       	cpi	r20, 0x0A	; 10
    38ee:	31 f4       	brne	.+12     	; 0x38fc <__itoa_ncheck+0x12>
    38f0:	99 23       	and	r25, r25
    38f2:	22 f4       	brpl	.+8      	; 0x38fc <__itoa_ncheck+0x12>
    38f4:	bd e2       	ldi	r27, 0x2D	; 45
    38f6:	90 95       	com	r25
    38f8:	81 95       	neg	r24
    38fa:	9f 4f       	sbci	r25, 0xFF	; 255
    38fc:	0c 94 89 1c 	jmp	0x3912	; 0x3912 <__utoa_common>

00003900 <__mulhi_const_10>:
    3900:	7a e0       	ldi	r23, 0x0A	; 10
    3902:	97 9f       	mul	r25, r23
    3904:	90 2d       	mov	r25, r0
    3906:	87 9f       	mul	r24, r23
    3908:	80 2d       	mov	r24, r0
    390a:	91 0d       	add	r25, r1
    390c:	11 24       	eor	r1, r1
    390e:	08 95       	ret

00003910 <__utoa_ncheck>:
    3910:	bb 27       	eor	r27, r27

00003912 <__utoa_common>:
    3912:	fb 01       	movw	r30, r22
    3914:	55 27       	eor	r21, r21
    3916:	aa 27       	eor	r26, r26
    3918:	88 0f       	add	r24, r24
    391a:	99 1f       	adc	r25, r25
    391c:	aa 1f       	adc	r26, r26
    391e:	a4 17       	cp	r26, r20
    3920:	10 f0       	brcs	.+4      	; 0x3926 <__utoa_common+0x14>
    3922:	a4 1b       	sub	r26, r20
    3924:	83 95       	inc	r24
    3926:	50 51       	subi	r21, 0x10	; 16
    3928:	b9 f7       	brne	.-18     	; 0x3918 <__utoa_common+0x6>
    392a:	a0 5d       	subi	r26, 0xD0	; 208
    392c:	aa 33       	cpi	r26, 0x3A	; 58
    392e:	08 f0       	brcs	.+2      	; 0x3932 <__utoa_common+0x20>
    3930:	a9 5d       	subi	r26, 0xD9	; 217
    3932:	a1 93       	st	Z+, r26
    3934:	00 97       	sbiw	r24, 0x00	; 0
    3936:	79 f7       	brne	.-34     	; 0x3916 <__utoa_common+0x4>
    3938:	b1 11       	cpse	r27, r1
    393a:	b1 93       	st	Z+, r27
    393c:	11 92       	st	Z+, r1
    393e:	cb 01       	movw	r24, r22
    3940:	0c 94 a2 1c 	jmp	0x3944	; 0x3944 <strrev>

00003944 <strrev>:
    3944:	dc 01       	movw	r26, r24
    3946:	fc 01       	movw	r30, r24
    3948:	67 2f       	mov	r22, r23
    394a:	71 91       	ld	r23, Z+
    394c:	77 23       	and	r23, r23
    394e:	e1 f7       	brne	.-8      	; 0x3948 <strrev+0x4>
    3950:	32 97       	sbiw	r30, 0x02	; 2
    3952:	04 c0       	rjmp	.+8      	; 0x395c <strrev+0x18>
    3954:	7c 91       	ld	r23, X
    3956:	6d 93       	st	X+, r22
    3958:	70 83       	st	Z, r23
    395a:	62 91       	ld	r22, -Z
    395c:	ae 17       	cp	r26, r30
    395e:	bf 07       	cpc	r27, r31
    3960:	c8 f3       	brcs	.-14     	; 0x3954 <strrev+0x10>
    3962:	08 95       	ret

00003964 <_exit>:
    3964:	f8 94       	cli

00003966 <__stop_program>:
    3966:	ff cf       	rjmp	.-2      	; 0x3966 <__stop_program>
